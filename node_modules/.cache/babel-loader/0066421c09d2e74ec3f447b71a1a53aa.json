{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar colors = require('chalk');\n\nvar utils = require('./utils');\n\nvar repeat = utils.repeat;\nvar truncate = utils.truncate;\n/**\n * Table constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Table(options) {\n  this.options = utils.options({\n    chars: {\n      'top': '─',\n      'top-mid': '┬',\n      'top-left': '┌',\n      'top-right': '┐',\n      'bottom': '─',\n      'bottom-mid': '┴',\n      'bottom-left': '└',\n      'bottom-right': '┘',\n      'left': '│',\n      'left-mid': '├',\n      'mid': '─',\n      'mid-mid': '┼',\n      'right': '│',\n      'right-mid': '┤',\n      'middle': '│'\n    },\n    truncate: '…',\n    colWidths: [],\n    colAligns: [],\n    style: {\n      'padding-left': 1,\n      'padding-right': 1,\n      head: ['red'],\n      border: ['grey'],\n      compact: false\n    },\n    head: []\n  }, options);\n\n  if (options.borders == false) {\n    this.options.chars = {\n      'top': '',\n      'top-mid': '',\n      'top-left': '',\n      'top-right': '',\n      'bottom': '',\n      'bottom-mid': '',\n      'bottom-left': '',\n      'bottom-right': '',\n      'left': '',\n      'left-mid': '',\n      'mid': '',\n      'mid-mid': '',\n      'right': '',\n      'right-mid': '',\n      'middle': ''\n    };\n  }\n}\n\n;\n/**\n * Inherit from Array.\n */\n\nTable.prototype = new Array();\n/**\n * Width getter\n *\n * @return {Number} width\n * @api public\n */\n\nTable.prototype.__defineGetter__('width', function () {\n  var str = this.toString().split('\\n');\n  if (str.length) return str[0].length;\n  return 0;\n});\n/**\n * Render to a string.\n *\n * @return {String} table representation\n * @api public\n */\n\n\nTable.prototype.render = Table.prototype.toString = function () {\n  var ret = '';\n  var options = this.options;\n  var style = options.style;\n  var head = options.head;\n  var chars = options.chars;\n  var truncater = options.truncate;\n  var colWidths = options.colWidths || new Array(this.head.length);\n  var totalWidth = 0;\n  if (!head.length && !this.length) return '';\n\n  if (!colWidths.length) {\n    var everyRows = this.slice(0);\n\n    if (head.length) {\n      everyRows = everyRows.concat([head]);\n    }\n\n    ;\n    everyRows.forEach(function (cells) {\n      // horizontal (arrays)\n      if (Array.isArray(cells) && cells.length) {\n        extractColumnWidths(cells); // vertical (objects)\n      } else {\n        var headerCell = Object.keys(cells)[0];\n        var valueCell = cells[headerCell];\n        colWidths[0] = Math.max(colWidths[0] || 0, getWidth(headerCell) || 0); // cross (objects w/ array values)\n\n        if (Array.isArray(valueCell) && valueCell.length) {\n          extractColumnWidths(valueCell, 1);\n        } else {\n          colWidths[1] = Math.max(colWidths[1] || 0, getWidth(valueCell) || 0);\n        }\n      }\n    });\n  }\n\n  ;\n  totalWidth = (colWidths.length === 1 ? colWidths[0] : colWidths.reduce(function (a, b) {\n    return a + b;\n  })) + colWidths.length + 1;\n\n  function extractColumnWidths(arr, offset) {\n    offset = offset || 0;\n    arr.forEach(function (cell, i) {\n      colWidths[i + offset] = Math.max(colWidths[i + offset] || 0, getWidth(cell) || 0);\n    });\n  }\n\n  ;\n\n  function getWidth(obj) {\n    return typeof obj === 'object' && obj && obj.width !== undefined ? obj.width : (typeof obj === 'object' && obj !== null ? utils.strlen(obj.text) : utils.strlen(obj)) + (style['padding-left'] || 0) + (style['padding-right'] || 0);\n  } // draws a line\n\n\n  function line(line, left, right, intersection) {\n    var width = 0;\n    line = left + repeat(line, totalWidth - 2) + right;\n    colWidths.forEach(function (w, i) {\n      if (i === colWidths.length - 1) return;\n      width += w + 1;\n      line = line.substr(0, width) + intersection + line.substr(width + 1);\n    });\n    return applyStyles(options.style.border, line);\n  }\n\n  ; // draws the top line\n\n  function lineTop() {\n    var l = line(chars.top, chars['top-left'] || chars.top, chars['top-right'] || chars.top, chars['top-mid']);\n\n    if (l) {\n      ret += l + '\\n';\n    }\n  }\n\n  ;\n\n  function generateRow(items, style) {\n    var cells = [];\n    var maxHeight = 0; // prepare vertical and cross table data\n\n    if (!Array.isArray(items) && typeof items === 'object') {\n      var key = Object.keys(items)[0];\n      var value = items[key];\n      var firstCellHead = true;\n\n      if (Array.isArray(value)) {\n        items = value;\n        items.unshift(key);\n      } else {\n        items = [key, value];\n      }\n    } // transform array of item strings into structure of cells\n\n\n    items.forEach(function (item, i) {\n      var contents = (item === null || item === undefined ? '' : item).toString().split('\\n').reduce(function (memo, l) {\n        memo.push(string(l, i));\n        return memo;\n      }, []);\n      var height = contents.length;\n\n      if (height > maxHeight) {\n        maxHeight = height;\n      }\n\n      ;\n      cells.push({\n        contents: contents,\n        height: height\n      });\n    }); // transform vertical cells into horizontal lines\n\n    var lines = new Array(maxHeight);\n    cells.forEach(function (cell, i) {\n      cell.contents.forEach(function (line, j) {\n        if (!lines[j]) {\n          lines[j] = [];\n        }\n\n        ;\n\n        if (style || firstCellHead && i === 0 && options.style.head) {\n          line = applyStyles(options.style.head, line);\n        }\n\n        lines[j].push(line);\n      }); // populate empty lines in cell\n\n      for (var j = cell.height, l = maxHeight; j < l; j++) {\n        if (!lines[j]) {\n          lines[j] = [];\n        }\n\n        ;\n        lines[j].push(string('', i));\n      }\n    });\n    var ret = '';\n    lines.forEach(function (line, index) {\n      if (ret.length > 0) {\n        ret += '\\n' + applyStyles(options.style.border, chars.left);\n      }\n\n      ret += line.join(applyStyles(options.style.border, chars.middle)) + applyStyles(options.style.border, chars.right);\n    });\n    return applyStyles(options.style.border, chars.left) + ret;\n  }\n\n  ;\n\n  function applyStyles(styles, subject) {\n    if (!subject) {\n      return '';\n    }\n\n    styles.forEach(function (style) {\n      subject = colors[style](subject);\n    });\n    return subject;\n  }\n\n  ; // renders a string, by padding it or truncating it\n\n  function string(str, index) {\n    str = String(typeof str === 'object' && str.text ? str.text : str);\n    var length = utils.strlen(str);\n    var width = colWidths[index] - (style['padding-left'] || 0) - (style['padding-right'] || 0);\n    var align = options.colAligns[index] || 'left';\n    return repeat(' ', style['padding-left'] || 0) + (length === width ? str : length < width ? str.padEnd(width + (str.length - length), ' ', align === 'left' ? 'right' : align === 'middle' ? 'both' : 'left') : truncater ? truncate(str, width, truncater) : str) + repeat(' ', style['padding-right'] || 0);\n  }\n\n  ;\n\n  if (head.length) {\n    lineTop();\n    ret += generateRow(head, style.head) + '\\n';\n  }\n\n  if (this.length) {\n    this.forEach(function (cells, i) {\n      if (!head.length && i === 0) {\n        lineTop();\n      } else {\n        if (!style.compact || i < !!head.length ? 1 : 0 || cells.length === 0) {\n          var l = line(chars.mid, chars['left-mid'], chars['right-mid'], chars['mid-mid']);\n\n          if (l) {\n            ret += l + '\\n';\n          }\n        }\n      }\n\n      if (Array.isArray(cells) && !cells.length) {\n        return;\n      } else {\n        ret += generateRow(cells) + '\\n';\n      }\n\n      ;\n    });\n  }\n\n  var l = line(chars.bottom, chars['bottom-left'] || chars.bottom, chars['bottom-right'] || chars.bottom, chars['bottom-mid']);\n\n  if (l) {\n    ret += l;\n  } else {\n    // trim the last '\\n' if we didn't add the bottom decoration\n    ret = ret.slice(0, -1);\n  }\n\n  return ret;\n};\n/**\n * Module exports.\n */\n\n\nmodule.exports = Table;\nmodule.exports.version = '2.0.0';","map":{"version":3,"sources":["/Users/samianki/node_modules/cli-tableau/lib/index.js"],"names":["colors","require","utils","repeat","truncate","Table","options","chars","colWidths","colAligns","style","head","border","compact","borders","prototype","Array","__defineGetter__","str","toString","split","length","render","ret","truncater","totalWidth","everyRows","slice","concat","forEach","cells","isArray","extractColumnWidths","headerCell","Object","keys","valueCell","Math","max","getWidth","reduce","a","b","arr","offset","cell","i","obj","width","undefined","strlen","text","line","left","right","intersection","w","substr","applyStyles","lineTop","l","top","generateRow","items","maxHeight","key","value","firstCellHead","unshift","item","contents","memo","push","string","height","lines","j","index","join","middle","styles","subject","String","align","padEnd","mid","bottom","module","exports","version"],"mappings":"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","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar colors = require('chalk')\nvar utils = require('./utils')\nvar repeat = utils.repeat\nvar truncate = utils.truncate\n\n/**\n * Table constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Table (options) {\n  this.options = utils.options({\n    chars: {\n      'top': '─',\n      'top-mid': '┬',\n      'top-left': '┌',\n      'top-right': '┐',\n      'bottom': '─',\n      'bottom-mid': '┴',\n      'bottom-left': '└',\n      'bottom-right': '┘',\n      'left': '│',\n      'left-mid': '├',\n      'mid': '─',\n      'mid-mid': '┼',\n      'right': '│',\n      'right-mid': '┤',\n      'middle': '│'\n    },\n    truncate: '…',\n    colWidths: [],\n    colAligns: [],\n    style: {\n      'padding-left': 1,\n      'padding-right': 1,\n      head: ['red'],\n      border: ['grey'],\n      compact: false\n    },\n    head: []\n  }, options)\n\n  if (options.borders == false) {\n    this.options.chars =  {\n      'top': '',\n      'top-mid': '',\n      'top-left': '',\n      'top-right': '',\n      'bottom': '',\n      'bottom-mid': '',\n      'bottom-left': '',\n      'bottom-right': '',\n      'left': '',\n      'left-mid': '',\n      'mid': '',\n      'mid-mid': '',\n      'right': '',\n      'right-mid': '',\n      'middle': ''\n    }\n  }\n};\n\n/**\n * Inherit from Array.\n */\n\nTable.prototype = new Array\n\n/**\n * Width getter\n *\n * @return {Number} width\n * @api public\n */\n\nTable.prototype.__defineGetter__('width', function () {\n  var str = this.toString().split('\\n')\n  if (str.length) return str[0].length\n  return 0\n})\n\n/**\n * Render to a string.\n *\n * @return {String} table representation\n * @api public\n */\n\nTable.prototype.render =\nTable.prototype.toString = function () {\n  var ret = ''\n  var options = this.options\n  var style = options.style\n  var head = options.head\n  var chars = options.chars\n  var truncater = options.truncate\n  var colWidths = options.colWidths || new Array(this.head.length)\n  var totalWidth = 0\n\n  if (!head.length && !this.length) return ''\n\n  if (!colWidths.length) {\n    var everyRows = this.slice(0)\n    if (head.length) { everyRows = everyRows.concat([head]) };\n\n    everyRows.forEach(function (cells) {\n        // horizontal (arrays)\n      if (Array.isArray(cells) && cells.length) {\n        extractColumnWidths(cells)\n\n        // vertical (objects)\n      } else {\n        var headerCell = Object.keys(cells)[0]\n        var valueCell = cells[headerCell]\n\n        colWidths[0] = Math.max(colWidths[0] || 0, getWidth(headerCell) || 0)\n\n          // cross (objects w/ array values)\n        if (Array.isArray(valueCell) && valueCell.length) {\n          extractColumnWidths(valueCell, 1)\n        } else {\n          colWidths[1] = Math.max(colWidths[1] || 0, getWidth(valueCell) || 0)\n        }\n      }\n    })\n  };\n\n  totalWidth = (colWidths.length === 1 ? colWidths[0] : colWidths.reduce(\n    function (a, b) {\n      return a + b\n    })) + colWidths.length + 1\n\n  function extractColumnWidths (arr, offset) {\n    offset = offset || 0\n    arr.forEach(function (cell, i) {\n      colWidths[i + offset] = Math.max(colWidths[i + offset] || 0, getWidth(cell) || 0)\n    })\n  };\n\n  function getWidth (obj) {\n    return typeof obj === 'object' && obj && obj.width !== undefined\n         ? obj.width\n         : ((typeof obj === 'object' && obj !== null ? utils.strlen(obj.text) : utils.strlen(obj)) + (style['padding-left'] || 0) + (style['padding-right'] || 0))\n  }\n\n  // draws a line\n  function line (line, left, right, intersection) {\n    var width = 0\n    line = left + repeat(line, totalWidth - 2) + right\n\n    colWidths.forEach(function (w, i) {\n      if (i === colWidths.length - 1) return\n      width += w + 1\n      line = line.substr(0, width) + intersection + line.substr(width + 1)\n    })\n\n    return applyStyles(options.style.border, line)\n  };\n\n  // draws the top line\n  function lineTop () {\n    var l = line(chars.top,\n               chars['top-left'] || chars.top,\n               chars['top-right'] || chars.top,\n               chars['top-mid'])\n    if (l) {\n      ret += l + '\\n'\n    }\n  };\n\n  function generateRow (items, style) {\n    var cells = []\n    var maxHeight = 0\n\n    // prepare vertical and cross table data\n    if (!Array.isArray(items) && typeof items === 'object') {\n      var key = Object.keys(items)[0]\n      var value = items[key]\n      var firstCellHead = true\n\n      if (Array.isArray(value)) {\n        items = value\n        items.unshift(key)\n      } else {\n        items = [key, value]\n      }\n    }\n\n    // transform array of item strings into structure of cells\n    items.forEach(function (item, i) {\n      var contents = (item === null || item === undefined ? '' : item).toString().split('\\n').reduce(function (memo, l) {\n        memo.push(string(l, i))\n        return memo\n      }, [])\n\n      var height = contents.length\n      if (height > maxHeight) { maxHeight = height };\n\n      cells.push({ contents: contents, height: height })\n    })\n\n    // transform vertical cells into horizontal lines\n    var lines = new Array(maxHeight)\n    cells.forEach(function (cell, i) {\n      cell.contents.forEach(function (line, j) {\n        if (!lines[j]) { lines[j] = [] };\n        if (style || (firstCellHead && i === 0 && options.style.head)) {\n          line = applyStyles(options.style.head, line)\n        }\n\n        lines[j].push(line)\n      })\n\n      // populate empty lines in cell\n      for (var j = cell.height, l = maxHeight; j < l; j++) {\n        if (!lines[j]) { lines[j] = [] };\n        lines[j].push(string('', i))\n      }\n    })\n\n    var ret = ''\n    lines.forEach(function (line, index) {\n      if (ret.length > 0) {\n        ret += '\\n' + applyStyles(options.style.border, chars.left)\n      }\n\n      ret += line.join(applyStyles(options.style.border, chars.middle)) + applyStyles(options.style.border, chars.right)\n    })\n\n    return applyStyles(options.style.border, chars.left) + ret\n  };\n\n  function applyStyles (styles, subject) {\n    if (!subject) {\n      return ''\n    }\n\n    styles.forEach(function (style) {\n      subject = colors[style](subject)\n    })\n\n    return subject\n  };\n\n  // renders a string, by padding it or truncating it\n  function string (str, index) {\n    str = String(typeof str === 'object' && str.text ? str.text : str)\n    var length = utils.strlen(str)\n    var width = colWidths[index] - (style['padding-left'] || 0) - (style['padding-right'] || 0)\n    var align = options.colAligns[index] || 'left'\n\n    return repeat(' ', style['padding-left'] || 0) +\n         (length === width ? str\n             : (length < width\n                ? str.padEnd((width + (str.length - length)), ' ', align === 'left' ? 'right'\n                  : (align === 'middle' ? 'both' : 'left'))\n              : (truncater ? truncate(str, width, truncater) : str))\n           ) +\n         repeat(' ', style['padding-right'] || 0)\n  };\n\n  if (head.length) {\n    lineTop()\n\n    ret += generateRow(head, style.head) + '\\n'\n  }\n\n  if (this.length) {\n    this.forEach(function (cells, i) {\n      if (!head.length && i === 0) { lineTop() } else {\n        if (!style.compact || i < (!!head.length) ? 1 : 0 || cells.length === 0) {\n          var l = line(chars.mid\n                     , chars['left-mid']\n                     , chars['right-mid']\n                     , chars['mid-mid'])\n          if (l) { ret += l + '\\n' }\n        }\n      }\n\n      if (Array.isArray(cells) && !cells.length) {\n        return\n      } else {\n        ret += generateRow(cells) + '\\n'\n      };\n    })\n  }\n\n  var l = line(chars.bottom,\n            chars['bottom-left'] || chars.bottom,\n            chars['bottom-right'] || chars.bottom,\n            chars['bottom-mid'])\n  if (l) {\n    ret += l\n  } else {\n    // trim the last '\\n' if we didn't add the bottom decoration\n    ret = ret.slice(0, -1)\n  }\n\n  return ret\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = Table\n\nmodule.exports.version = '2.0.0'\n"]},"metadata":{},"sourceType":"script"}