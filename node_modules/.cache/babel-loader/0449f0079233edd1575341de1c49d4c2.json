{"ast":null,"code":"var cst = require('../../../constants.js');\n\nvar Common = require('../../Common.js');\n\nconst chalk = require('chalk');\n\nconst forEach = require('async/forEach');\n\nconst open = require('../../tools/open.js');\n\nconst semver = require('semver');\n\nconst Modules = require('../Modules');\n\nfunction processesAreAlreadyMonitored(CLI, cb) {\n  CLI.Client.executeRemote('getMonitorData', {}, function (err, list) {\n    if (err) return cb(false);\n    var l = list.filter(l => l.pm2_env.km_link == true);\n    var l2 = list.filter(l => l.name == 'pm2-server-monit');\n    return cb(l.length > 0 && l2.length > 0 ? true : false);\n  });\n}\n\nmodule.exports = function (CLI) {\n  CLI.prototype.openDashboard = function () {\n    if (!this.gl_interact_infos) {\n      Common.printError(chalk.bold.white('Agent if offline, type `$ pm2 plus` to log in'));\n      return this.exitCli(cst.ERROR_EXIT);\n    }\n\n    var uri = `https://app.pm2.io/#/r/${this.gl_interact_infos.public_key}`;\n    console.log(cst.PM2_IO_MSG + ` Opening ${uri}`);\n    open(uri);\n    setTimeout(_ => {\n      this.exitCli();\n    }, 200);\n  };\n\n  CLI.prototype.clearSetup = function (opts, cb) {\n    const modules = ['event-loop-inspector'];\n    this.gl_is_km_linked = false;\n\n    if (semver.satisfies(process.version, '< 10.0.0')) {\n      modules.push('v8-profiler-node8');\n    }\n\n    forEach(modules, (_module, next) => {\n      Modules.uninstall(this, _module, () => {\n        next();\n      });\n    }, err => {\n      this.reload('all', () => {\n        return cb();\n      });\n    });\n  };\n  /**\n   * Install required package and enable flags for current running processes\n   */\n\n\n  CLI.prototype.minimumSetup = function (opts, cb) {\n    var self = this;\n    this.gl_is_km_linked = true;\n\n    function install(cb) {\n      var modules = [];\n\n      if (opts.type === 'enterprise' || opts.type === 'plus') {\n        modules = ['pm2-logrotate', 'pm2-server-monit'];\n\n        if (semver.satisfies(process.version, '< 8.0.0')) {\n          modules.push('v8-profiler-node8');\n        }\n\n        if (opts.type === 'enterprise') {\n          modules.push('deep-metrics');\n        }\n      }\n\n      forEach(modules, (_module, next) => {\n        Modules.install(self, _module, {}, () => {\n          next();\n        });\n      }, err => {\n        self.reload('all', () => {\n          return cb();\n        });\n      });\n    }\n\n    processesAreAlreadyMonitored(self, already_monitored => {\n      if (already_monitored) {\n        console.log(cst.PM2_IO_MSG + ` PM2 ${opts.type || ''} bundle already installed`);\n        return cb();\n      }\n\n      if (opts.installAll) return install(cb); // promptly.confirm(chalk.bold('Install all pm2 plus dependencies ? (y/n)'), (err, answer) => {\n      //   if (!err && answer === true)\n\n      return install(cb); // self.reload('all', () => {\n      //     return cb()\n      //   })\n      // });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/pm2-plus/helpers.js"],"names":["cst","require","Common","chalk","forEach","open","semver","Modules","processesAreAlreadyMonitored","CLI","cb","Client","executeRemote","err","list","l","filter","pm2_env","km_link","l2","name","length","module","exports","prototype","openDashboard","gl_interact_infos","printError","bold","white","exitCli","ERROR_EXIT","uri","public_key","console","log","PM2_IO_MSG","setTimeout","_","clearSetup","opts","modules","gl_is_km_linked","satisfies","process","version","push","_module","next","uninstall","reload","minimumSetup","self","install","type","already_monitored","installAll"],"mappings":"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","sourcesContent":["\nvar cst = require('../../../constants.js');\nvar Common = require('../../Common.js');\n\nconst chalk = require('chalk');\nconst forEach = require('async/forEach');\nconst open = require('../../tools/open.js');\nconst semver = require('semver');\nconst Modules = require('../Modules');\n\nfunction processesAreAlreadyMonitored(CLI, cb) {\n  CLI.Client.executeRemote('getMonitorData', {}, function(err, list) {\n    if (err) return cb(false);\n    var l = list.filter(l => l.pm2_env.km_link == true)\n    var l2 = list.filter(l => l.name == 'pm2-server-monit')\n\n    return cb(l.length > 0 && l2.length > 0 ? true : false)\n  })\n}\n\nmodule.exports = function(CLI) {\n  CLI.prototype.openDashboard = function() {\n    if (!this.gl_interact_infos) {\n      Common.printError(chalk.bold.white('Agent if offline, type `$ pm2 plus` to log in'));\n      return this.exitCli(cst.ERROR_EXIT);\n    }\n\n    var uri = `https://app.pm2.io/#/r/${this.gl_interact_infos.public_key}`\n    console.log(cst.PM2_IO_MSG + ` Opening ${uri}`)\n    open(uri);\n    setTimeout(_ => {\n      this.exitCli();\n    }, 200);\n  };\n\n  CLI.prototype.clearSetup = function (opts, cb) {\n    const modules = ['event-loop-inspector']\n    this.gl_is_km_linked = false\n\n    if (semver.satisfies(process.version, '< 10.0.0')) {\n      modules.push('v8-profiler-node8')\n    }\n\n    forEach(modules, (_module, next) => {\n      Modules.uninstall(this, _module, () => {\n        next()\n      });\n    }, (err) => {\n      this.reload('all', () => {\n        return cb()\n      })\n    })\n  }\n\n  /**\n   * Install required package and enable flags for current running processes\n   */\n  CLI.prototype.minimumSetup = function (opts, cb) {\n    var self = this;\n    this.gl_is_km_linked = true\n\n    function install(cb) {\n      var modules = []\n\n      if (opts.type === 'enterprise' || opts.type === 'plus') {\n        modules = ['pm2-logrotate', 'pm2-server-monit']\n        if (semver.satisfies(process.version, '< 8.0.0')) {\n          modules.push('v8-profiler-node8')\n        }\n        if (opts.type === 'enterprise') {\n          modules.push('deep-metrics')\n        }\n      }\n\n      forEach(modules, (_module, next) => {\n        Modules.install(self, _module, {}, () => {\n          next()\n        });\n      }, (err) => {\n        self.reload('all', () => {\n          return cb()\n        })\n      })\n    }\n\n    processesAreAlreadyMonitored(self, (already_monitored) => {\n      if (already_monitored) {\n        console.log(cst.PM2_IO_MSG + ` PM2 ${opts.type || ''} bundle already installed`);\n        return cb()\n      }\n\n      if (opts.installAll)\n        return install(cb)\n\n      // promptly.confirm(chalk.bold('Install all pm2 plus dependencies ? (y/n)'), (err, answer) => {\n      //   if (!err && answer === true)\n      return install(cb)\n      // self.reload('all', () => {\n      //     return cb()\n      //   })\n      // });\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"script"}