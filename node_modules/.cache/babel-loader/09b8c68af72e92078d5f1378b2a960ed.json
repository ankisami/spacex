{"ast":null,"code":"'use strict';\n\nconst SelectPrompt = require('./select');\n\nclass Quiz extends SelectPrompt {\n  constructor(options) {\n    super(options);\n\n    if (typeof this.options.correctChoice !== 'number' || this.options.correctChoice < 0) {\n      throw new Error('Please specify the index of the correct answer from the list of choices');\n    }\n  }\n\n  async toChoices(value, parent) {\n    let choices = await super.toChoices(value, parent);\n\n    if (choices.length < 2) {\n      throw new Error('Please give at least two choices to the user');\n    }\n\n    if (this.options.correctChoice > choices.length) {\n      throw new Error('Please specify the index of the correct answer from the list of choices');\n    }\n\n    return choices;\n  }\n\n  check(state) {\n    return state.index === this.options.correctChoice;\n  }\n\n  async result(selected) {\n    return {\n      selectedAnswer: selected,\n      correctAnswer: this.options.choices[this.options.correctChoice].value,\n      correct: await this.check(this.state)\n    };\n  }\n\n}\n\nmodule.exports = Quiz;","map":{"version":3,"sources":["/Users/samianki/node_modules/enquirer/lib/prompts/quiz.js"],"names":["SelectPrompt","require","Quiz","constructor","options","correctChoice","Error","toChoices","value","parent","choices","length","check","state","index","result","selected","selectedAnswer","correctAnswer","correct","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA5B;;AAEA,MAAMC,IAAN,SAAmBF,YAAnB,CAAgC;AAC9BG,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;;AACA,QAAI,OAAO,KAAKA,OAAL,CAAaC,aAApB,KAAsC,QAAtC,IAAkD,KAAKD,OAAL,CAAaC,aAAb,GAA6B,CAAnF,EAAsF;AACpF,YAAM,IAAIC,KAAJ,CAAU,yEAAV,CAAN;AACD;AACF;;AAEc,QAATC,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC7B,QAAIC,OAAO,GAAG,MAAM,MAAMH,SAAN,CAAgBC,KAAhB,EAAuBC,MAAvB,CAApB;;AACA,QAAIC,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAM,IAAIL,KAAJ,CAAU,8CAAV,CAAN;AACD;;AACD,QAAI,KAAKF,OAAL,CAAaC,aAAb,GAA6BK,OAAO,CAACC,MAAzC,EAAiD;AAC/C,YAAM,IAAIL,KAAJ,CAAU,yEAAV,CAAN;AACD;;AACD,WAAOI,OAAP;AACD;;AAEDE,EAAAA,KAAK,CAACC,KAAD,EAAQ;AACX,WAAOA,KAAK,CAACC,KAAN,KAAgB,KAAKV,OAAL,CAAaC,aAApC;AACD;;AAEW,QAANU,MAAM,CAACC,QAAD,EAAW;AACrB,WAAO;AACLC,MAAAA,cAAc,EAAED,QADX;AAELE,MAAAA,aAAa,EAAE,KAAKd,OAAL,CAAaM,OAAb,CAAqB,KAAKN,OAAL,CAAaC,aAAlC,EAAiDG,KAF3D;AAGLW,MAAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAW,KAAKC,KAAhB;AAHV,KAAP;AAKD;;AA7B6B;;AAgChCO,MAAM,CAACC,OAAP,GAAiBnB,IAAjB","sourcesContent":["'use strict';\n\nconst SelectPrompt = require('./select');\n\nclass Quiz extends SelectPrompt {\n  constructor(options) {\n    super(options);\n    if (typeof this.options.correctChoice !== 'number' || this.options.correctChoice < 0) {\n      throw new Error('Please specify the index of the correct answer from the list of choices');\n    }\n  }\n\n  async toChoices(value, parent) {\n    let choices = await super.toChoices(value, parent);\n    if (choices.length < 2) {\n      throw new Error('Please give at least two choices to the user');\n    }\n    if (this.options.correctChoice > choices.length) {\n      throw new Error('Please specify the index of the correct answer from the list of choices');\n    }\n    return choices;\n  }\n\n  check(state) {\n    return state.index === this.options.correctChoice;\n  }\n\n  async result(selected) {\n    return {\n      selectedAnswer: selected,\n      correctAnswer: this.options.choices[this.options.correctChoice].value,\n      correct: await this.check(this.state)\n    };\n  }\n}\n\nmodule.exports = Quiz;\n"]},"metadata":{},"sourceType":"script"}