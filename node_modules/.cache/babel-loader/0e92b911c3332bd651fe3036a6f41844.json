{"ast":null,"code":"'use strict';\n\nvar read = require('read');\n\nvar promptly = module.exports;\n\nfunction prompt(message, opts, fn) {\n  // Setup read's options\n  var readOpts = {\n    prompt: message,\n    input: opts.input || process.stdin,\n    output: opts.output || process.stdout,\n    silent: opts.silent,\n    replace: opts.replace || ''\n  }; // Use readline question\n\n  read(readOpts, function (err, data) {\n    // Ignore the error attribute\n    // It is set on SIGINT or if timeout reached (we are not using timeout)\n    if (err) {\n      return;\n    } // Trim?\n\n\n    if (opts.trim) {\n      data = data.trim();\n    } // Mandatory?\n\n\n    if (opts['default'] == null && !data) {\n      return promptly.prompt(message, opts, fn);\n    } else {\n      data = data || opts['default'];\n    } // Validator verification\n\n\n    if (opts.validator) {\n      if (!Array.isArray(opts.validator)) {\n        opts.validator = [opts.validator];\n      }\n\n      var x;\n      var length = opts.validator.length;\n\n      for (x = 0; x < length; x += 1) {\n        try {\n          data = opts.validator[x](data);\n        } catch (e) {\n          // Retry automatically if the retry option is enabled\n          if (opts.retry) {\n            if (e.message) {\n              readOpts.output.write(e.message + '\\n');\n            }\n\n            return promptly.prompt(message, opts, fn);\n          }\n\n          e.retry = promptly.prompt.bind(promptly, message, opts, fn);\n          return fn(e);\n        }\n      }\n    } // Everything ok\n\n\n    fn(null, data);\n  });\n}\n\npromptly.prompt = function (message, opts, fn) {\n  // Arguments parsing\n  if (typeof opts === 'function') {\n    fn = opts;\n    opts = {};\n  } else if (!opts) {\n    opts = {};\n  }\n\n  if (opts.trim === undefined) {\n    opts.trim = true;\n  }\n\n  if (opts.retry === undefined) {\n    opts.retry = true;\n  }\n\n  if (fn) {\n    return prompt(message, opts, fn);\n  }\n\n  return new Promise(function (resolve, reject) {\n    prompt(message, opts, function (err, result) {\n      if (err) {\n        return reject(err);\n      }\n\n      resolve(result);\n    });\n  });\n};\n\npromptly.password = function (message, opts, fn) {\n  // Arguments parsing\n  if (typeof opts === 'function') {\n    fn = opts;\n    opts = {};\n  } else {\n    opts = opts || {};\n  } // Set default options\n\n\n  if (opts.silent === undefined) {\n    opts.silent = true;\n  }\n\n  if (opts.trim === undefined) {\n    opts.trim = false;\n  }\n\n  if (opts['default'] === undefined) {\n    opts['default'] = '';\n  } // Use prompt()\n\n\n  return promptly.prompt(message, opts, fn);\n};\n\npromptly.confirm = function (message, opts, fn) {\n  // Arguments parsing\n  if (typeof opts === 'function') {\n    fn = opts;\n    opts = {};\n  } else if (!opts) {\n    opts = {};\n  }\n\n  opts.validator = opts.validator || [];\n\n  if (!Array.isArray(opts.validator)) {\n    opts.validator = [opts.validator];\n  } // Push the validator that will coerse boolean values\n\n\n  var validator = function (value) {\n    if (typeof value === 'string') {\n      value = value.toLowerCase();\n    }\n\n    switch (value) {\n      case 'y':\n      case 'yes':\n      case '1':\n      case true:\n        return true;\n\n      case 'n':\n      case 'no':\n      case '0':\n      case false:\n        return false;\n    }\n\n    throw new Error();\n  };\n\n  opts.validator.push(validator); // Use choose() with true, false\n\n  return promptly.choose(message, [true, false], opts, fn);\n};\n\npromptly.choose = function (message, choices, opts, fn) {\n  // Arguments parsing\n  if (typeof opts === 'function') {\n    fn = opts;\n    opts = {};\n  } else if (!opts) {\n    opts = {};\n  }\n\n  opts.validator = opts.validator || [];\n\n  if (!Array.isArray(opts.validator)) {\n    opts.validator = [opts.validator];\n  } // Push the choice validator\n\n\n  var nrChoices = choices.length;\n\n  var validator = function (value) {\n    var x;\n\n    for (x = 0; x < nrChoices; x++) {\n      if (choices[x] == value) {\n        return choices[x];\n      }\n    }\n\n    throw new Error('Invalid choice: ' + value);\n  };\n\n  opts.validator.push(validator); // Use prompt()\n\n  return promptly.prompt(message, opts, fn);\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/promptly/index.js"],"names":["read","require","promptly","module","exports","prompt","message","opts","fn","readOpts","input","process","stdin","output","stdout","silent","replace","err","data","trim","validator","Array","isArray","x","length","e","retry","write","bind","undefined","Promise","resolve","reject","result","password","confirm","value","toLowerCase","Error","push","choose","choices","nrChoices"],"mappings":"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","sourcesContent":["'use strict';\n\nvar read = require('read');\nvar promptly = module.exports;\n\nfunction prompt(message, opts, fn) {\n    // Setup read's options\n    var readOpts = {\n        prompt: message,\n        input: opts.input || process.stdin,\n        output: opts.output || process.stdout,\n        silent: opts.silent,\n        replace: opts.replace || ''\n    };\n\n    // Use readline question\n    read(readOpts, function (err, data) {\n        // Ignore the error attribute\n        // It is set on SIGINT or if timeout reached (we are not using timeout)\n        if (err) {\n            return;\n        }\n\n        // Trim?\n        if (opts.trim) {\n            data = data.trim();\n        }\n\n        // Mandatory?\n        if (opts['default'] == null && !data) {\n            return promptly.prompt(message, opts, fn);\n        } else {\n            data = data || opts['default'];\n        }\n\n        // Validator verification\n        if (opts.validator) {\n            if (!Array.isArray(opts.validator)) {\n                opts.validator = [opts.validator];\n            }\n\n            var x;\n            var length = opts.validator.length;\n\n            for (x = 0; x < length; x += 1) {\n                try {\n                    data = opts.validator[x](data);\n                } catch (e) {\n                    // Retry automatically if the retry option is enabled\n                    if (opts.retry) {\n                        if (e.message) {\n                            readOpts.output.write(e.message + '\\n');\n                        }\n\n                        return promptly.prompt(message, opts, fn);\n                    }\n\n                    e.retry = promptly.prompt.bind(promptly, message, opts, fn);\n\n                    return fn(e);\n                }\n            }\n        }\n\n        // Everything ok\n        fn(null, data);\n    });\n}\n\npromptly.prompt = function (message, opts, fn) {\n    // Arguments parsing\n    if (typeof opts === 'function') {\n        fn = opts;\n        opts = {};\n    } else if (!opts) {\n        opts = {};\n    }\n\n    if (opts.trim === undefined) {\n        opts.trim = true;\n    }\n    if (opts.retry === undefined) {\n        opts.retry = true;\n    }\n\n    if (fn) {\n        return prompt(message, opts, fn);\n    }\n\n    return new Promise(function (resolve, reject) {\n        prompt(message, opts, function (err, result) {\n            if (err) {\n                return reject(err);\n            }\n\n            resolve(result);\n        });\n    });\n};\n\npromptly.password = function (message, opts, fn) {\n    // Arguments parsing\n    if (typeof opts === 'function') {\n        fn = opts;\n        opts = {};\n    } else {\n        opts = opts || {};\n    }\n\n    // Set default options\n    if (opts.silent === undefined) {\n        opts.silent = true;\n    }\n    if (opts.trim === undefined) {\n        opts.trim = false;\n    }\n    if (opts['default'] === undefined) {\n        opts['default'] = '';\n    }\n\n    // Use prompt()\n    return promptly.prompt(message, opts, fn);\n};\n\npromptly.confirm = function (message, opts, fn) {\n    // Arguments parsing\n    if (typeof opts === 'function') {\n        fn = opts;\n        opts = {};\n    } else if (!opts) {\n        opts = {};\n    }\n\n    opts.validator = opts.validator || [];\n    if (!Array.isArray(opts.validator)) {\n        opts.validator = [opts.validator];\n    }\n\n    // Push the validator that will coerse boolean values\n    var validator = function (value) {\n        if (typeof value === 'string') {\n            value = value.toLowerCase();\n        }\n\n        switch (value) {\n        case 'y':\n        case 'yes':\n        case '1':\n        case true:\n            return true;\n        case 'n':\n        case 'no':\n        case '0':\n        case false:\n            return false;\n        }\n\n        throw new Error();\n    };\n    opts.validator.push(validator);\n\n    // Use choose() with true, false\n    return promptly.choose(message, [true, false], opts, fn);\n};\n\npromptly.choose = function (message, choices, opts, fn) {\n    // Arguments parsing\n    if (typeof opts === 'function') {\n        fn = opts;\n        opts = {};\n    } else if (!opts) {\n        opts = {};\n    }\n\n    opts.validator = opts.validator || [];\n    if (!Array.isArray(opts.validator)) {\n        opts.validator = [opts.validator];\n    }\n\n    // Push the choice validator\n    var nrChoices = choices.length;\n    var validator = function (value) {\n        var x;\n\n        for (x = 0; x < nrChoices; x++) {\n            if (choices[x] == value) {\n                return choices[x];\n            }\n        }\n\n        throw new Error('Invalid choice: ' + value);\n    };\n    opts.validator.push(validator);\n\n    // Use prompt()\n    return promptly.prompt(message, opts, fn);\n};\n"]},"metadata":{},"sourceType":"script"}