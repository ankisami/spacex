{"ast":null,"code":"/**\n * layout.js - layout element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar Node = require('./node');\n\nvar Element = require('./element');\n/**\n * Layout\n */\n\n\nfunction Layout(options) {\n  if (!(this instanceof Node)) {\n    return new Layout(options);\n  }\n\n  options = options || {};\n\n  if (options.width == null && options.left == null && options.right == null || options.height == null && options.top == null && options.bottom == null) {\n    throw new Error('`Layout` must have a width and height!');\n  }\n\n  options.layout = options.layout || 'inline';\n  Element.call(this, options);\n\n  if (options.renderer) {\n    this.renderer = options.renderer;\n  }\n}\n\nLayout.prototype.__proto__ = Element.prototype;\nLayout.prototype.type = 'layout';\n\nLayout.prototype.isRendered = function (el) {\n  if (!el.lpos) return false;\n  return el.lpos.xl - el.lpos.xi > 0 && el.lpos.yl - el.lpos.yi > 0;\n};\n\nLayout.prototype.getLast = function (i) {\n  while (this.children[--i]) {\n    var el = this.children[i];\n    if (this.isRendered(el)) return el;\n  }\n};\n\nLayout.prototype.getLastCoords = function (i) {\n  var last = this.getLast(i);\n  if (last) return last.lpos;\n};\n\nLayout.prototype._renderCoords = function () {\n  var coords = this._getCoords(true);\n\n  var children = this.children;\n  this.children = [];\n\n  this._render();\n\n  this.children = children;\n  return coords;\n};\n\nLayout.prototype.renderer = function (coords) {\n  var self = this; // The coordinates of the layout element\n\n  var width = coords.xl - coords.xi,\n      height = coords.yl - coords.yi,\n      xi = coords.xi,\n      yi = coords.yi; // The current row offset in cells (which row are we on?)\n\n  var rowOffset = 0; // The index of the first child in the row\n\n  var rowIndex = 0;\n  var lastRowIndex = 0; // Figure out the highest width child\n\n  if (this.options.layout === 'grid') {\n    var highWidth = this.children.reduce(function (out, el) {\n      out = Math.max(out, el.width);\n      return out;\n    }, 0);\n  }\n\n  return function iterator(el, i) {\n    // Make our children shrinkable. If they don't have a height, for\n    // example, calculate it for them.\n    el.shrink = true; // Find the previous rendered child's coordinates\n\n    var last = self.getLast(i); // If there is no previously rendered element, we are on the first child.\n\n    if (!last) {\n      el.position.left = 0;\n      el.position.top = 0;\n    } else {\n      // Otherwise, figure out where to place this child. We'll start by\n      // setting it's `left`/`x` coordinate to right after the previous\n      // rendered element. This child will end up directly to the right of it.\n      el.position.left = last.lpos.xl - xi; // Make sure the position matches the highest width element\n\n      if (self.options.layout === 'grid') {\n        // Compensate with width:\n        // el.position.width = el.width + (highWidth - el.width);\n        // Compensate with position:\n        el.position.left += highWidth - (last.lpos.xl - last.lpos.xi);\n      } // If our child does not overlap the right side of the Layout, set it's\n      // `top`/`y` to the current `rowOffset` (the coordinate for the current\n      // row).\n\n\n      if (el.position.left + el.width <= width) {\n        el.position.top = rowOffset;\n      } else {\n        // Otherwise we need to start a new row and calculate a new\n        // `rowOffset` and `rowIndex` (the index of the child on the current\n        // row).\n        rowOffset += self.children.slice(rowIndex, i).reduce(function (out, el) {\n          if (!self.isRendered(el)) return out;\n          out = Math.max(out, el.lpos.yl - el.lpos.yi);\n          return out;\n        }, 0);\n        lastRowIndex = rowIndex;\n        rowIndex = i;\n        el.position.left = 0;\n        el.position.top = rowOffset;\n      }\n    } // Make sure the elements on lower rows graviatate up as much as possible\n\n\n    if (self.options.layout === 'inline') {\n      var above = null;\n      var abovea = Infinity;\n\n      for (var j = lastRowIndex; j < rowIndex; j++) {\n        var l = self.children[j];\n        if (!self.isRendered(l)) continue;\n        var abs = Math.abs(el.position.left - (l.lpos.xi - xi)); // if (abs < abovea && (l.lpos.xl - l.lpos.xi) <= el.width) {\n\n        if (abs < abovea) {\n          above = l;\n          abovea = abs;\n        }\n      }\n\n      if (above) {\n        el.position.top = above.lpos.yl - yi;\n      }\n    } // If our child overflows the Layout, do not render it!\n    // Disable this feature for now.\n\n\n    if (el.position.top + el.height > height) {// Returning false tells blessed to ignore this child.\n      // return false;\n    }\n  };\n};\n\nLayout.prototype.render = function () {\n  this._emit('prerender');\n\n  var coords = this._renderCoords();\n\n  if (!coords) {\n    delete this.lpos;\n    return;\n  }\n\n  if (coords.xl - coords.xi <= 0) {\n    coords.xl = Math.max(coords.xl, coords.xi);\n    return;\n  }\n\n  if (coords.yl - coords.yi <= 0) {\n    coords.yl = Math.max(coords.yl, coords.yi);\n    return;\n  }\n\n  this.lpos = coords;\n  if (this.border) coords.xi++, coords.xl--, coords.yi++, coords.yl--;\n\n  if (this.tpadding) {\n    coords.xi += this.padding.left, coords.xl -= this.padding.right;\n    coords.yi += this.padding.top, coords.yl -= this.padding.bottom;\n  }\n\n  var iterator = this.renderer(coords);\n  if (this.border) coords.xi--, coords.xl++, coords.yi--, coords.yl++;\n\n  if (this.tpadding) {\n    coords.xi -= this.padding.left, coords.xl += this.padding.right;\n    coords.yi -= this.padding.top, coords.yl += this.padding.bottom;\n  }\n\n  this.children.forEach(function (el, i) {\n    if (el.screen._ci !== -1) {\n      el.index = el.screen._ci++;\n    }\n\n    var rendered = iterator(el, i);\n\n    if (rendered === false) {\n      delete el.lpos;\n      return;\n    } // if (el.screen._rendering) {\n    //   el._rendering = true;\n    // }\n\n\n    el.render(); // if (el.screen._rendering) {\n    //   el._rendering = false;\n    // }\n  });\n\n  this._emit('render', [coords]);\n\n  return coords;\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Layout;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/layout.js"],"names":["Node","require","Element","Layout","options","width","left","right","height","top","bottom","Error","layout","call","renderer","prototype","__proto__","type","isRendered","el","lpos","xl","xi","yl","yi","getLast","i","children","getLastCoords","last","_renderCoords","coords","_getCoords","_render","self","rowOffset","rowIndex","lastRowIndex","highWidth","reduce","out","Math","max","iterator","shrink","position","slice","above","abovea","Infinity","j","l","abs","render","_emit","border","tpadding","padding","forEach","screen","_ci","index","rendered","module","exports"],"mappings":"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","sourcesContent":["/**\n * layout.js - layout element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar Node = require('./node');\nvar Element = require('./element');\n\n/**\n * Layout\n */\n\nfunction Layout(options) {\n  if (!(this instanceof Node)) {\n    return new Layout(options);\n  }\n\n  options = options || {};\n\n  if ((options.width == null\n      && (options.left == null && options.right == null))\n      || (options.height == null\n      && (options.top == null && options.bottom == null))) {\n    throw new Error('`Layout` must have a width and height!');\n  }\n\n  options.layout = options.layout || 'inline';\n\n  Element.call(this, options);\n\n  if (options.renderer) {\n    this.renderer = options.renderer;\n  }\n}\n\nLayout.prototype.__proto__ = Element.prototype;\n\nLayout.prototype.type = 'layout';\n\nLayout.prototype.isRendered = function(el) {\n  if (!el.lpos) return false;\n  return (el.lpos.xl - el.lpos.xi) > 0\n      && (el.lpos.yl - el.lpos.yi) > 0;\n};\n\nLayout.prototype.getLast = function(i) {\n  while (this.children[--i]) {\n    var el = this.children[i];\n    if (this.isRendered(el)) return el;\n  }\n};\n\nLayout.prototype.getLastCoords = function(i) {\n  var last = this.getLast(i);\n  if (last) return last.lpos;\n};\n\nLayout.prototype._renderCoords = function() {\n  var coords = this._getCoords(true);\n  var children = this.children;\n  this.children = [];\n  this._render();\n  this.children = children;\n  return coords;\n};\n\nLayout.prototype.renderer = function(coords) {\n  var self = this;\n\n  // The coordinates of the layout element\n  var width = coords.xl - coords.xi\n    , height = coords.yl - coords.yi\n    , xi = coords.xi\n    , yi = coords.yi;\n\n  // The current row offset in cells (which row are we on?)\n  var rowOffset = 0;\n\n  // The index of the first child in the row\n  var rowIndex = 0;\n  var lastRowIndex = 0;\n\n  // Figure out the highest width child\n  if (this.options.layout === 'grid') {\n    var highWidth = this.children.reduce(function(out, el) {\n      out = Math.max(out, el.width);\n      return out;\n    }, 0);\n  }\n\n  return function iterator(el, i) {\n    // Make our children shrinkable. If they don't have a height, for\n    // example, calculate it for them.\n    el.shrink = true;\n\n    // Find the previous rendered child's coordinates\n    var last = self.getLast(i);\n\n    // If there is no previously rendered element, we are on the first child.\n    if (!last) {\n      el.position.left = 0;\n      el.position.top = 0;\n    } else {\n      // Otherwise, figure out where to place this child. We'll start by\n      // setting it's `left`/`x` coordinate to right after the previous\n      // rendered element. This child will end up directly to the right of it.\n      el.position.left = last.lpos.xl - xi;\n\n      // Make sure the position matches the highest width element\n      if (self.options.layout === 'grid') {\n        // Compensate with width:\n        // el.position.width = el.width + (highWidth - el.width);\n        // Compensate with position:\n        el.position.left += highWidth - (last.lpos.xl - last.lpos.xi);\n      }\n\n      // If our child does not overlap the right side of the Layout, set it's\n      // `top`/`y` to the current `rowOffset` (the coordinate for the current\n      // row).\n      if (el.position.left + el.width <= width) {\n        el.position.top = rowOffset;\n      } else {\n        // Otherwise we need to start a new row and calculate a new\n        // `rowOffset` and `rowIndex` (the index of the child on the current\n        // row).\n        rowOffset += self.children.slice(rowIndex, i).reduce(function(out, el) {\n          if (!self.isRendered(el)) return out;\n          out = Math.max(out, el.lpos.yl - el.lpos.yi);\n          return out;\n        }, 0);\n        lastRowIndex = rowIndex;\n        rowIndex = i;\n        el.position.left = 0;\n        el.position.top = rowOffset;\n      }\n    }\n\n    // Make sure the elements on lower rows graviatate up as much as possible\n    if (self.options.layout === 'inline') {\n      var above = null;\n      var abovea = Infinity;\n      for (var j = lastRowIndex; j < rowIndex; j++) {\n        var l = self.children[j];\n        if (!self.isRendered(l)) continue;\n        var abs = Math.abs(el.position.left - (l.lpos.xi - xi));\n        // if (abs < abovea && (l.lpos.xl - l.lpos.xi) <= el.width) {\n        if (abs < abovea) {\n          above = l;\n          abovea = abs;\n        }\n      }\n      if (above) {\n        el.position.top = above.lpos.yl - yi;\n      }\n    }\n\n    // If our child overflows the Layout, do not render it!\n    // Disable this feature for now.\n    if (el.position.top + el.height > height) {\n      // Returning false tells blessed to ignore this child.\n      // return false;\n    }\n  };\n};\n\nLayout.prototype.render = function() {\n  this._emit('prerender');\n\n  var coords = this._renderCoords();\n  if (!coords) {\n    delete this.lpos;\n    return;\n  }\n\n  if (coords.xl - coords.xi <= 0) {\n    coords.xl = Math.max(coords.xl, coords.xi);\n    return;\n  }\n\n  if (coords.yl - coords.yi <= 0) {\n    coords.yl = Math.max(coords.yl, coords.yi);\n    return;\n  }\n\n  this.lpos = coords;\n\n  if (this.border) coords.xi++, coords.xl--, coords.yi++, coords.yl--;\n  if (this.tpadding) {\n    coords.xi += this.padding.left, coords.xl -= this.padding.right;\n    coords.yi += this.padding.top, coords.yl -= this.padding.bottom;\n  }\n\n  var iterator = this.renderer(coords);\n\n  if (this.border) coords.xi--, coords.xl++, coords.yi--, coords.yl++;\n  if (this.tpadding) {\n    coords.xi -= this.padding.left, coords.xl += this.padding.right;\n    coords.yi -= this.padding.top, coords.yl += this.padding.bottom;\n  }\n\n  this.children.forEach(function(el, i) {\n    if (el.screen._ci !== -1) {\n      el.index = el.screen._ci++;\n    }\n    var rendered = iterator(el, i);\n    if (rendered === false) {\n      delete el.lpos;\n      return;\n    }\n    // if (el.screen._rendering) {\n    //   el._rendering = true;\n    // }\n    el.render();\n    // if (el.screen._rendering) {\n    //   el._rendering = false;\n    // }\n  });\n\n  this._emit('render', [coords]);\n\n  return coords;\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Layout;\n"]},"metadata":{},"sourceType":"script"}