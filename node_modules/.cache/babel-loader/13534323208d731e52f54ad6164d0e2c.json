{"ast":null,"code":"/**\n * question.js - question element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar Node = require('./node');\n\nvar Box = require('./box');\n\nvar Button = require('./button');\n/**\n * Question\n */\n\n\nfunction Question(options) {\n  if (!(this instanceof Node)) {\n    return new Question(options);\n  }\n\n  options = options || {};\n  options.hidden = true;\n  Box.call(this, options);\n  this._.okay = new Button({\n    screen: this.screen,\n    parent: this,\n    top: 2,\n    height: 1,\n    left: 2,\n    width: 6,\n    content: 'Okay',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n  this._.cancel = new Button({\n    screen: this.screen,\n    parent: this,\n    top: 2,\n    height: 1,\n    shrink: true,\n    left: 10,\n    width: 8,\n    content: 'Cancel',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n}\n\nQuestion.prototype.__proto__ = Box.prototype;\nQuestion.prototype.type = 'question';\n\nQuestion.prototype.ask = function (text, callback) {\n  var self = this;\n  var press, okay, cancel; // Keep above:\n  // var parent = this.parent;\n  // this.detach();\n  // parent.append(this);\n\n  this.show();\n  this.setContent(' ' + text);\n  this.onScreenEvent('keypress', press = function (ch, key) {\n    if (key.name === 'mouse') return;\n\n    if (key.name !== 'enter' && key.name !== 'escape' && key.name !== 'q' && key.name !== 'y' && key.name !== 'n') {\n      return;\n    }\n\n    done(null, key.name === 'enter' || key.name === 'y');\n  });\n\n  this._.okay.on('press', okay = function () {\n    done(null, true);\n  });\n\n  this._.cancel.on('press', cancel = function () {\n    done(null, false);\n  });\n\n  this.screen.saveFocus();\n  this.focus();\n\n  function done(err, data) {\n    self.hide();\n    self.screen.restoreFocus();\n    self.removeScreenEvent('keypress', press);\n\n    self._.okay.removeListener('press', okay);\n\n    self._.cancel.removeListener('press', cancel);\n\n    return callback(err, data);\n  }\n\n  this.screen.render();\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Question;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/question.js"],"names":["Node","require","Box","Button","Question","options","hidden","call","_","okay","screen","parent","top","height","left","width","content","align","bg","hoverBg","autoFocus","mouse","cancel","shrink","prototype","__proto__","type","ask","text","callback","self","press","show","setContent","onScreenEvent","ch","key","name","done","on","saveFocus","focus","err","data","hide","restoreFocus","removeScreenEvent","removeListener","render","module","exports"],"mappings":"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","sourcesContent":["/**\n * question.js - question element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar Node = require('./node');\nvar Box = require('./box');\nvar Button = require('./button');\n\n/**\n * Question\n */\n\nfunction Question(options) {\n  if (!(this instanceof Node)) {\n    return new Question(options);\n  }\n\n  options = options || {};\n  options.hidden = true;\n\n  Box.call(this, options);\n\n  this._.okay = new Button({\n    screen: this.screen,\n    parent: this,\n    top: 2,\n    height: 1,\n    left: 2,\n    width: 6,\n    content: 'Okay',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n\n  this._.cancel = new Button({\n    screen: this.screen,\n    parent: this,\n    top: 2,\n    height: 1,\n    shrink: true,\n    left: 10,\n    width: 8,\n    content: 'Cancel',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n}\n\nQuestion.prototype.__proto__ = Box.prototype;\n\nQuestion.prototype.type = 'question';\n\nQuestion.prototype.ask = function(text, callback) {\n  var self = this;\n  var press, okay, cancel;\n\n  // Keep above:\n  // var parent = this.parent;\n  // this.detach();\n  // parent.append(this);\n\n  this.show();\n  this.setContent(' ' + text);\n\n  this.onScreenEvent('keypress', press = function(ch, key) {\n    if (key.name === 'mouse') return;\n    if (key.name !== 'enter'\n        && key.name !== 'escape'\n        && key.name !== 'q'\n        && key.name !== 'y'\n        && key.name !== 'n') {\n      return;\n    }\n    done(null, key.name === 'enter' || key.name === 'y');\n  });\n\n  this._.okay.on('press', okay = function() {\n    done(null, true);\n  });\n\n  this._.cancel.on('press', cancel = function() {\n    done(null, false);\n  });\n\n  this.screen.saveFocus();\n  this.focus();\n\n  function done(err, data) {\n    self.hide();\n    self.screen.restoreFocus();\n    self.removeScreenEvent('keypress', press);\n    self._.okay.removeListener('press', okay);\n    self._.cancel.removeListener('press', cancel);\n    return callback(err, data);\n  }\n\n  this.screen.render();\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Question;\n"]},"metadata":{},"sourceType":"script"}