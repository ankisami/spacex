{"ast":null,"code":"var cst = require('../../../constants.js');\n\nvar Common = require('../../Common.js');\n\nvar chalk = require('chalk');\n\nvar fs = require('fs');\n\nvar KMDaemon = require('@pm2/agent/src/InteractorClient');\n\nvar pkg = require('../../../package.json');\n\nmodule.exports = function (CLI) {\n  CLI.prototype.linkManagement = function (cmd, public_key, machine, opts, cb) {\n    var that = this; // pm2 link stop || kill\n\n    if (cmd == 'stop' || cmd == 'kill') {\n      that.gl_is_km_linked = false;\n      console.log(cst.PM2_IO_MSG + ' Stopping agent...');\n      return that.killAgent(function (err) {\n        if (err) {\n          Common.printError(err);\n          return process.exit(cst.ERROR_EXIT);\n        }\n\n        console.log(cst.PM2_IO_MSG + ' Stopped');\n        that.reload('all', () => {\n          return process.exit(cst.SUCCESS_EXIT);\n        });\n      });\n    } // pm2 link info\n\n\n    if (cmd == 'info') {\n      console.log(cst.PM2_IO_MSG + ' Getting agent information...');\n      that.agentInfos(function (err, infos) {\n        if (err) {\n          console.error(cst.PM2_IO_MSG_ERR + ' ' + err.message);\n          return that.exitCli(cst.ERROR_EXIT);\n        }\n\n        console.log(infos);\n        return that.exitCli(cst.SUCCESS_EXIT);\n      });\n      return false;\n    } // pm2 link delete\n\n\n    if (cmd == 'delete') {\n      that.gl_is_km_linked = false;\n      console.log(cst.PM2_IO_MSG + ' Permanently disable agent...');\n      that.killAgent(function (err) {\n        try {\n          fs.unlinkSync(cst.INTERACTION_CONF);\n        } catch (e) {\n          console.log(cst.PM2_IO_MSG + ' No interaction config file found');\n          return process.exit(cst.SUCCESS_EXIT);\n        }\n\n        console.log(cst.PM2_IO_MSG + ' Agent interaction ended');\n        if (!cb) return process.exit(cst.SUCCESS_EXIT);\n        return cb();\n      });\n      return false;\n    }\n\n    if (cmd && !public_key) {\n      console.error(cst.PM2_IO_MSG + ' Command [%s] unknown or missing public key', cmd);\n      return process.exit(cst.ERROR_EXIT);\n    } // pm2 link xxx yyy\n\n\n    var infos;\n\n    if (!cmd) {\n      infos = null;\n    } else infos = {\n      public_key: public_key,\n      secret_key: cmd,\n      machine_name: machine,\n      info_node: opts.infoNode || null,\n      pm2_version: pkg.version\n    };\n\n    if (opts && opts.axon === true && infos) {\n      infos.agent_transport_axon = true;\n      infos.agent_transport_websocket = false;\n      process.env.AGENT_TRANSPORT_AXON = true;\n      process.env.AGENT_TRANSPORT_WEBSOCKET = false;\n    } else if (infos) {\n      infos.agent_transport_axon = false;\n      infos.agent_transport_websocket = true;\n      process.env.AGENT_TRANSPORT_AXON = false;\n      process.env.AGENT_TRANSPORT_WEBSOCKET = true;\n    }\n\n    that.link(infos, cb);\n  };\n\n  CLI.prototype.link = function (infos, cb) {\n    var that = this;\n    if (infos && !infos.machine_name) infos.machine_name = require('os').hostname() + '-' + require('crypto').randomBytes(2).toString('hex');\n    KMDaemon.launchAndInteract(cst, infos, function (err, dt) {\n      if (err) {\n        Common.printError(cst.PM2_IO_MSG + ' Run `$ pm2 plus` to connect');\n        return that.exitCli(cst.ERROR_EXIT);\n      }\n\n      console.log(chalk.bold.green('[+] PM2+ activated!'));\n\n      if (!cb) {\n        return that.exitCli(cst.SUCCESS_EXIT);\n      }\n\n      return cb(null, dt);\n    });\n  };\n\n  CLI.prototype.agentInfos = function (cb) {\n    KMDaemon.getInteractInfo(this._conf, function (err, data) {\n      if (err) return cb(Common.retErr(err));\n      return cb(null, data);\n    });\n  };\n\n  CLI.prototype.killAgent = function (cb) {\n    var that = this;\n    KMDaemon.killInteractorDaemon(that._conf, function (err) {\n      if (err) return cb ? cb(Common.retErr(err)) : that.exitCli(cst.SUCCESS_EXIT);\n      return cb ? cb(null) : that.exitCli(cst.SUCCESS_EXIT);\n    });\n  };\n\n  CLI.prototype.unlink = function (cb) {\n    this.linkManagement('delete', cb);\n  };\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/pm2-plus/link.js"],"names":["cst","require","Common","chalk","fs","KMDaemon","pkg","module","exports","CLI","prototype","linkManagement","cmd","public_key","machine","opts","cb","that","gl_is_km_linked","console","log","PM2_IO_MSG","killAgent","err","printError","process","exit","ERROR_EXIT","reload","SUCCESS_EXIT","agentInfos","infos","error","PM2_IO_MSG_ERR","message","exitCli","unlinkSync","INTERACTION_CONF","e","secret_key","machine_name","info_node","infoNode","pm2_version","version","axon","agent_transport_axon","agent_transport_websocket","env","AGENT_TRANSPORT_AXON","AGENT_TRANSPORT_WEBSOCKET","link","hostname","randomBytes","toString","launchAndInteract","dt","bold","green","getInteractInfo","_conf","data","retErr","killInteractorDaemon","unlink"],"mappings":"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","sourcesContent":["\nvar cst         = require('../../../constants.js');\nvar Common      = require('../../Common.js');\nvar chalk       = require('chalk');\nvar fs          = require('fs');\nvar KMDaemon    = require('@pm2/agent/src/InteractorClient');\nvar pkg         = require('../../../package.json')\n\nmodule.exports = function(CLI) {\n\n  CLI.prototype.linkManagement = function(cmd, public_key, machine, opts, cb) {\n    var that = this;\n\n    // pm2 link stop || kill\n    if (cmd == 'stop' || cmd == 'kill') {\n      that.gl_is_km_linked = false\n      console.log(cst.PM2_IO_MSG + ' Stopping agent...');\n\n      return that.killAgent(function(err) {\n        if (err) {\n          Common.printError(err);\n          return process.exit(cst.ERROR_EXIT);\n        }\n        console.log(cst.PM2_IO_MSG + ' Stopped');\n\n        that.reload('all', () => {\n          return process.exit(cst.SUCCESS_EXIT);\n        })\n      });\n    }\n\n    // pm2 link info\n    if (cmd == 'info') {\n      console.log(cst.PM2_IO_MSG + ' Getting agent information...');\n      that.agentInfos(function(err, infos) {\n        if (err) {\n          console.error(cst.PM2_IO_MSG_ERR + ' ' + err.message);\n          return that.exitCli(cst.ERROR_EXIT);\n        }\n        console.log(infos);\n        return that.exitCli(cst.SUCCESS_EXIT);\n      });\n      return false;\n    }\n\n    // pm2 link delete\n    if (cmd == 'delete') {\n      that.gl_is_km_linked = false\n      console.log(cst.PM2_IO_MSG + ' Permanently disable agent...');\n      that.killAgent(function(err) {\n        try {\n          fs.unlinkSync(cst.INTERACTION_CONF);\n        } catch(e) {\n          console.log(cst.PM2_IO_MSG + ' No interaction config file found');\n          return process.exit(cst.SUCCESS_EXIT);\n        }\n        console.log(cst.PM2_IO_MSG + ' Agent interaction ended');\n        if (!cb)\n          return process.exit(cst.SUCCESS_EXIT);\n        return cb()\n      });\n      return false;\n    }\n\n    if (cmd && !public_key) {\n      console.error(cst.PM2_IO_MSG + ' Command [%s] unknown or missing public key', cmd);\n      return process.exit(cst.ERROR_EXIT);\n    }\n\n    // pm2 link xxx yyy\n    var infos;\n\n    if (!cmd) {\n      infos = null;\n    }\n    else\n      infos = {\n        public_key : public_key,\n        secret_key : cmd,\n        machine_name : machine,\n        info_node : opts.infoNode || null,\n        pm2_version: pkg.version\n      }\n\n    if (opts && opts.axon === true && infos) {\n      infos.agent_transport_axon = true\n      infos.agent_transport_websocket = false\n      process.env.AGENT_TRANSPORT_AXON = true\n      process.env.AGENT_TRANSPORT_WEBSOCKET = false\n    }\n    else if (infos) {\n      infos.agent_transport_axon = false\n      infos.agent_transport_websocket = true\n      process.env.AGENT_TRANSPORT_AXON = false\n      process.env.AGENT_TRANSPORT_WEBSOCKET = true\n    }\n\n    that.link(infos, cb)\n  };\n\n  CLI.prototype.link = function(infos, cb) {\n    var that = this;\n\n    if (infos && !infos.machine_name)\n      infos.machine_name = require('os').hostname() + '-' + require('crypto').randomBytes(2).toString('hex')\n\n    KMDaemon.launchAndInteract(cst, infos, function(err, dt) {\n      if (err) {\n        Common.printError(cst.PM2_IO_MSG + ' Run `$ pm2 plus` to connect')\n        return that.exitCli(cst.ERROR_EXIT);\n      }\n      console.log(chalk.bold.green('[+] PM2+ activated!'))\n      if (!cb) {\n        return that.exitCli(cst.SUCCESS_EXIT);\n      }\n      return cb(null, dt)\n    });\n  };\n\n  CLI.prototype.agentInfos = function(cb) {\n    KMDaemon.getInteractInfo(this._conf, function(err, data) {\n      if (err)\n        return cb(Common.retErr(err));\n      return cb(null, data);\n    });\n  };\n\n  CLI.prototype.killAgent = function(cb) {\n    var that = this;\n    KMDaemon.killInteractorDaemon(that._conf, function(err) {\n      if (err)\n        return cb ? cb(Common.retErr(err)) : that.exitCli(cst.SUCCESS_EXIT);\n      return cb ? cb(null) : that.exitCli(cst.SUCCESS_EXIT);\n    });\n  };\n\n  CLI.prototype.unlink = function(cb) {\n    this.linkManagement('delete', cb);\n  };\n};\n"]},"metadata":{},"sourceType":"script"}