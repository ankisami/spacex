{"ast":null,"code":"var Common = require('../Common.js');\n\nvar cst = require('../../constants.js');\n\nvar UX = require('./UX');\n\nvar chalk = require('chalk');\n\nvar Configuration = require('../Configuration.js');\n\nmodule.exports = function (CLI) {\n  CLI.prototype.get = function (key, cb) {\n    var that = this;\n\n    if (!key || key == 'all') {\n      displayConf(function (err, data) {\n        if (err) return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {\n          success: true\n        }) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n      return false;\n    }\n\n    Configuration.get(key, function (err, data) {\n      if (err) {\n        return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n      } // pm2 conf module-name\n\n\n      if (key.indexOf(':') === -1 && key.indexOf('.') === -1) {\n        displayConf(key, function () {\n          console.log('Modules configuration. Copy/Paste line to edit values.');\n          return cb ? cb(null, {\n            success: true\n          }) : that.exitCli(cst.SUCCESS_EXIT);\n        });\n        return false;\n      } // pm2 conf module-name:key\n\n\n      var module_name, key_name;\n\n      if (key.indexOf(':') > -1) {\n        module_name = key.split(':')[0];\n        key_name = key.split(':')[1];\n      } else if (key.indexOf('.') > -1) {\n        module_name = key.split('.')[0];\n        key_name = key.split('.')[1];\n      }\n\n      Common.printOut('Value for module ' + chalk.blue(module_name), 'key ' + chalk.blue(key_name) + ': ' + chalk.bold.green(data));\n      return cb ? cb(null, {\n        success: true\n      }) : that.exitCli(cst.SUCCESS_EXIT);\n    });\n  };\n\n  CLI.prototype.set = function (key, value, cb) {\n    var that = this;\n\n    if (!key) {\n      interactiveConfigEdit(function (err) {\n        if (err) return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {\n          success: true\n        }) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n      return false;\n    }\n    /**\n     * Set value\n     */\n\n\n    Configuration.set(key, value, function (err) {\n      if (err) return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n      var values = [];\n      if (key.indexOf('.') > -1) values = key.split('.');\n      if (key.indexOf(':') > -1) values = key.split(':');\n\n      if (values && values.length > 1) {\n        // The first element is the app name (module_conf.json)\n        var app_name = values[0];\n        process.env.PM2_PROGRAMMATIC = 'true';\n        that.restart(app_name, {\n          updateEnv: true\n        }, function (err, data) {\n          process.env.PM2_PROGRAMMATIC = 'false';\n          if (!err) Common.printOut(cst.PREFIX_MSG + 'Module %s restarted', app_name);\n          Common.log('Setting changed');\n          displayConf(app_name, function () {\n            return cb ? cb(null, {\n              success: true\n            }) : that.exitCli(cst.SUCCESS_EXIT);\n          });\n        });\n        return false;\n      }\n\n      displayConf(null, function () {\n        return cb ? cb(null, {\n          success: true\n        }) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    });\n  };\n\n  CLI.prototype.multiset = function (serial, cb) {\n    var that = this;\n    Configuration.multiset(serial, function (err, data) {\n      if (err) return cb ? cb({\n        success: false,\n        err: err\n      }) : that.exitCli(cst.ERROR_EXIT);\n      var values = [];\n      var key = serial.match(/(?:[^ \"]+|\"[^\"]*\")+/g)[0];\n      if (key.indexOf('.') > -1) values = key.split('.');\n      if (key.indexOf(':') > -1) values = key.split(':');\n\n      if (values && values.length > 1) {\n        // The first element is the app name (module_conf.json)\n        var app_name = values[0];\n        process.env.PM2_PROGRAMMATIC = 'true';\n        that.restart(app_name, {\n          updateEnv: true\n        }, function (err, data) {\n          process.env.PM2_PROGRAMMATIC = 'false';\n          if (!err) Common.printOut(cst.PREFIX_MSG + 'Module %s restarted', app_name);\n          displayConf(app_name, function () {\n            return cb ? cb(null, {\n              success: true\n            }) : that.exitCli(cst.SUCCESS_EXIT);\n          });\n        });\n        return false;\n      }\n\n      displayConf(app_name, function () {\n        return cb ? cb(null, {\n          success: true\n        }) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    });\n  };\n\n  CLI.prototype.unset = function (key, cb) {\n    var that = this;\n    Configuration.unset(key, function (err) {\n      if (err) {\n        return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n      }\n\n      displayConf(function () {\n        cb ? cb(null, {\n          success: true\n        }) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    });\n  };\n\n  CLI.prototype.conf = function (key, value, cb) {\n    var that = this;\n\n    if (typeof value === 'function') {\n      cb = value;\n      value = null;\n    } // If key + value = set\n\n\n    if (key && value) {\n      that.set(key, value, function (err) {\n        if (err) return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {\n          success: true\n        }) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    } // If only key = get\n    else if (key) {\n        that.get(key, function (err, data) {\n          if (err) return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n          return cb ? cb(null, {\n            success: true\n          }) : that.exitCli(cst.SUCCESS_EXIT);\n        });\n      } else {\n        interactiveConfigEdit(function (err) {\n          if (err) return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n          return cb ? cb(null, {\n            success: true\n          }) : that.exitCli(cst.SUCCESS_EXIT);\n        });\n      }\n  };\n};\n\nfunction interactiveConfigEdit(cb) {\n  UX.helpers.openEditor(cst.PM2_MODULE_CONF_FILE, function (err, data) {\n    Common.printOut(chalk.bold('Module configuration (%s) edited.'), cst.PM2_MODULE_CONF_FILE);\n    Common.printOut(chalk.bold('To take changes into account, please restart module related.'), cst.PM2_MODULE_CONF_FILE);\n    if (err) return cb(Common.retErr(err));\n    return cb(null, {\n      success: true\n    });\n  });\n}\n/**\n * Configuration\n */\n\n\nfunction displayConf(target_app, cb) {\n  if (typeof target_app == 'function') {\n    cb = target_app;\n    target_app = null;\n  }\n\n  Configuration.getAll(function (err, data) {\n    UX.helpers.dispKeys(data, target_app);\n    return cb();\n  });\n}","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Configuration.js"],"names":["Common","require","cst","UX","chalk","Configuration","module","exports","CLI","prototype","get","key","cb","that","displayConf","err","data","retErr","exitCli","ERROR_EXIT","success","SUCCESS_EXIT","indexOf","console","log","module_name","key_name","split","printOut","blue","bold","green","set","value","interactiveConfigEdit","values","length","app_name","process","env","PM2_PROGRAMMATIC","restart","updateEnv","PREFIX_MSG","multiset","serial","match","unset","conf","helpers","openEditor","PM2_MODULE_CONF_FILE","target_app","getAll","dispKeys"],"mappings":"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","sourcesContent":["\nvar Common               = require('../Common.js');\nvar cst                  = require('../../constants.js');\nvar UX                   = require('./UX');\nvar chalk                = require('chalk');\nvar Configuration        = require('../Configuration.js');\n\nmodule.exports = function(CLI) {\n\n  CLI.prototype.get = function(key, cb) {\n    var that = this;\n\n    if (!key || key == 'all') {\n      displayConf(function(err, data) {\n        if (err)\n          return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n      return false;\n    }\n    Configuration.get(key, function(err, data) {\n      if (err) {\n        return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n      }\n      // pm2 conf module-name\n      if (key.indexOf(':') === -1 && key.indexOf('.') === -1) {\n        displayConf(key, function() {\n          console.log('Modules configuration. Copy/Paste line to edit values.')\n          return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT)\n        });\n        return false;\n      }\n      // pm2 conf module-name:key\n      var module_name, key_name;\n\n      if (key.indexOf(':') > -1) {\n        module_name = key.split(':')[0];\n        key_name    = key.split(':')[1];\n      } else if (key.indexOf('.') > -1) {\n        module_name = key.split('.')[0];\n        key_name    = key.split('.')[1];\n      }\n\n      Common.printOut('Value for module ' + chalk.blue(module_name), 'key ' + chalk.blue(key_name) + ': ' + chalk.bold.green(data));\n\n\n      return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n    });\n  };\n\n  CLI.prototype.set = function(key, value, cb) {\n    var that = this;\n\n    if (!key) {\n      interactiveConfigEdit(function(err) {\n        if (err)\n          return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n      return false;\n    }\n\n    /**\n     * Set value\n     */\n    Configuration.set(key, value, function(err) {\n      if (err)\n        return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n\n      var values = [];\n\n      if (key.indexOf('.') > -1)\n        values = key.split('.');\n\n      if (key.indexOf(':') > -1)\n        values = key.split(':');\n\n      if (values && values.length > 1) {\n        // The first element is the app name (module_conf.json)\n        var app_name = values[0];\n\n        process.env.PM2_PROGRAMMATIC = 'true';\n        that.restart(app_name, {\n          updateEnv : true\n        }, function(err, data) {\n          process.env.PM2_PROGRAMMATIC = 'false';\n          if (!err)\n            Common.printOut(cst.PREFIX_MSG + 'Module %s restarted', app_name);\n          Common.log('Setting changed')\n          displayConf(app_name, function() {\n            return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n          });\n        });\n        return false;\n      }\n      displayConf(null, function() {\n        return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    });\n  };\n\n  CLI.prototype.multiset = function(serial, cb) {\n    var that = this;\n\n    Configuration.multiset(serial, function(err, data) {\n      if (err)\n        return cb ? cb({success:false, err:err}) : that.exitCli(cst.ERROR_EXIT);\n\n      var values = [];\n      var key = serial.match(/(?:[^ \"]+|\"[^\"]*\")+/g)[0];\n\n      if (key.indexOf('.') > -1)\n        values = key.split('.');\n\n      if (key.indexOf(':') > -1)\n        values = key.split(':');\n\n      if (values && values.length > 1) {\n        // The first element is the app name (module_conf.json)\n        var app_name = values[0];\n\n        process.env.PM2_PROGRAMMATIC = 'true';\n        that.restart(app_name, {\n          updateEnv : true\n        }, function(err, data) {\n          process.env.PM2_PROGRAMMATIC = 'false';\n          if (!err)\n            Common.printOut(cst.PREFIX_MSG + 'Module %s restarted', app_name);\n          displayConf(app_name, function() {\n            return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT)\n          });\n        });\n        return false;\n      }\n      displayConf(app_name, function() {\n        return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT)\n      });\n    });\n  };\n\n  CLI.prototype.unset = function(key, cb) {\n    var that = this;\n\n    Configuration.unset(key, function(err) {\n      if (err) {\n        return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n      }\n\n      displayConf(function() { cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT) });\n    });\n  };\n\n  CLI.prototype.conf = function(key, value, cb) {\n    var that = this;\n\n    if (typeof(value) === 'function') {\n      cb = value;\n      value = null;\n    }\n\n    // If key + value = set\n    if (key && value) {\n      that.set(key, value, function(err) {\n        if (err)\n          return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    }\n    // If only key = get\n    else if (key) {\n      that.get(key, function(err, data) {\n        if (err)\n          return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    }\n    else {\n      interactiveConfigEdit(function(err) {\n        if (err)\n          return cb ? cb(Common.retErr(err)) : that.exitCli(cst.ERROR_EXIT);\n        return cb ? cb(null, {success:true}) : that.exitCli(cst.SUCCESS_EXIT);\n      });\n    }\n  };\n\n};\n\nfunction interactiveConfigEdit(cb) {\n  UX.helpers.openEditor(cst.PM2_MODULE_CONF_FILE, function(err, data) {\n    Common.printOut(chalk.bold('Module configuration (%s) edited.'), cst.PM2_MODULE_CONF_FILE);\n    Common.printOut(chalk.bold('To take changes into account, please restart module related.'), cst.PM2_MODULE_CONF_FILE);\n    if (err)\n      return cb(Common.retErr(err));\n    return cb(null, {success:true});\n  });\n\n}\n\n/**\n * Configuration\n */\nfunction displayConf(target_app, cb) {\n  if (typeof(target_app) == 'function') {\n    cb = target_app;\n    target_app = null;\n  }\n\n  Configuration.getAll(function(err, data) {\n    UX.helpers.dispKeys(data, target_app);\n    return cb();\n  });\n}\n"]},"metadata":{},"sourceType":"script"}