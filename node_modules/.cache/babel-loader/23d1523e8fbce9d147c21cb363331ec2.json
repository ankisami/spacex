{"ast":null,"code":"'use strict';\n\nconst BooleanPrompt = require('../types/boolean');\n\nclass TogglePrompt extends BooleanPrompt {\n  async initialize() {\n    await super.initialize();\n    this.value = this.initial = !!this.options.initial;\n    this.disabled = this.options.disabled || 'no';\n    this.enabled = this.options.enabled || 'yes';\n    await this.render();\n  }\n\n  reset() {\n    this.value = this.initial;\n    this.render();\n  }\n\n  delete() {\n    this.alert();\n  }\n\n  toggle() {\n    this.value = !this.value;\n    this.render();\n  }\n\n  enable() {\n    if (this.value === true) return this.alert();\n    this.value = true;\n    this.render();\n  }\n\n  disable() {\n    if (this.value === false) return this.alert();\n    this.value = false;\n    this.render();\n  }\n\n  up() {\n    this.toggle();\n  }\n\n  down() {\n    this.toggle();\n  }\n\n  right() {\n    this.toggle();\n  }\n\n  left() {\n    this.toggle();\n  }\n\n  next() {\n    this.toggle();\n  }\n\n  prev() {\n    this.toggle();\n  }\n\n  dispatch(ch = '', key) {\n    switch (ch.toLowerCase()) {\n      case ' ':\n        return this.toggle();\n\n      case '1':\n      case 'y':\n      case 't':\n        return this.enable();\n\n      case '0':\n      case 'n':\n      case 'f':\n        return this.disable();\n\n      default:\n        {\n          return this.alert();\n        }\n    }\n  }\n\n  format() {\n    let active = str => this.styles.primary.underline(str);\n\n    let value = [this.value ? this.disabled : active(this.disabled), this.value ? active(this.enabled) : this.enabled];\n    return value.join(this.styles.muted(' / '));\n  }\n\n  async render() {\n    let {\n      size\n    } = this.state;\n    let header = await this.header();\n    let prefix = await this.prefix();\n    let separator = await this.separator();\n    let message = await this.message();\n    let output = await this.format();\n    let help = (await this.error()) || (await this.hint());\n    let footer = await this.footer();\n    let prompt = [prefix, message, separator, output].join(' ');\n    this.state.prompt = prompt;\n    if (help && !prompt.includes(help)) prompt += ' ' + help;\n    this.clear(size);\n    this.write([header, prompt, footer].filter(Boolean).join('\\n'));\n    this.write(this.margin[2]);\n    this.restore();\n  }\n\n}\n\nmodule.exports = TogglePrompt;","map":{"version":3,"sources":["/Users/samianki/node_modules/enquirer/lib/prompts/toggle.js"],"names":["BooleanPrompt","require","TogglePrompt","initialize","value","initial","options","disabled","enabled","render","reset","delete","alert","toggle","enable","disable","up","down","right","left","next","prev","dispatch","ch","key","toLowerCase","format","active","str","styles","primary","underline","join","muted","size","state","header","prefix","separator","message","output","help","error","hint","footer","prompt","includes","clear","write","filter","Boolean","margin","restore","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst BooleanPrompt = require('../types/boolean');\n\nclass TogglePrompt extends BooleanPrompt {\n  async initialize() {\n    await super.initialize();\n    this.value = this.initial = !!this.options.initial;\n    this.disabled = this.options.disabled || 'no';\n    this.enabled = this.options.enabled || 'yes';\n    await this.render();\n  }\n\n  reset() {\n    this.value = this.initial;\n    this.render();\n  }\n\n  delete() {\n    this.alert();\n  }\n\n  toggle() {\n    this.value = !this.value;\n    this.render();\n  }\n\n  enable() {\n    if (this.value === true) return this.alert();\n    this.value = true;\n    this.render();\n  }\n  disable() {\n    if (this.value === false) return this.alert();\n    this.value = false;\n    this.render();\n  }\n\n  up() {\n    this.toggle();\n  }\n  down() {\n    this.toggle();\n  }\n  right() {\n    this.toggle();\n  }\n  left() {\n    this.toggle();\n  }\n  next() {\n    this.toggle();\n  }\n  prev() {\n    this.toggle();\n  }\n\n  dispatch(ch = '', key) {\n    switch (ch.toLowerCase()) {\n      case ' ':\n        return this.toggle();\n      case '1':\n      case 'y':\n      case 't':\n        return this.enable();\n      case '0':\n      case 'n':\n      case 'f':\n        return this.disable();\n      default: {\n        return this.alert();\n      }\n    }\n  }\n\n  format() {\n    let active = str => this.styles.primary.underline(str);\n    let value = [\n      this.value ? this.disabled : active(this.disabled),\n      this.value ? active(this.enabled) : this.enabled\n    ];\n    return value.join(this.styles.muted(' / '));\n  }\n\n  async render() {\n    let { size } = this.state;\n\n    let header = await this.header();\n    let prefix = await this.prefix();\n    let separator = await this.separator();\n    let message = await this.message();\n\n    let output = await this.format();\n    let help = (await this.error()) || (await this.hint());\n    let footer = await this.footer();\n\n    let prompt = [prefix, message, separator, output].join(' ');\n    this.state.prompt = prompt;\n\n    if (help && !prompt.includes(help)) prompt += ' ' + help;\n\n    this.clear(size);\n    this.write([header, prompt, footer].filter(Boolean).join('\\n'));\n    this.write(this.margin[2]);\n    this.restore();\n  }\n}\n\nmodule.exports = TogglePrompt;\n"]},"metadata":{},"sourceType":"script"}