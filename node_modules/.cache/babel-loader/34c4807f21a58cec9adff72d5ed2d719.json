{"ast":null,"code":"/**\n * Repeats a string.\n *\n * @param {String} char(s)\n * @param {Number} number of times\n * @return {String} repeated string\n */\nexports.repeat = function (str, times) {\n  return Array(times + 1).join(str);\n};\n/**\n * Truncates a string\n *\n * @api public\n */\n\n\nexports.truncate = function (str, length, chr) {\n  chr = chr || '…';\n  return str.length >= length ? str.substr(0, length - chr.length) + chr : str;\n};\n/**\n * Copies and merges options with defaults.\n *\n * @param {Object} defaults\n * @param {Object} supplied options\n * @return {Object} new (merged) object\n */\n\n\nfunction options(defaults, opts) {\n  for (var p in opts) {\n    if (opts[p] && opts[p].constructor && opts[p].constructor === Object) {\n      defaults[p] = defaults[p] || {};\n      options(defaults[p], opts[p]);\n    } else {\n      defaults[p] = opts[p];\n    }\n  }\n\n  return defaults;\n}\n\n;\nexports.options = options; //\n// For consideration of terminal \"color\" programs like colors.js,\n// which can add ANSI escape color codes to strings,\n// we destyle the ANSI color escape codes for padding calculations.\n//\n// see: http://en.wikipedia.org/wiki/ANSI_escape_code\n//\n\nexports.strlen = function (str) {\n  var code = /\\u001b\\[(?:\\d*;){0,5}\\d*m/g;\n  var stripped = ('' + (str != null ? str : '')).replace(code, '');\n  var split = stripped.split('\\n');\n  return split.reduce(function (memo, s) {\n    return s.length > memo ? s.length : memo;\n  }, 0);\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/cli-tableau/lib/utils.js"],"names":["exports","repeat","str","times","Array","join","truncate","length","chr","substr","options","defaults","opts","p","constructor","Object","strlen","code","stripped","replace","split","reduce","memo","s"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,OAAO,CAACC,MAAR,GAAiB,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACrC,SAAOC,KAAK,CAACD,KAAK,GAAG,CAAT,CAAL,CAAiBE,IAAjB,CAAsBH,GAAtB,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AAEAF,OAAO,CAACM,QAAR,GAAmB,UAAUJ,GAAV,EAAeK,MAAf,EAAuBC,GAAvB,EAA4B;AAC7CA,EAAAA,GAAG,GAAGA,GAAG,IAAI,GAAb;AACA,SAAON,GAAG,CAACK,MAAJ,IAAcA,MAAd,GAAuBL,GAAG,CAACO,MAAJ,CAAW,CAAX,EAAcF,MAAM,GAAGC,GAAG,CAACD,MAA3B,IAAqCC,GAA5D,GAAkEN,GAAzE;AACD,CAHD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASQ,OAAT,CAAkBC,QAAlB,EAA4BC,IAA5B,EAAkC;AAChC,OAAK,IAAIC,CAAT,IAAcD,IAAd,EAAoB;AAClB,QAAIA,IAAI,CAACC,CAAD,CAAJ,IAAWD,IAAI,CAACC,CAAD,CAAJ,CAAQC,WAAnB,IAAkCF,IAAI,CAACC,CAAD,CAAJ,CAAQC,WAAR,KAAwBC,MAA9D,EAAsE;AACpEJ,MAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcF,QAAQ,CAACE,CAAD,CAAR,IAAe,EAA7B;AACAH,MAAAA,OAAO,CAACC,QAAQ,CAACE,CAAD,CAAT,EAAcD,IAAI,CAACC,CAAD,CAAlB,CAAP;AACD,KAHD,MAGO;AACLF,MAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcD,IAAI,CAACC,CAAD,CAAlB;AACD;AACF;;AAED,SAAOF,QAAP;AACD;;AAAA;AACDX,OAAO,CAACU,OAAR,GAAkBA,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAV,OAAO,CAACgB,MAAR,GAAiB,UAAUd,GAAV,EAAe;AAC9B,MAAIe,IAAI,GAAG,4BAAX;AACA,MAAIC,QAAQ,GAAG,CAAC,MAAMhB,GAAG,IAAI,IAAP,GAAcA,GAAd,GAAoB,EAA1B,CAAD,EAAgCiB,OAAhC,CAAwCF,IAAxC,EAA8C,EAA9C,CAAf;AACA,MAAIG,KAAK,GAAGF,QAAQ,CAACE,KAAT,CAAe,IAAf,CAAZ;AACA,SAAOA,KAAK,CAACC,MAAN,CAAa,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AAAE,WAAQA,CAAC,CAAChB,MAAF,GAAWe,IAAZ,GAAoBC,CAAC,CAAChB,MAAtB,GAA+Be,IAAtC;AAA4C,GAA9E,EAAgF,CAAhF,CAAP;AACD,CALD","sourcesContent":["\n/**\n * Repeats a string.\n *\n * @param {String} char(s)\n * @param {Number} number of times\n * @return {String} repeated string\n */\n\nexports.repeat = function (str, times) {\n  return Array(times + 1).join(str)\n}\n\n/**\n * Truncates a string\n *\n * @api public\n */\n\nexports.truncate = function (str, length, chr) {\n  chr = chr || '…'\n  return str.length >= length ? str.substr(0, length - chr.length) + chr : str\n}\n\n/**\n * Copies and merges options with defaults.\n *\n * @param {Object} defaults\n * @param {Object} supplied options\n * @return {Object} new (merged) object\n */\n\nfunction options (defaults, opts) {\n  for (var p in opts) {\n    if (opts[p] && opts[p].constructor && opts[p].constructor === Object) {\n      defaults[p] = defaults[p] || {}\n      options(defaults[p], opts[p])\n    } else {\n      defaults[p] = opts[p]\n    }\n  }\n\n  return defaults\n};\nexports.options = options\n\n//\n// For consideration of terminal \"color\" programs like colors.js,\n// which can add ANSI escape color codes to strings,\n// we destyle the ANSI color escape codes for padding calculations.\n//\n// see: http://en.wikipedia.org/wiki/ANSI_escape_code\n//\nexports.strlen = function (str) {\n  var code = /\\u001b\\[(?:\\d*;){0,5}\\d*m/g\n  var stripped = ('' + (str != null ? str : '')).replace(code, '')\n  var split = stripped.split('\\n')\n  return split.reduce(function (memo, s) { return (s.length > memo) ? s.length : memo }, 0)\n}\n"]},"metadata":{},"sourceType":"script"}