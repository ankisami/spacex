{"ast":null,"code":"// execute an array of asynchronous functions in parallel\n// @param {Array} fns - an array of functions\n// @param {Function} done - callback(err, results)\nfunction parallel(fns, options, done) {\n  if (typeof options === 'function') {\n    done = options;\n    options = {};\n  }\n\n  var keys;\n\n  if (!Array.isArray(fns)) {\n    keys = Object.keys(fns);\n  }\n\n  var length = keys ? keys.length : fns.length;\n  var pending = length;\n  var results = keys ? {} : [];\n\n  function each(i, err, result) {\n    results[i] = result;\n\n    if (--pending === 0 || err && !options.graceful) {\n      if (options.graceful && err && length > 1) {\n        err = null;\n      }\n\n      done && done(err, results);\n      done = null;\n    }\n  }\n\n  if (keys) {\n    keys.forEach(function (key) {\n      fns[key](function (err, res) {\n        each(key, err, res);\n      });\n    });\n  } else {\n    fns.forEach(function (fn, i) {\n      fn(function (err, res) {\n        each(i, err, res);\n      });\n    });\n  }\n}\n\nmodule.exports = parallel;","map":{"version":3,"sources":["/Users/samianki/node_modules/pidusage/lib/helpers/parallel.js"],"names":["parallel","fns","options","done","keys","Array","isArray","Object","length","pending","results","each","i","err","result","graceful","forEach","key","res","fn","module","exports"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAT,CAAmBC,GAAnB,EAAwBC,OAAxB,EAAiCC,IAAjC,EAAuC;AACrC,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,IAAI,GAAGD,OAAP;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIE,IAAJ;;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcL,GAAd,CAAL,EAAyB;AAAEG,IAAAA,IAAI,GAAGG,MAAM,CAACH,IAAP,CAAYH,GAAZ,CAAP;AAAyB;;AACpD,MAAIO,MAAM,GAAGJ,IAAI,GAAGA,IAAI,CAACI,MAAR,GAAiBP,GAAG,CAACO,MAAtC;AACA,MAAIC,OAAO,GAAGD,MAAd;AACA,MAAIE,OAAO,GAAGN,IAAI,GAAG,EAAH,GAAQ,EAA1B;;AAEA,WAASO,IAAT,CAAeC,CAAf,EAAkBC,GAAlB,EAAuBC,MAAvB,EAA+B;AAC7BJ,IAAAA,OAAO,CAACE,CAAD,CAAP,GAAaE,MAAb;;AAEA,QAAI,EAAEL,OAAF,KAAc,CAAd,IAAoBI,GAAG,IAAI,CAACX,OAAO,CAACa,QAAxC,EAAmD;AACjD,UAAIb,OAAO,CAACa,QAAR,IAAoBF,GAApB,IAA2BL,MAAM,GAAG,CAAxC,EAA2C;AACzCK,QAAAA,GAAG,GAAG,IAAN;AACD;;AAEDV,MAAAA,IAAI,IAAIA,IAAI,CAACU,GAAD,EAAMH,OAAN,CAAZ;AACAP,MAAAA,IAAI,GAAG,IAAP;AACD;AACF;;AAED,MAAIC,IAAJ,EAAU;AACRA,IAAAA,IAAI,CAACY,OAAL,CAAa,UAAUC,GAAV,EAAe;AAC1BhB,MAAAA,GAAG,CAACgB,GAAD,CAAH,CAAS,UAAUJ,GAAV,EAAeK,GAAf,EAAoB;AAC3BP,QAAAA,IAAI,CAACM,GAAD,EAAMJ,GAAN,EAAWK,GAAX,CAAJ;AACD,OAFD;AAGD,KAJD;AAKD,GAND,MAMO;AACLjB,IAAAA,GAAG,CAACe,OAAJ,CAAY,UAAUG,EAAV,EAAcP,CAAd,EAAiB;AAC3BO,MAAAA,EAAE,CAAC,UAAUN,GAAV,EAAeK,GAAf,EAAoB;AACrBP,QAAAA,IAAI,CAACC,CAAD,EAAIC,GAAJ,EAASK,GAAT,CAAJ;AACD,OAFC,CAAF;AAGD,KAJD;AAKD;AACF;;AAEDE,MAAM,CAACC,OAAP,GAAiBrB,QAAjB","sourcesContent":["// execute an array of asynchronous functions in parallel\n// @param {Array} fns - an array of functions\n// @param {Function} done - callback(err, results)\nfunction parallel (fns, options, done) {\n  if (typeof options === 'function') {\n    done = options\n    options = {}\n  }\n\n  var keys\n  if (!Array.isArray(fns)) { keys = Object.keys(fns) }\n  var length = keys ? keys.length : fns.length\n  var pending = length\n  var results = keys ? {} : []\n\n  function each (i, err, result) {\n    results[i] = result\n\n    if (--pending === 0 || (err && !options.graceful)) {\n      if (options.graceful && err && length > 1) {\n        err = null\n      }\n\n      done && done(err, results)\n      done = null\n    }\n  }\n\n  if (keys) {\n    keys.forEach(function (key) {\n      fns[key](function (err, res) {\n        each(key, err, res)\n      })\n    })\n  } else {\n    fns.forEach(function (fn, i) {\n      fn(function (err, res) {\n        each(i, err, res)\n      })\n    })\n  }\n}\n\nmodule.exports = parallel\n"]},"metadata":{},"sourceType":"script"}