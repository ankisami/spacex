{"ast":null,"code":"/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\nvar path = require('path');\n\nvar eachLimit = require('async/eachLimit');\n\nvar forEachLimit = require('async/forEachLimit');\n\nvar Configuration = require('../../Configuration.js');\n\nvar cst = require('../../../constants.js');\n\nvar Common = require('../../Common');\n\nvar NPM = require('./NPM.js');\n\nvar TAR = require('./TAR.js');\n\nvar LOCAL = require('./LOCAL.js');\n\nvar Modularizer = module.exports = {};\n/**\n * PM2 Module System.\n */\n\nModularizer.install = function (CLI, module_name, opts, cb) {\n  module_name = module_name.replace(/[;`|]/g, \"\");\n\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (LOCAL.INTERNAL_MODULES.hasOwnProperty(module_name)) {\n    Common.logMod(`Adding dependency ${module_name} to PM2 Runtime`);\n    var currentModule = LOCAL.INTERNAL_MODULES[module_name];\n\n    if (currentModule && currentModule.hasOwnProperty('dependencies')) {\n      LOCAL.installMultipleModules(currentModule.dependencies, cb);\n    } else {\n      LOCAL.install(currentModule, cb);\n    }\n  } else if (module_name == '.') {\n    Common.logMod(`Installing local NPM module`);\n    return NPM.localStart(CLI, opts, cb);\n  } else if (opts.tarball || /\\.tar\\.gz$/i.test(module_name)) {\n    Common.logMod(`Installing TAR module`);\n    TAR.install(CLI, module_name, opts, cb);\n  } else {\n    Common.logMod(`Installing NPM ${module_name} module`);\n    NPM.install(CLI, module_name, opts, cb);\n  }\n};\n/**\n * Launch All Modules\n * Used PM2 at startup\n */\n\n\nModularizer.launchModules = function (CLI, cb) {\n  var modules = Modularizer.listModules();\n  if (!modules) return cb(); // 1#\n\n  function launchNPMModules(cb) {\n    if (!modules.npm_modules) return launchTARModules(cb);\n    eachLimit(Object.keys(modules.npm_modules), 1, function (module_name, next) {\n      NPM.start(CLI, modules, module_name, next);\n    }, function () {\n      launchTARModules(cb);\n    });\n  } // 2#\n\n\n  function launchTARModules(cb) {\n    if (!modules.tar_modules) return cb();\n    eachLimit(Object.keys(modules.tar_modules), 1, function (module_name, next) {\n      TAR.start(CLI, module_name, next);\n    }, function () {\n      return cb ? cb(null) : false;\n    });\n  }\n\n  launchNPMModules(cb);\n};\n\nModularizer.package = function (CLI, module_path, cb) {\n  var fullpath = process.cwd();\n  if (module_path) fullpath = require('path').resolve(module_path);\n  TAR.package(fullpath, process.cwd(), cb);\n};\n/**\n * Uninstall module\n */\n\n\nModularizer.uninstall = function (CLI, module_name, cb) {\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Uninstalling module ' + module_name);\n  var modules_list = Modularizer.listModules();\n\n  if (module_name == 'all') {\n    if (!modules_list) return cb();\n    return forEachLimit(Object.keys(modules_list.npm_modules), 1, function (module_name, next) {\n      NPM.uninstall(CLI, module_name, next);\n    }, () => {\n      forEachLimit(Object.keys(modules_list.tar_modules), 1, function (module_name, next) {\n        TAR.uninstall(CLI, module_name, next);\n      }, cb);\n    });\n  }\n\n  if (modules_list.npm_modules[module_name]) {\n    NPM.uninstall(CLI, module_name, cb);\n  } else if (modules_list.tar_modules[module_name]) {\n    TAR.uninstall(CLI, module_name, cb);\n  } else {\n    Common.errMod('Unknown module');\n    CLI.exitCli(1);\n  }\n};\n/**\n * List modules based on modules present in ~/.pm2/modules/ folder\n */\n\n\nModularizer.listModules = function () {\n  return {\n    npm_modules: Configuration.getSync(cst.MODULE_CONF_PREFIX) || {},\n    tar_modules: Configuration.getSync(cst.MODULE_CONF_PREFIX_TAR) || {}\n  };\n};\n\nModularizer.getAdditionalConf = function (app_name) {\n  return NPM.getModuleConf(app_name);\n};\n\nModularizer.publish = function (PM2, folder, opts, cb) {\n  if (opts.npm == true) {\n    NPM.publish(opts, cb);\n  } else {\n    TAR.publish(PM2, folder, cb);\n  }\n};\n\nModularizer.generateSample = function (app_name, cb) {\n  NPM.generateSample(app_name, cb);\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Modules/Modularizer.js"],"names":["path","require","eachLimit","forEachLimit","Configuration","cst","Common","NPM","TAR","LOCAL","Modularizer","module","exports","install","CLI","module_name","opts","cb","replace","INTERNAL_MODULES","hasOwnProperty","logMod","currentModule","installMultipleModules","dependencies","localStart","tarball","test","launchModules","modules","listModules","launchNPMModules","npm_modules","launchTARModules","Object","keys","next","start","tar_modules","package","module_path","fullpath","process","cwd","resolve","uninstall","printOut","PREFIX_MSG_MOD","modules_list","errMod","exitCli","getSync","MODULE_CONF_PREFIX","MODULE_CONF_PREFIX_TAR","getAdditionalConf","app_name","getModuleConf","publish","PM2","folder","npm","generateSample"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\nvar path          = require('path');\nvar eachLimit     = require('async/eachLimit');\nvar forEachLimit  = require('async/forEachLimit');\n\nvar Configuration = require('../../Configuration.js');\nvar cst = require('../../../constants.js');\nvar Common = require('../../Common');\nvar NPM = require('./NPM.js')\nvar TAR = require('./TAR.js')\nvar LOCAL = require('./LOCAL.js')\n\nvar Modularizer = module.exports = {};\n\n/**\n * PM2 Module System.\n */\nModularizer.install = function (CLI, module_name, opts, cb) {\n  module_name = module_name.replace(/[;`|]/g, \"\");\n  if (typeof(opts) == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (LOCAL.INTERNAL_MODULES.hasOwnProperty(module_name)) {\n    Common.logMod(`Adding dependency ${module_name} to PM2 Runtime`);\n    var currentModule = LOCAL.INTERNAL_MODULES[module_name];\n    if (currentModule && currentModule.hasOwnProperty('dependencies')) {\n      LOCAL.installMultipleModules(currentModule.dependencies, cb);\n    } else {\n      LOCAL.install(currentModule, cb);\n    }\n  }\n  else if (module_name == '.') {\n    Common.logMod(`Installing local NPM module`);\n    return NPM.localStart(CLI, opts, cb)\n  }\n  else if (opts.tarball || /\\.tar\\.gz$/i.test(module_name)) {\n    Common.logMod(`Installing TAR module`);\n    TAR.install(CLI, module_name, opts, cb)\n  }\n  else {\n    Common.logMod(`Installing NPM ${module_name} module`);\n    NPM.install(CLI, module_name, opts, cb)\n  }\n};\n\n/**\n * Launch All Modules\n * Used PM2 at startup\n */\nModularizer.launchModules = function(CLI, cb) {\n  var modules = Modularizer.listModules();\n\n  if (!modules) return cb();\n\n  // 1#\n  function launchNPMModules(cb) {\n    if (!modules.npm_modules) return launchTARModules(cb)\n\n    eachLimit(Object.keys(modules.npm_modules), 1, function(module_name, next) {\n      NPM.start(CLI, modules, module_name, next)\n    }, function() {\n      launchTARModules(cb)\n    });\n  }\n\n  // 2#\n  function launchTARModules(cb) {\n    if (!modules.tar_modules) return cb()\n\n    eachLimit(Object.keys(modules.tar_modules), 1, function(module_name, next) {\n      TAR.start(CLI, module_name, next)\n    }, function() {\n      return cb ? cb(null) : false;\n    });\n  }\n\n  launchNPMModules(cb)\n}\n\nModularizer.package = function(CLI, module_path, cb) {\n  var fullpath = process.cwd()\n  if (module_path)\n    fullpath = require('path').resolve(module_path)\n  TAR.package(fullpath, process.cwd(), cb)\n}\n\n/**\n * Uninstall module\n */\nModularizer.uninstall = function(CLI, module_name, cb) {\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Uninstalling module ' + module_name);\n  var modules_list = Modularizer.listModules();\n\n  if (module_name == 'all') {\n    if (!modules_list) return cb();\n\n    return forEachLimit(Object.keys(modules_list.npm_modules), 1, function(module_name, next) {\n      NPM.uninstall(CLI, module_name, next)\n    }, () => {\n      forEachLimit(Object.keys(modules_list.tar_modules), 1, function(module_name, next) {\n        TAR.uninstall(CLI, module_name, next)\n      }, cb)\n    });\n  }\n\n  if (modules_list.npm_modules[module_name]) {\n    NPM.uninstall(CLI, module_name, cb)\n  } else if (modules_list.tar_modules[module_name]) {\n    TAR.uninstall(CLI, module_name, cb)\n  }\n  else {\n    Common.errMod('Unknown module')\n    CLI.exitCli(1)\n  }\n};\n\n/**\n * List modules based on modules present in ~/.pm2/modules/ folder\n */\nModularizer.listModules = function() {\n  return {\n    npm_modules: Configuration.getSync(cst.MODULE_CONF_PREFIX) || {},\n    tar_modules: Configuration.getSync(cst.MODULE_CONF_PREFIX_TAR) || {}\n  }\n};\n\nModularizer.getAdditionalConf = function(app_name) {\n  return NPM.getModuleConf(app_name)\n};\n\nModularizer.publish = function(PM2, folder, opts, cb) {\n  if (opts.npm == true) {\n    NPM.publish(opts, cb)\n  }\n  else {\n    TAR.publish(PM2, folder, cb)\n  }\n};\n\nModularizer.generateSample = function(app_name, cb) {\n  NPM.generateSample(app_name, cb)\n};\n"]},"metadata":{},"sourceType":"script"}