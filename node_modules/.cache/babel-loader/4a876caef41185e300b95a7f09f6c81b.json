{"ast":null,"code":"/**\n * program.js - basic curses-like functionality for blessed.\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar EventEmitter = require('events').EventEmitter,\n    StringDecoder = require('string_decoder').StringDecoder,\n    cp = require('child_process'),\n    util = require('util'),\n    fs = require('fs');\n\nvar Tput = require('./tput'),\n    colors = require('./colors'),\n    slice = Array.prototype.slice;\n\nvar nextTick = global.setImmediate || process.nextTick.bind(process);\n/**\n * Program\n */\n\nfunction Program(options) {\n  var self = this;\n\n  if (!(this instanceof Program)) {\n    return new Program(options);\n  }\n\n  Program.bind(this);\n  EventEmitter.call(this);\n\n  if (!options || options.__proto__ !== Object.prototype) {\n    options = {\n      input: arguments[0],\n      output: arguments[1]\n    };\n  }\n\n  this.options = options;\n  this.input = options.input || process.stdin;\n  this.output = options.output || process.stdout;\n  options.log = options.log || options.dump;\n\n  if (options.log) {\n    this._logger = fs.createWriteStream(options.log);\n    if (options.dump) this.setupDump();\n  }\n\n  this.zero = options.zero !== false;\n  this.useBuffer = options.buffer;\n  this.x = 0;\n  this.y = 0;\n  this.savedX = 0;\n  this.savedY = 0;\n  this.cols = this.output.columns || 1;\n  this.rows = this.output.rows || 1;\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n  this._terminal = options.terminal || options.term || process.env.TERM || (process.platform === 'win32' ? 'windows-ansi' : 'xterm');\n  this._terminal = this._terminal.toLowerCase(); // OSX\n\n  this.isOSXTerm = process.env.TERM_PROGRAM === 'Apple_Terminal';\n  this.isiTerm2 = process.env.TERM_PROGRAM === 'iTerm.app' || !!process.env.ITERM_SESSION_ID; // VTE\n  // NOTE: lxterminal does not provide an env variable to check for.\n  // NOTE: gnome-terminal and sakura use a later version of VTE\n  // which provides VTE_VERSION as well as supports SGR events.\n\n  this.isXFCE = /xfce/i.test(process.env.COLORTERM);\n  this.isTerminator = !!process.env.TERMINATOR_UUID;\n  this.isLXDE = false;\n  this.isVTE = !!process.env.VTE_VERSION || this.isXFCE || this.isTerminator || this.isLXDE; // xterm and rxvt - not accurate\n\n  this.isRxvt = /rxvt/i.test(process.env.COLORTERM);\n  this.isXterm = false;\n  this.tmux = !!process.env.TMUX;\n\n  this.tmuxVersion = function () {\n    if (!self.tmux) return 2;\n\n    try {\n      var version = cp.execFileSync('tmux', ['-V'], {\n        encoding: 'utf8'\n      });\n      return +/^tmux ([\\d.]+)/i.exec(version.trim().split('\\n')[0])[1];\n    } catch (e) {\n      return 2;\n    }\n  }();\n\n  this._buf = '';\n  this._flush = this.flush.bind(this);\n\n  if (options.tput !== false) {\n    this.setupTput();\n  }\n\n  this.listen();\n}\n\nProgram.global = null;\nProgram.total = 0;\nProgram.instances = [];\n\nProgram.bind = function (program) {\n  if (!Program.global) {\n    Program.global = program;\n  }\n\n  if (!~Program.instances.indexOf(program)) {\n    Program.instances.push(program);\n    program.index = Program.total;\n    Program.total++;\n  }\n\n  if (Program._bound) return;\n  Program._bound = true;\n  unshiftEvent(process, 'exit', Program._exitHandler = function () {\n    Program.instances.forEach(function (program) {\n      // Potentially reset window title on exit:\n      // if (program._originalTitle) {\n      //   program.setTitle(program._originalTitle);\n      // }\n      // Ensure the buffer is flushed (it should\n      // always be at this point, but who knows).\n      program.flush(); // Ensure _exiting is set (could technically\n      // use process._exiting).\n\n      program._exiting = true;\n    });\n  });\n};\n\nProgram.prototype.__proto__ = EventEmitter.prototype;\nProgram.prototype.type = 'program';\n\nProgram.prototype.log = function () {\n  return this._log('LOG', util.format.apply(util, arguments));\n};\n\nProgram.prototype.debug = function () {\n  if (!this.options.debug) return;\n  return this._log('DEBUG', util.format.apply(util, arguments));\n};\n\nProgram.prototype._log = function (pre, msg) {\n  if (!this._logger) return;\n  return this._logger.write(pre + ': ' + msg + '\\n-\\n');\n};\n\nProgram.prototype.setupDump = function () {\n  var self = this,\n      write = this.output.write,\n      decoder = new StringDecoder('utf8');\n\n  function stringify(data) {\n    return caret(data.replace(/\\r/g, '\\\\r').replace(/\\n/g, '\\\\n').replace(/\\t/g, '\\\\t')).replace(/[^ -~]/g, function (ch) {\n      if (ch.charCodeAt(0) > 0xff) return ch;\n      ch = ch.charCodeAt(0).toString(16);\n\n      if (ch.length > 2) {\n        if (ch.length < 4) ch = '0' + ch;\n        return '\\\\u' + ch;\n      }\n\n      if (ch.length < 2) ch = '0' + ch;\n      return '\\\\x' + ch;\n    });\n  }\n\n  function caret(data) {\n    return data.replace(/[\\0\\x80\\x1b-\\x1f\\x7f\\x01-\\x1a]/g, function (ch) {\n      switch (ch) {\n        case '\\0':\n        case '\\200':\n          ch = '@';\n          break;\n\n        case '\\x1b':\n          ch = '[';\n          break;\n\n        case '\\x1c':\n          ch = '\\\\';\n          break;\n\n        case '\\x1d':\n          ch = ']';\n          break;\n\n        case '\\x1e':\n          ch = '^';\n          break;\n\n        case '\\x1f':\n          ch = '_';\n          break;\n\n        case '\\x7f':\n          ch = '?';\n          break;\n\n        default:\n          ch = ch.charCodeAt(0); // From ('A' - 64) to ('Z' - 64).\n\n          if (ch >= 1 && ch <= 26) {\n            ch = String.fromCharCode(ch + 64);\n          } else {\n            return String.fromCharCode(ch);\n          }\n\n          break;\n      }\n\n      return '^' + ch;\n    });\n  }\n\n  this.input.on('data', function (data) {\n    self._log('IN', stringify(decoder.write(data)));\n  });\n\n  this.output.write = function (data) {\n    self._log('OUT', stringify(data));\n\n    return write.apply(this, arguments);\n  };\n};\n\nProgram.prototype.setupTput = function () {\n  if (this._tputSetup) return;\n  this._tputSetup = true;\n\n  var self = this,\n      options = this.options,\n      write = this._write.bind(this);\n\n  var tput = this.tput = new Tput({\n    terminal: this.terminal,\n    padding: options.padding,\n    extended: options.extended,\n    printf: options.printf,\n    termcap: options.termcap,\n    forceUnicode: options.forceUnicode\n  });\n\n  if (tput.error) {\n    nextTick(function () {\n      self.emit('warning', tput.error.message);\n    });\n  }\n\n  if (tput.padding) {\n    nextTick(function () {\n      self.emit('warning', 'Terminfo padding has been enabled.');\n    });\n  }\n\n  this.put = function () {\n    var args = slice.call(arguments),\n        cap = args.shift();\n\n    if (tput[cap]) {\n      return this._write(tput[cap].apply(tput, args));\n    }\n  };\n\n  Object.keys(tput).forEach(function (key) {\n    if (self[key] == null) {\n      self[key] = tput[key];\n    }\n\n    if (typeof tput[key] !== 'function') {\n      self.put[key] = tput[key];\n      return;\n    }\n\n    if (tput.padding) {\n      self.put[key] = function () {\n        return tput._print(tput[key].apply(tput, arguments), write);\n      };\n    } else {\n      self.put[key] = function () {\n        return self._write(tput[key].apply(tput, arguments));\n      };\n    }\n  });\n};\n\nProgram.prototype.__defineGetter__('terminal', function () {\n  return this._terminal;\n});\n\nProgram.prototype.__defineSetter__('terminal', function (terminal) {\n  this.setTerminal(terminal);\n  return this.terminal;\n});\n\nProgram.prototype.setTerminal = function (terminal) {\n  this._terminal = terminal.toLowerCase();\n  delete this._tputSetup;\n  this.setupTput();\n};\n\nProgram.prototype.has = function (name) {\n  return this.tput ? this.tput.has(name) : false;\n};\n\nProgram.prototype.term = function (is) {\n  return this.terminal.indexOf(is) === 0;\n};\n\nProgram.prototype.listen = function () {\n  var self = this; // Potentially reset window title on exit:\n  // if (!this.isRxvt) {\n  //   if (!this.isVTE) this.setTitleModeFeature(3);\n  //   this.manipulateWindow(21, function(err, data) {\n  //     if (err) return;\n  //     self._originalTitle = data.text;\n  //   });\n  // }\n  // Listen for keys/mouse on input\n\n  if (!this.input._blessedInput) {\n    this.input._blessedInput = 1;\n\n    this._listenInput();\n  } else {\n    this.input._blessedInput++;\n  }\n\n  this.on('newListener', this._newHandler = function fn(type) {\n    if (type === 'keypress' || type === 'mouse') {\n      self.removeListener('newListener', fn);\n\n      if (self.input.setRawMode && !self.input.isRaw) {\n        self.input.setRawMode(true);\n        self.input.resume();\n      }\n    }\n  });\n  this.on('newListener', function fn(type) {\n    if (type === 'mouse') {\n      self.removeListener('newListener', fn);\n      self.bindMouse();\n    }\n  }); // Listen for resize on output\n\n  if (!this.output._blessedOutput) {\n    this.output._blessedOutput = 1;\n\n    this._listenOutput();\n  } else {\n    this.output._blessedOutput++;\n  }\n};\n\nProgram.prototype._listenInput = function () {\n  var keys = require('./keys'),\n      self = this; // Input\n\n\n  this.input.on('keypress', this.input._keypressHandler = function (ch, key) {\n    key = key || {\n      ch: ch\n    };\n\n    if (key.name === 'undefined' && (key.code === '[M' || key.code === '[I' || key.code === '[O')) {\n      // A mouse sequence. The `keys` module doesn't understand these.\n      return;\n    }\n\n    if (key.name === 'undefined') {\n      // Not sure what this is, but we should probably ignore it.\n      return;\n    }\n\n    if (key.name === 'enter' && key.sequence === '\\n') {\n      key.name = 'linefeed';\n    }\n\n    if (key.name === 'return' && key.sequence === '\\r') {\n      self.input.emit('keypress', ch, merge({}, key, {\n        name: 'enter'\n      }));\n    }\n\n    var name = (key.ctrl ? 'C-' : '') + (key.meta ? 'M-' : '') + (key.shift && key.name ? 'S-' : '') + (key.name || ch);\n    key.full = name;\n    Program.instances.forEach(function (program) {\n      if (program.input !== self.input) return;\n      program.emit('keypress', ch, key);\n      program.emit('key ' + name, ch, key);\n    });\n  });\n  this.input.on('data', this.input._dataHandler = function (data) {\n    Program.instances.forEach(function (program) {\n      if (program.input !== self.input) return;\n      program.emit('data', data);\n    });\n  });\n  keys.emitKeypressEvents(this.input);\n};\n\nProgram.prototype._listenOutput = function () {\n  var self = this;\n\n  if (!this.output.isTTY) {\n    nextTick(function () {\n      self.emit('warning', 'Output is not a TTY');\n    });\n  } // Output\n\n\n  function resize() {\n    Program.instances.forEach(function (program) {\n      if (program.output !== self.output) return;\n      program.cols = program.output.columns;\n      program.rows = program.output.rows;\n      program.emit('resize');\n    });\n  }\n\n  this.output.on('resize', this.output._resizeHandler = function () {\n    Program.instances.forEach(function (program) {\n      if (program.output !== self.output) return;\n\n      if (!program.options.resizeTimeout) {\n        return resize();\n      }\n\n      if (program._resizeTimer) {\n        clearTimeout(program._resizeTimer);\n        delete program._resizeTimer;\n      }\n\n      var time = typeof program.options.resizeTimeout === 'number' ? program.options.resizeTimeout : 300;\n      program._resizeTimer = setTimeout(resize, time);\n    });\n  });\n};\n\nProgram.prototype.destroy = function () {\n  var index = Program.instances.indexOf(this);\n\n  if (~index) {\n    Program.instances.splice(index, 1);\n    Program.total--;\n    this.flush();\n    this._exiting = true;\n    Program.global = Program.instances[0];\n\n    if (Program.total === 0) {\n      Program.global = null;\n      process.removeListener('exit', Program._exitHandler);\n      delete Program._exitHandler;\n      delete Program._bound;\n    }\n\n    this.input._blessedInput--;\n    this.output._blessedOutput--;\n\n    if (this.input._blessedInput === 0) {\n      this.input.removeListener('keypress', this.input._keypressHandler);\n      this.input.removeListener('data', this.input._dataHandler);\n      delete this.input._keypressHandler;\n      delete this.input._dataHandler;\n\n      if (this.input.setRawMode) {\n        if (this.input.isRaw) {\n          this.input.setRawMode(false);\n        }\n\n        if (!this.input.destroyed) {\n          this.input.pause();\n        }\n      }\n    }\n\n    if (this.output._blessedOutput === 0) {\n      this.output.removeListener('resize', this.output._resizeHandler);\n      delete this.output._resizeHandler;\n    }\n\n    this.removeListener('newListener', this._newHandler);\n    delete this._newHandler;\n    this.destroyed = true;\n    this.emit('destroy');\n  }\n};\n\nProgram.prototype.key = function (key, listener) {\n  if (typeof key === 'string') key = key.split(/\\s*,\\s*/);\n  key.forEach(function (key) {\n    return this.on('key ' + key, listener);\n  }, this);\n};\n\nProgram.prototype.onceKey = function (key, listener) {\n  if (typeof key === 'string') key = key.split(/\\s*,\\s*/);\n  key.forEach(function (key) {\n    return this.once('key ' + key, listener);\n  }, this);\n};\n\nProgram.prototype.unkey = Program.prototype.removeKey = function (key, listener) {\n  if (typeof key === 'string') key = key.split(/\\s*,\\s*/);\n  key.forEach(function (key) {\n    return this.removeListener('key ' + key, listener);\n  }, this);\n}; // XTerm mouse events\n// http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n// To better understand these\n// the xterm code is very helpful:\n// Relevant files:\n//   button.c, charproc.c, misc.c\n// Relevant functions in xterm/button.c:\n//   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n// send a mouse event:\n// regular/utf8: ^[[M Cb Cx Cy\n// urxvt: ^[[ Cb ; Cx ; Cy M\n// sgr: ^[[ Cb ; Cx ; Cy M/m\n// vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n// locator: CSI P e ; P b ; P r ; P c ; P p & w\n// motion example of a left click:\n// ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n// mouseup, mousedown, mousewheel\n// left click: ^[[M 3<^[[M#3<\n// mousewheel up: ^[[M`3>\n\n\nProgram.prototype.bindMouse = function () {\n  if (this._boundMouse) return;\n  this._boundMouse = true;\n  var decoder = new StringDecoder('utf8'),\n      self = this;\n  this.on('data', function (data) {\n    var text = decoder.write(data);\n    if (!text) return;\n\n    self._bindMouse(text, data);\n  });\n};\n\nProgram.prototype._bindMouse = function (s, buf) {\n  var self = this,\n      key,\n      parts,\n      b,\n      x,\n      y,\n      mod,\n      params,\n      down,\n      page,\n      button;\n  key = {\n    name: undefined,\n    ctrl: false,\n    meta: false,\n    shift: false\n  };\n\n  if (Buffer.isBuffer(s)) {\n    if (s[0] > 127 && s[1] === undefined) {\n      s[0] -= 128;\n      s = '\\x1b' + s.toString('utf-8');\n    } else {\n      s = s.toString('utf-8');\n    }\n  } // if (this.8bit) {\n  //   s = s.replace(/\\233/g, '\\x1b[');\n  //   buf = new Buffer(s, 'utf8');\n  // }\n  // XTerm / X10 for buggy VTE\n  // VTE can only send unsigned chars and no unicode for coords. This limits\n  // them to 0xff. However, normally the x10 protocol does not allow a byte\n  // under 0x20, but since VTE can have the bytes overflow, we can consider\n  // bytes below 0x20 to be up to 0xff + 0x20. This gives a limit of 287. Since\n  // characters ranging from 223 to 248 confuse javascript's utf parser, we\n  // need to parse the raw binary. We can detect whether the terminal is using\n  // a bugged VTE version by examining the coordinates and seeing whether they\n  // are a value they would never otherwise be with a properly implemented x10\n  // protocol. This method of detecting VTE is only 99% reliable because we\n  // can't check if the coords are 0x00 (255) since that is a valid x10 coord\n  // technically.\n\n\n  var bx = s.charCodeAt(4);\n  var by = s.charCodeAt(5);\n\n  if (buf[0] === 0x1b && buf[1] === 0x5b && buf[2] === 0x4d && (this.isVTE || bx >= 65533 || by >= 65533 || bx > 0x00 && bx < 0x20 || by > 0x00 && by < 0x20 || buf[4] > 223 && buf[4] < 248 && buf.length === 6 || buf[5] > 223 && buf[5] < 248 && buf.length === 6)) {\n    b = buf[3];\n    x = buf[4];\n    y = buf[5]; // unsigned char overflow.\n\n    if (x < 0x20) x += 0xff;\n    if (y < 0x20) y += 0xff; // Convert the coordinates into a\n    // properly formatted x10 utf8 sequence.\n\n    s = '\\x1b[M' + String.fromCharCode(b) + String.fromCharCode(x) + String.fromCharCode(y);\n  } // XTerm / X10\n\n\n  if (parts = /^\\x1b\\[M([\\x00\\u0020-\\uffff]{3})/.exec(s)) {\n    b = parts[1].charCodeAt(0);\n    x = parts[1].charCodeAt(1);\n    y = parts[1].charCodeAt(2);\n    key.name = 'mouse';\n    key.type = 'X10';\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x - 32;\n    key.y = y - 32;\n    if (this.zero) key.x--, key.y--;\n    if (x === 0) key.x = 255;\n    if (y === 0) key.y = 255;\n    mod = b >> 2;\n    key.shift = !!(mod & 1);\n    key.meta = !!(mod >> 1 & 1);\n    key.ctrl = !!(mod >> 2 & 1);\n    b -= 32;\n\n    if (b >> 6 & 1) {\n      key.action = b & 1 ? 'wheeldown' : 'wheelup';\n      key.button = 'middle';\n    } else if (b === 3) {\n      // NOTE: x10 and urxvt have no way\n      // of telling which button mouseup used.\n      key.action = 'mouseup';\n      key.button = this._lastButton || 'unknown';\n      delete this._lastButton;\n    } else {\n      key.action = 'mousedown';\n      button = b & 3;\n      key.button = button === 0 ? 'left' : button === 1 ? 'middle' : button === 2 ? 'right' : 'unknown';\n      this._lastButton = key.button;\n    } // Probably a movement.\n    // The *newer* VTE gets mouse movements comepletely wrong.\n    // This presents a problem: older versions of VTE that get it right might\n    // be confused by the second conditional in the if statement.\n    // NOTE: Possibly just switch back to the if statement below.\n    // none, shift, ctrl, alt\n    // gnome: 32, 36, 48, 40\n    // xterm: 35, _, 51, _\n    // urxvt: 35, _, _, _\n    // if (key.action === 'mousedown' && key.button === 'unknown') {\n\n\n    if (b === 35 || b === 39 || b === 51 || b === 43 || this.isVTE && (b === 32 || b === 36 || b === 48 || b === 40)) {\n      delete key.button;\n      key.action = 'mousemove';\n    }\n\n    self.emit('mouse', key);\n    return;\n  } // URxvt\n\n\n  if (parts = /^\\x1b\\[(\\d+;\\d+;\\d+)M/.exec(s)) {\n    params = parts[1].split(';');\n    b = +params[0];\n    x = +params[1];\n    y = +params[2];\n    key.name = 'mouse';\n    key.type = 'urxvt';\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n    if (this.zero) key.x--, key.y--;\n    mod = b >> 2;\n    key.shift = !!(mod & 1);\n    key.meta = !!(mod >> 1 & 1);\n    key.ctrl = !!(mod >> 2 & 1); // XXX Bug in urxvt after wheelup/down on mousemove\n    // NOTE: This may be different than 128/129 depending\n    // on mod keys.\n\n    if (b === 128 || b === 129) {\n      b = 67;\n    }\n\n    b -= 32;\n\n    if (b >> 6 & 1) {\n      key.action = b & 1 ? 'wheeldown' : 'wheelup';\n      key.button = 'middle';\n    } else if (b === 3) {\n      // NOTE: x10 and urxvt have no way\n      // of telling which button mouseup used.\n      key.action = 'mouseup';\n      key.button = this._lastButton || 'unknown';\n      delete this._lastButton;\n    } else {\n      key.action = 'mousedown';\n      button = b & 3;\n      key.button = button === 0 ? 'left' : button === 1 ? 'middle' : button === 2 ? 'right' : 'unknown'; // NOTE: 0/32 = mousemove, 32/64 = mousemove with left down\n      // if ((b >> 1) === 32)\n\n      this._lastButton = key.button;\n    } // Probably a movement.\n    // The *newer* VTE gets mouse movements comepletely wrong.\n    // This presents a problem: older versions of VTE that get it right might\n    // be confused by the second conditional in the if statement.\n    // NOTE: Possibly just switch back to the if statement below.\n    // none, shift, ctrl, alt\n    // urxvt: 35, _, _, _\n    // gnome: 32, 36, 48, 40\n    // if (key.action === 'mousedown' && key.button === 'unknown') {\n\n\n    if (b === 35 || b === 39 || b === 51 || b === 43 || this.isVTE && (b === 32 || b === 36 || b === 48 || b === 40)) {\n      delete key.button;\n      key.action = 'mousemove';\n    }\n\n    self.emit('mouse', key);\n    return;\n  } // SGR\n\n\n  if (parts = /^\\x1b\\[<(\\d+;\\d+;\\d+)([mM])/.exec(s)) {\n    down = parts[2] === 'M';\n    params = parts[1].split(';');\n    b = +params[0];\n    x = +params[1];\n    y = +params[2];\n    key.name = 'mouse';\n    key.type = 'sgr';\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n    if (this.zero) key.x--, key.y--;\n    mod = b >> 2;\n    key.shift = !!(mod & 1);\n    key.meta = !!(mod >> 1 & 1);\n    key.ctrl = !!(mod >> 2 & 1);\n\n    if (b >> 6 & 1) {\n      key.action = b & 1 ? 'wheeldown' : 'wheelup';\n      key.button = 'middle';\n    } else {\n      key.action = down ? 'mousedown' : 'mouseup';\n      button = b & 3;\n      key.button = button === 0 ? 'left' : button === 1 ? 'middle' : button === 2 ? 'right' : 'unknown';\n    } // Probably a movement.\n    // The *newer* VTE gets mouse movements comepletely wrong.\n    // This presents a problem: older versions of VTE that get it right might\n    // be confused by the second conditional in the if statement.\n    // NOTE: Possibly just switch back to the if statement below.\n    // none, shift, ctrl, alt\n    // xterm: 35, _, 51, _\n    // gnome: 32, 36, 48, 40\n    // if (key.action === 'mousedown' && key.button === 'unknown') {\n\n\n    if (b === 35 || b === 39 || b === 51 || b === 43 || this.isVTE && (b === 32 || b === 36 || b === 48 || b === 40)) {\n      delete key.button;\n      key.action = 'mousemove';\n    }\n\n    self.emit('mouse', key);\n    return;\n  } // DEC\n  // The xterm mouse documentation says there is a\n  // `<` prefix, the DECRQLP says there is no prefix.\n\n\n  if (parts = /^\\x1b\\[<(\\d+;\\d+;\\d+;\\d+)&w/.exec(s)) {\n    params = parts[1].split(';');\n    b = +params[0];\n    x = +params[1];\n    y = +params[2];\n    page = +params[3];\n    key.name = 'mouse';\n    key.type = 'dec';\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n    key.page = page;\n    if (this.zero) key.x--, key.y--;\n    key.action = b === 3 ? 'mouseup' : 'mousedown';\n    key.button = b === 2 ? 'left' : b === 4 ? 'middle' : b === 6 ? 'right' : 'unknown';\n    self.emit('mouse', key);\n    return;\n  } // vt300\n\n\n  if (parts = /^\\x1b\\[24([0135])~\\[(\\d+),(\\d+)\\]\\r/.exec(s)) {\n    b = +parts[1];\n    x = +parts[2];\n    y = +parts[3];\n    key.name = 'mouse';\n    key.type = 'vt300';\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n    if (this.zero) key.x--, key.y--;\n    key.action = 'mousedown';\n    key.button = b === 1 ? 'left' : b === 2 ? 'middle' : b === 5 ? 'right' : 'unknown';\n    self.emit('mouse', key);\n    return;\n  }\n\n  if (parts = /^\\x1b\\[(O|I)/.exec(s)) {\n    key.action = parts[1] === 'I' ? 'focus' : 'blur';\n    self.emit('mouse', key);\n    self.emit(key.action);\n    return;\n  }\n}; // gpm support for linux vc\n\n\nProgram.prototype.enableGpm = function () {\n  var self = this;\n\n  var gpmclient = require('./gpmclient');\n\n  if (this.gpm) return;\n  this.gpm = gpmclient();\n  this.gpm.on('btndown', function (btn, modifier, x, y) {\n    x--, y--;\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mousedown',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n    self.emit('mouse', key);\n  });\n  this.gpm.on('btnup', function (btn, modifier, x, y) {\n    x--, y--;\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mouseup',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n    self.emit('mouse', key);\n  });\n  this.gpm.on('move', function (btn, modifier, x, y) {\n    x--, y--;\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mousemove',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n    self.emit('mouse', key);\n  });\n  this.gpm.on('drag', function (btn, modifier, x, y) {\n    x--, y--;\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mousemove',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n    self.emit('mouse', key);\n  });\n  this.gpm.on('mousewheel', function (btn, modifier, x, y, dx, dy) {\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: dy > 0 ? 'wheelup' : 'wheeldown',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y, dx, dy],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n    self.emit('mouse', key);\n  });\n};\n\nProgram.prototype.disableGpm = function () {\n  if (this.gpm) {\n    this.gpm.stop();\n    delete this.gpm;\n  }\n}; // All possible responses from the terminal\n\n\nProgram.prototype.bindResponse = function () {\n  if (this._boundResponse) return;\n  this._boundResponse = true;\n  var decoder = new StringDecoder('utf8'),\n      self = this;\n  this.on('data', function (data) {\n    data = decoder.write(data);\n    if (!data) return;\n\n    self._bindResponse(data);\n  });\n};\n\nProgram.prototype._bindResponse = function (s) {\n  var out = {},\n      parts;\n\n  if (Buffer.isBuffer(s)) {\n    if (s[0] > 127 && s[1] === undefined) {\n      s[0] -= 128;\n      s = '\\x1b' + s.toString('utf-8');\n    } else {\n      s = s.toString('utf-8');\n    }\n  } // CSI P s c\n  // Send Device Attributes (Primary DA).\n  // CSI > P s c\n  // Send Device Attributes (Secondary DA).\n\n\n  if (parts = /^\\x1b\\[(\\?|>)(\\d*(?:;\\d*)*)c/.exec(s)) {\n    parts = parts[2].split(';').map(function (ch) {\n      return +ch || 0;\n    });\n    out.event = 'device-attributes';\n    out.code = 'DA';\n\n    if (parts[1] === '?') {\n      out.type = 'primary-attribute'; // VT100-style params:\n\n      if (parts[0] === 1 && parts[2] === 2) {\n        out.term = 'vt100';\n        out.advancedVideo = true;\n      } else if (parts[0] === 1 && parts[2] === 0) {\n        out.term = 'vt101';\n      } else if (parts[0] === 6) {\n        out.term = 'vt102';\n      } else if (parts[0] === 60 && parts[1] === 1 && parts[2] === 2 && parts[3] === 6 && parts[4] === 8 && parts[5] === 9 && parts[6] === 15) {\n        out.term = 'vt220';\n      } else {\n        // VT200-style params:\n        parts.forEach(function (attr) {\n          switch (attr) {\n            case 1:\n              out.cols132 = true;\n              break;\n\n            case 2:\n              out.printer = true;\n              break;\n\n            case 6:\n              out.selectiveErase = true;\n              break;\n\n            case 8:\n              out.userDefinedKeys = true;\n              break;\n\n            case 9:\n              out.nationalReplacementCharsets = true;\n              break;\n\n            case 15:\n              out.technicalCharacters = true;\n              break;\n\n            case 18:\n              out.userWindows = true;\n              break;\n\n            case 21:\n              out.horizontalScrolling = true;\n              break;\n\n            case 22:\n              out.ansiColor = true;\n              break;\n\n            case 29:\n              out.ansiTextLocator = true;\n              break;\n          }\n        });\n      }\n    } else {\n      out.type = 'secondary-attribute';\n\n      switch (parts[0]) {\n        case 0:\n          out.term = 'vt100';\n          break;\n\n        case 1:\n          out.term = 'vt220';\n          break;\n\n        case 2:\n          out.term = 'vt240';\n          break;\n\n        case 18:\n          out.term = 'vt330';\n          break;\n\n        case 19:\n          out.term = 'vt340';\n          break;\n\n        case 24:\n          out.term = 'vt320';\n          break;\n\n        case 41:\n          out.term = 'vt420';\n          break;\n\n        case 61:\n          out.term = 'vt510';\n          break;\n\n        case 64:\n          out.term = 'vt520';\n          break;\n\n        case 65:\n          out.term = 'vt525';\n          break;\n      }\n\n      out.firmwareVersion = parts[1];\n      out.romCartridgeRegistrationNumber = parts[2];\n    } // LEGACY\n\n\n    out.deviceAttributes = out;\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n    return;\n  } // CSI Ps n  Device Status Report (DSR).\n  //     Ps = 5  -> Status Report.  Result (``OK'') is\n  //   CSI 0 n\n  // CSI ? Ps n\n  //   Device Status Report (DSR, DEC-specific).\n  //     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n  //     or CSI ? 1 1  n  (not ready).\n  //     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n  //     or CSI ? 2 1  n  (locked).\n  //     Ps = 2 6  -> Report Keyboard status as\n  //   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n  //   The last two parameters apply to VT400 & up, and denote key-\n  //   board ready and LK01 respectively.\n  //     Ps = 5 3  -> Report Locator status as\n  //   CSI ? 5 3  n  Locator available, if compiled-in, or\n  //   CSI ? 5 0  n  No Locator, if not.\n\n\n  if (parts = /^\\x1b\\[(\\?)?(\\d+)(?:;(\\d+);(\\d+);(\\d+))?n/.exec(s)) {\n    out.event = 'device-status';\n    out.code = 'DSR';\n\n    if (!parts[1] && parts[2] === '0' && !parts[3]) {\n      out.type = 'device-status';\n      out.status = 'OK'; // LEGACY\n\n      out.deviceStatus = out.status;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] && (parts[2] === '10' || parts[2] === '11') && !parts[3]) {\n      out.type = 'printer-status';\n      out.status = parts[2] === '10' ? 'ready' : 'not ready'; // LEGACY\n\n      out.printerStatus = out.status;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] && (parts[2] === '20' || parts[2] === '21') && !parts[3]) {\n      out.type = 'udk-status';\n      out.status = parts[2] === '20' ? 'unlocked' : 'locked'; // LEGACY\n\n      out.UDKStatus = out.status;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] && parts[2] === '27' && parts[3] === '1' && parts[4] === '0' && parts[5] === '0') {\n      out.type = 'keyboard-status';\n      out.status = 'OK'; // LEGACY\n\n      out.keyboardStatus = out.status;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] && (parts[2] === '53' || parts[2] === '50') && !parts[3]) {\n      out.type = 'locator-status';\n      out.status = parts[2] === '53' ? 'available' : 'unavailable'; // LEGACY\n\n      out.locator = out.status;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    out.type = 'error';\n    out.text = 'Unhandled: ' + JSON.stringify(parts); // LEGACY\n\n    out.error = out.text;\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n    return;\n  } // CSI Ps n  Device Status Report (DSR).\n  //     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n  //   Result is\n  //   CSI r ; c R\n  // CSI ? Ps n\n  //   Device Status Report (DSR, DEC-specific).\n  //     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n  //     ? r ; c R (assumes page is zero).\n\n\n  if (parts = /^\\x1b\\[(\\?)?(\\d+);(\\d+)R/.exec(s)) {\n    out.event = 'device-status';\n    out.code = 'DSR';\n    out.type = 'cursor-status';\n    out.status = {\n      x: +parts[3],\n      y: +parts[2],\n      page: !parts[1] ? undefined : 0\n    };\n    out.x = out.status.x;\n    out.y = out.status.y;\n    out.page = out.status.page; // LEGACY\n\n    out.cursor = out.status;\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n    return;\n  } // CSI Ps ; Ps ; Ps t\n  //   Window manipulation (from dtterm, as well as extensions).\n  //   These controls may be disabled using the allowWindowOps\n  //   resource.  Valid values for the first (and any additional\n  //   parameters) are:\n  //     Ps = 1 1  -> Report xterm window state.  If the xterm window\n  //     is open (non-iconified), it returns CSI 1 t .  If the xterm\n  //     window is iconified, it returns CSI 2 t .\n  //     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n  //     ; x ; y t\n  //     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n  //     4  ;  height ;  width t\n  //     Ps = 1 8  -> Report the size of the text area in characters.\n  //     Result is CSI  8  ;  height ;  width t\n  //     Ps = 1 9  -> Report the size of the screen in characters.\n  //     Result is CSI  9  ;  height ;  width t\n\n\n  if (parts = /^\\x1b\\[(\\d+)(?:;(\\d+);(\\d+))?t/.exec(s)) {\n    out.event = 'window-manipulation';\n    out.code = '';\n\n    if ((parts[1] === '1' || parts[1] === '2') && !parts[2]) {\n      out.type = 'window-state';\n      out.state = parts[1] === '1' ? 'non-iconified' : 'iconified'; // LEGACY\n\n      out.windowState = out.state;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] === '3' && parts[2]) {\n      out.type = 'window-position';\n      out.position = {\n        x: +parts[2],\n        y: +parts[3]\n      };\n      out.x = out.position.x;\n      out.y = out.position.y; // LEGACY\n\n      out.windowPosition = out.position;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] === '4' && parts[2]) {\n      out.type = 'window-size-pixels';\n      out.size = {\n        height: +parts[2],\n        width: +parts[3]\n      };\n      out.height = out.size.height;\n      out.width = out.size.width; // LEGACY\n\n      out.windowSizePixels = out.size;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] === '8' && parts[2]) {\n      out.type = 'textarea-size';\n      out.size = {\n        height: +parts[2],\n        width: +parts[3]\n      };\n      out.height = out.size.height;\n      out.width = out.size.width; // LEGACY\n\n      out.textAreaSizeCharacters = out.size;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] === '9' && parts[2]) {\n      out.type = 'screen-size';\n      out.size = {\n        height: +parts[2],\n        width: +parts[3]\n      };\n      out.height = out.size.height;\n      out.width = out.size.width; // LEGACY\n\n      out.screenSizeCharacters = out.size;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    out.type = 'error';\n    out.text = 'Unhandled: ' + JSON.stringify(parts); // LEGACY\n\n    out.error = out.text;\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n    return;\n  } // rxvt-unicode does not support window manipulation\n  //   Result Normal: OSC l/L 0xEF 0xBF 0xBD\n  //   Result ASCII: OSC l/L 0x1c (file separator)\n  //   Result UTF8->ASCII: OSC l/L 0xFD\n  // Test with:\n  //   echo -ne '\\ePtmux;\\e\\e[>3t\\e\\\\'\n  //   sleep 2 && echo -ne '\\ePtmux;\\e\\e[21t\\e\\\\' & cat -v\n  //   -\n  //   echo -ne '\\e[>3t'\n  //   sleep 2 && echo -ne '\\e[21t' & cat -v\n\n\n  if (parts = /^\\x1b\\](l|L)([^\\x07\\x1b]*)$/.exec(s)) {\n    parts[2] = 'rxvt';\n    s = '\\x1b]' + parts[1] + parts[2] + '\\x1b\\\\';\n  } // CSI Ps ; Ps ; Ps t\n  //   Window manipulation (from dtterm, as well as extensions).\n  //   These controls may be disabled using the allowWindowOps\n  //   resource.  Valid values for the first (and any additional\n  //   parameters) are:\n  //     Ps = 2 0  -> Report xterm window's icon label.  Result is\n  //     OSC  L  label ST\n  //     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n  //     label ST\n\n\n  if (parts = /^\\x1b\\](l|L)([^\\x07\\x1b]*)(?:\\x07|\\x1b\\\\)/.exec(s)) {\n    out.event = 'window-manipulation';\n    out.code = '';\n\n    if (parts[1] === 'L') {\n      out.type = 'window-icon-label';\n      out.text = parts[2]; // LEGACY\n\n      out.windowIconLabel = out.text;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    if (parts[1] === 'l') {\n      out.type = 'window-title';\n      out.text = parts[2]; // LEGACY\n\n      out.windowTitle = out.text;\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n      return;\n    }\n\n    out.type = 'error';\n    out.text = 'Unhandled: ' + JSON.stringify(parts); // LEGACY\n\n    out.error = out.text;\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n    return;\n  } // CSI Ps ' |\n  //   Request Locator Position (DECRQLP).\n  //     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n  //   Parameters are [event;button;row;column;page].\n  //   Valid values for the event:\n  //     Pe = 0  -> locator unavailable - no other parameters sent.\n  //     Pe = 1  -> request - xterm received a DECRQLP.\n  //     Pe = 2  -> left button down.\n  //     Pe = 3  -> left button up.\n  //     Pe = 4  -> middle button down.\n  //     Pe = 5  -> middle button up.\n  //     Pe = 6  -> right button down.\n  //     Pe = 7  -> right button up.\n  //     Pe = 8  -> M4 button down.\n  //     Pe = 9  -> M4 button up.\n  //     Pe = 1 0  -> locator outside filter rectangle.\n  //   ``button'' parameter is a bitmask indicating which buttons are\n  //     pressed:\n  //     Pb = 0  <- no buttons down.\n  //     Pb & 1  <- right button down.\n  //     Pb & 2  <- middle button down.\n  //     Pb & 4  <- left button down.\n  //     Pb & 8  <- M4 button down.\n  //   ``row'' and ``column'' parameters are the coordinates of the\n  //     locator position in the xterm window, encoded as ASCII deci-\n  //     mal.\n  //   The ``page'' parameter is not used by xterm, and will be omit-\n  //   ted.\n  // NOTE:\n  // This is already implemented in the _bindMouse\n  // method, but it might make more sense here.\n  // The xterm mouse documentation says there is a\n  // `<` prefix, the DECRQLP says there is no prefix.\n\n\n  if (parts = /^\\x1b\\[(\\d+(?:;\\d+){4})&w/.exec(s)) {\n    parts = parts[1].split(';').map(function (ch) {\n      return +ch;\n    });\n    out.event = 'locator-position';\n    out.code = 'DECRQLP';\n\n    switch (parts[0]) {\n      case 0:\n        out.status = 'locator-unavailable';\n        break;\n\n      case 1:\n        out.status = 'request';\n        break;\n\n      case 2:\n        out.status = 'left-button-down';\n        break;\n\n      case 3:\n        out.status = 'left-button-up';\n        break;\n\n      case 4:\n        out.status = 'middle-button-down';\n        break;\n\n      case 5:\n        out.status = 'middle-button-up';\n        break;\n\n      case 6:\n        out.status = 'right-button-down';\n        break;\n\n      case 7:\n        out.status = 'right-button-up';\n        break;\n\n      case 8:\n        out.status = 'm4-button-down';\n        break;\n\n      case 9:\n        out.status = 'm4-button-up';\n        break;\n\n      case 10:\n        out.status = 'locator-outside';\n        break;\n    }\n\n    out.mask = parts[1];\n    out.row = parts[2];\n    out.col = parts[3];\n    out.page = parts[4]; // LEGACY\n\n    out.locatorPosition = out;\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n    return;\n  } // OSC Ps ; Pt BEL\n  // OSC Ps ; Pt ST\n  // Set Text Parameters\n\n\n  if (parts = /^\\x1b\\](\\d+);([^\\x07\\x1b]+)(?:\\x07|\\x1b\\\\)/.exec(s)) {\n    out.event = 'text-params';\n    out.code = 'Set Text Parameters';\n    out.ps = +s[1];\n    out.pt = s[2];\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n  }\n};\n\nProgram.prototype.response = function (name, text, callback, noBypass) {\n  var self = this;\n\n  if (arguments.length === 2) {\n    callback = text;\n    text = name;\n    name = null;\n  }\n\n  if (!callback) {\n    callback = function () {};\n  }\n\n  this.bindResponse();\n  name = name ? 'response ' + name : 'response';\n  var onresponse;\n  this.once(name, onresponse = function (event) {\n    if (timeout) clearTimeout(timeout);\n\n    if (event.type === 'error') {\n      return callback(new Error(event.event + ': ' + event.text));\n    }\n\n    return callback(null, event);\n  });\n  var timeout = setTimeout(function () {\n    self.removeListener(name, onresponse);\n    return callback(new Error('Timeout.'));\n  }, 2000);\n  return noBypass ? this._write(text) : this._twrite(text);\n};\n\nProgram.prototype._owrite = Program.prototype.write = function (text) {\n  if (!this.output.writable) return;\n  return this.output.write(text);\n};\n\nProgram.prototype._buffer = function (text) {\n  if (this._exiting) {\n    this.flush();\n\n    this._owrite(text);\n\n    return;\n  }\n\n  if (this._buf) {\n    this._buf += text;\n    return;\n  }\n\n  this._buf = text;\n  nextTick(this._flush);\n  return true;\n};\n\nProgram.prototype.flush = function () {\n  if (!this._buf) return;\n\n  this._owrite(this._buf);\n\n  this._buf = '';\n};\n\nProgram.prototype._write = function (text) {\n  if (this.ret) return text;\n\n  if (this.useBuffer) {\n    return this._buffer(text);\n  }\n\n  return this._owrite(text);\n}; // Example: `DCS tmux; ESC Pt ST`\n// Real: `DCS tmux; ESC Pt ESC \\`\n\n\nProgram.prototype._twrite = function (data) {\n  var self = this,\n      iterations = 0,\n      timer;\n\n  if (this.tmux) {\n    // Replace all STs with BELs so they can be nested within the DCS code.\n    data = data.replace(/\\x1b\\\\/g, '\\x07'); // Wrap in tmux forward DCS:\n\n    data = '\\x1bPtmux;\\x1b' + data + '\\x1b\\\\'; // If we've never even flushed yet, it means we're still in\n    // the normal buffer. Wait for alt screen buffer.\n\n    if (this.output.bytesWritten === 0) {\n      timer = setInterval(function () {\n        if (self.output.bytesWritten > 0 || ++iterations === 50) {\n          clearInterval(timer);\n          self.flush();\n\n          self._owrite(data);\n        }\n      }, 100);\n      return true;\n    } // NOTE: Flushing the buffer is required in some cases.\n    // The DCS code must be at the start of the output.\n\n\n    this.flush(); // Write out raw now that the buffer is flushed.\n\n    return this._owrite(data);\n  }\n\n  return this._write(data);\n};\n\nProgram.prototype.echo = Program.prototype.print = function (text, attr) {\n  return attr ? this._write(this.text(text, attr)) : this._write(text);\n};\n\nProgram.prototype._ncoords = function () {\n  if (this.x < 0) this.x = 0;else if (this.x >= this.cols) this.x = this.cols - 1;\n  if (this.y < 0) this.y = 0;else if (this.y >= this.rows) this.y = this.rows - 1;\n};\n\nProgram.prototype.setx = function (x) {\n  return this.cursorCharAbsolute(x); // return this.charPosAbsolute(x);\n};\n\nProgram.prototype.sety = function (y) {\n  return this.linePosAbsolute(y);\n};\n\nProgram.prototype.move = function (x, y) {\n  return this.cursorPos(y, x);\n}; // TODO: Fix cud and cuu calls.\n\n\nProgram.prototype.omove = function (x, y) {\n  if (!this.zero) {\n    x = (x || 1) - 1;\n    y = (y || 1) - 1;\n  } else {\n    x = x || 0;\n    y = y || 0;\n  }\n\n  if (y === this.y && x === this.x) {\n    return;\n  }\n\n  if (y === this.y) {\n    if (x > this.x) {\n      this.cuf(x - this.x);\n    } else if (x < this.x) {\n      this.cub(this.x - x);\n    }\n  } else if (x === this.x) {\n    if (y > this.y) {\n      this.cud(y - this.y);\n    } else if (y < this.y) {\n      this.cuu(this.y - y);\n    }\n  } else {\n    if (!this.zero) x++, y++;\n    this.cup(y, x);\n  }\n};\n\nProgram.prototype.rsetx = function (x) {\n  // return this.HPositionRelative(x);\n  if (!x) return;\n  return x > 0 ? this.forward(x) : this.back(-x);\n};\n\nProgram.prototype.rsety = function (y) {\n  // return this.VPositionRelative(y);\n  if (!y) return;\n  return y > 0 ? this.up(y) : this.down(-y);\n};\n\nProgram.prototype.rmove = function (x, y) {\n  this.rsetx(x);\n  this.rsety(y);\n};\n\nProgram.prototype.simpleInsert = function (ch, i, attr) {\n  return this._write(this.repeat(ch, i), attr);\n};\n\nProgram.prototype.repeat = function (ch, i) {\n  if (!i || i < 0) i = 0;\n  return Array(i + 1).join(ch);\n};\n\nProgram.prototype.__defineGetter__('title', function () {\n  return this._title;\n});\n\nProgram.prototype.__defineSetter__('title', function (title) {\n  this.setTitle(title);\n  return this._title;\n}); // Specific to iTerm2, but I think it's really cool.\n// Example:\n//  if (!screen.copyToClipboard(text)) {\n//    execClipboardProgram(text);\n//  }\n\n\nProgram.prototype.copyToClipboard = function (text) {\n  if (this.isiTerm2) {\n    this._twrite('\\x1b]50;CopyToCliboard=' + text + '\\x07');\n\n    return true;\n  }\n\n  return false;\n}; // Only XTerm and iTerm2. If you know of any others, post them.\n\n\nProgram.prototype.cursorShape = function (shape, blink) {\n  if (this.isiTerm2) {\n    switch (shape) {\n      case 'block':\n        if (!blink) {\n          this._twrite('\\x1b]50;CursorShape=0;BlinkingCursorEnabled=0\\x07');\n        } else {\n          this._twrite('\\x1b]50;CursorShape=0;BlinkingCursorEnabled=1\\x07');\n        }\n\n        break;\n\n      case 'underline':\n        if (!blink) {// this._twrite('\\x1b]50;CursorShape=n;BlinkingCursorEnabled=0\\x07');\n        } else {// this._twrite('\\x1b]50;CursorShape=n;BlinkingCursorEnabled=1\\x07');\n          }\n\n        break;\n\n      case 'line':\n        if (!blink) {\n          this._twrite('\\x1b]50;CursorShape=1;BlinkingCursorEnabled=0\\x07');\n        } else {\n          this._twrite('\\x1b]50;CursorShape=1;BlinkingCursorEnabled=1\\x07');\n        }\n\n        break;\n    }\n\n    return true;\n  } else if (this.term('xterm') || this.term('screen')) {\n    switch (shape) {\n      case 'block':\n        if (!blink) {\n          this._twrite('\\x1b[0 q');\n        } else {\n          this._twrite('\\x1b[1 q');\n        }\n\n        break;\n\n      case 'underline':\n        if (!blink) {\n          this._twrite('\\x1b[2 q');\n        } else {\n          this._twrite('\\x1b[3 q');\n        }\n\n        break;\n\n      case 'line':\n        if (!blink) {\n          this._twrite('\\x1b[4 q');\n        } else {\n          this._twrite('\\x1b[5 q');\n        }\n\n        break;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nProgram.prototype.cursorColor = function (color) {\n  if (this.term('xterm') || this.term('rxvt') || this.term('screen')) {\n    this._twrite('\\x1b]12;' + color + '\\x07');\n\n    return true;\n  }\n\n  return false;\n};\n\nProgram.prototype.cursorReset = Program.prototype.resetCursor = function () {\n  if (this.term('xterm') || this.term('rxvt') || this.term('screen')) {\n    // XXX\n    // return this.resetColors();\n    this._twrite('\\x1b[0 q');\n\n    this._twrite('\\x1b]112\\x07'); // urxvt doesnt support OSC 112\n\n\n    this._twrite('\\x1b]12;white\\x07');\n\n    return true;\n  }\n\n  return false;\n};\n\nProgram.prototype.getTextParams = function (param, callback) {\n  return this.response('text-params', '\\x1b]' + param + ';?\\x07', function (err, data) {\n    if (err) return callback(err);\n    return callback(null, data.pt);\n  });\n};\n\nProgram.prototype.getCursorColor = function (callback) {\n  return this.getTextParams(12, callback);\n};\n/**\n * Normal\n */\n//Program.prototype.pad =\n\n\nProgram.prototype.nul = function () {\n  //if (this.has('pad')) return this.put.pad();\n  return this._write('\\200');\n};\n\nProgram.prototype.bel = Program.prototype.bell = function () {\n  if (this.has('bel')) return this.put.bel();\n  return this._write('\\x07');\n};\n\nProgram.prototype.vtab = function () {\n  this.y++;\n\n  this._ncoords();\n\n  return this._write('\\x0b');\n};\n\nProgram.prototype.ff = Program.prototype.form = function () {\n  if (this.has('ff')) return this.put.ff();\n  return this._write('\\x0c');\n};\n\nProgram.prototype.kbs = Program.prototype.backspace = function () {\n  this.x--;\n\n  this._ncoords();\n\n  if (this.has('kbs')) return this.put.kbs();\n  return this._write('\\x08');\n};\n\nProgram.prototype.ht = Program.prototype.tab = function () {\n  this.x += 8;\n\n  this._ncoords();\n\n  if (this.has('ht')) return this.put.ht();\n  return this._write('\\t');\n};\n\nProgram.prototype.shiftOut = function () {\n  // if (this.has('S2')) return this.put.S2();\n  return this._write('\\x0e');\n};\n\nProgram.prototype.shiftIn = function () {\n  // if (this.has('S3')) return this.put.S3();\n  return this._write('\\x0f');\n};\n\nProgram.prototype.cr = Program.prototype.return = function () {\n  this.x = 0;\n  if (this.has('cr')) return this.put.cr();\n  return this._write('\\r');\n};\n\nProgram.prototype.nel = Program.prototype.newline = Program.prototype.feed = function () {\n  if (this.tput && this.tput.bools.eat_newline_glitch && this.x >= this.cols) {\n    return;\n  }\n\n  this.x = 0;\n  this.y++;\n\n  this._ncoords();\n\n  if (this.has('nel')) return this.put.nel();\n  return this._write('\\n');\n};\n/**\n * Esc\n */\n// ESC D Index (IND is 0x84).\n\n\nProgram.prototype.ind = Program.prototype.index = function () {\n  this.y++;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.ind();\n  return this._write('\\x1bD');\n}; // ESC M Reverse Index (RI is 0x8d).\n\n\nProgram.prototype.ri = Program.prototype.reverse = Program.prototype.reverseIndex = function () {\n  this.y--;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.ri();\n  return this._write('\\x1bM');\n}; // ESC E Next Line (NEL is 0x85).\n\n\nProgram.prototype.nextLine = function () {\n  this.y++;\n  this.x = 0;\n\n  this._ncoords();\n\n  if (this.has('nel')) return this.put.nel();\n  return this._write('\\x1bE');\n}; // ESC c Full Reset (RIS).\n\n\nProgram.prototype.reset = function () {\n  this.x = this.y = 0;\n\n  if (this.has('rs1') || this.has('ris')) {\n    return this.has('rs1') ? this.put.rs1() : this.put.ris();\n  }\n\n  return this._write('\\x1bc');\n}; // ESC H Tab Set (HTS is 0x88).\n\n\nProgram.prototype.tabSet = function () {\n  if (this.tput) return this.put.hts();\n  return this._write('\\x1bH');\n}; // ESC 7 Save Cursor (DECSC).\n\n\nProgram.prototype.sc = Program.prototype.saveCursor = function (key) {\n  if (key) return this.lsaveCursor(key);\n  this.savedX = this.x || 0;\n  this.savedY = this.y || 0;\n  if (this.tput) return this.put.sc();\n  return this._write('\\x1b7');\n}; // ESC 8 Restore Cursor (DECRC).\n\n\nProgram.prototype.rc = Program.prototype.restoreCursor = function (key, hide) {\n  if (key) return this.lrestoreCursor(key, hide);\n  this.x = this.savedX || 0;\n  this.y = this.savedY || 0;\n  if (this.tput) return this.put.rc();\n  return this._write('\\x1b8');\n}; // Save Cursor Locally\n\n\nProgram.prototype.lsaveCursor = function (key) {\n  key = key || 'local';\n  this._saved = this._saved || {};\n  this._saved[key] = this._saved[key] || {};\n  this._saved[key].x = this.x;\n  this._saved[key].y = this.y;\n  this._saved[key].hidden = this.cursorHidden;\n}; // Restore Cursor Locally\n\n\nProgram.prototype.lrestoreCursor = function (key, hide) {\n  var pos;\n  key = key || 'local';\n  if (!this._saved || !this._saved[key]) return;\n  pos = this._saved[key]; //delete this._saved[key];\n\n  this.cup(pos.y, pos.x);\n\n  if (hide && pos.hidden !== this.cursorHidden) {\n    if (pos.hidden) {\n      this.hideCursor();\n    } else {\n      this.showCursor();\n    }\n  }\n}; // ESC # 3 DEC line height/width\n\n\nProgram.prototype.lineHeight = function () {\n  return this._write('\\x1b#');\n}; // ESC (,),*,+,-,. Designate G0-G2 Character Set.\n\n\nProgram.prototype.charset = function (val, level) {\n  level = level || 0; // See also:\n  // acs_chars / acsc / ac\n  // enter_alt_charset_mode / smacs / as\n  // exit_alt_charset_mode / rmacs / ae\n  // enter_pc_charset_mode / smpch / S2\n  // exit_pc_charset_mode / rmpch / S3\n\n  switch (level) {\n    case 0:\n      level = '(';\n      break;\n\n    case 1:\n      level = ')';\n      break;\n\n    case 2:\n      level = '*';\n      break;\n\n    case 3:\n      level = '+';\n      break;\n  }\n\n  var name = typeof val === 'string' ? val.toLowerCase() : val;\n\n  switch (name) {\n    case 'acs':\n    case 'scld':\n      // DEC Special Character and Line Drawing Set.\n      if (this.tput) return this.put.smacs();\n      val = '0';\n      break;\n\n    case 'uk':\n      // UK\n      val = 'A';\n      break;\n\n    case 'us': // United States (USASCII).\n\n    case 'usascii':\n    case 'ascii':\n      if (this.tput) return this.put.rmacs();\n      val = 'B';\n      break;\n\n    case 'dutch':\n      // Dutch\n      val = '4';\n      break;\n\n    case 'finnish':\n      // Finnish\n      val = 'C';\n      val = '5';\n      break;\n\n    case 'french':\n      // French\n      val = 'R';\n      break;\n\n    case 'frenchcanadian':\n      // FrenchCanadian\n      val = 'Q';\n      break;\n\n    case 'german':\n      // German\n      val = 'K';\n      break;\n\n    case 'italian':\n      // Italian\n      val = 'Y';\n      break;\n\n    case 'norwegiandanish':\n      // NorwegianDanish\n      val = 'E';\n      val = '6';\n      break;\n\n    case 'spanish':\n      // Spanish\n      val = 'Z';\n      break;\n\n    case 'swedish':\n      // Swedish\n      val = 'H';\n      val = '7';\n      break;\n\n    case 'swiss':\n      // Swiss\n      val = '=';\n      break;\n\n    case 'isolatin':\n      // ISOLatin (actually /A)\n      val = '/A';\n      break;\n\n    default:\n      // Default\n      if (this.tput) return this.put.rmacs();\n      val = 'B';\n      break;\n  }\n\n  return this._write('\\x1b(' + val);\n};\n\nProgram.prototype.enter_alt_charset_mode = Program.prototype.as = Program.prototype.smacs = function () {\n  return this.charset('acs');\n};\n\nProgram.prototype.exit_alt_charset_mode = Program.prototype.ae = Program.prototype.rmacs = function () {\n  return this.charset('ascii');\n}; // ESC N\n// Single Shift Select of G2 Character Set\n// ( SS2 is 0x8e). This affects next character only.\n// ESC O\n// Single Shift Select of G3 Character Set\n// ( SS3 is 0x8f). This affects next character only.\n// ESC n\n// Invoke the G2 Character Set as GL (LS2).\n// ESC o\n// Invoke the G3 Character Set as GL (LS3).\n// ESC |\n// Invoke the G3 Character Set as GR (LS3R).\n// ESC }\n// Invoke the G2 Character Set as GR (LS2R).\n// ESC ~\n// Invoke the G1 Character Set as GR (LS1R).\n\n\nProgram.prototype.setG = function (val) {\n  // if (this.tput) return this.put.S2();\n  // if (this.tput) return this.put.S3();\n  switch (val) {\n    case 1:\n      val = '~'; // GR\n\n      break;\n\n    case 2:\n      val = 'n'; // GL\n\n      val = '}'; // GR\n\n      val = 'N'; // Next Char Only\n\n      break;\n\n    case 3:\n      val = 'o'; // GL\n\n      val = '|'; // GR\n\n      val = 'O'; // Next Char Only\n\n      break;\n  }\n\n  return this._write('\\x1b' + val);\n};\n/**\n * OSC\n */\n// OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Set Text Parameters.\n\n\nProgram.prototype.setTitle = function (title) {\n  this._title = title; // if (this.term('screen')) {\n  //   // Tmux pane\n  //   // if (this.tmux) {\n  //   //   return this._write('\\x1b]2;' + title + '\\x1b\\\\');\n  //   // }\n  //   return this._write('\\x1bk' + title + '\\x1b\\\\');\n  // }\n\n  return this._twrite('\\x1b]0;' + title + '\\x07');\n}; // OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Reset colors\n\n\nProgram.prototype.resetColors = function (param) {\n  if (this.has('Cr')) {\n    return this.put.Cr(param);\n  }\n\n  return this._twrite('\\x1b]112\\x07'); //return this._twrite('\\x1b]112;' + param + '\\x07');\n}; // OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Change dynamic colors\n\n\nProgram.prototype.dynamicColors = function (param) {\n  if (this.has('Cs')) {\n    return this.put.Cs(param);\n  }\n\n  return this._twrite('\\x1b]12;' + param + '\\x07');\n}; // OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Sel data\n\n\nProgram.prototype.selData = function (a, b) {\n  if (this.has('Ms')) {\n    return this.put.Ms(a, b);\n  }\n\n  return this._twrite('\\x1b]52;' + a + ';' + b + '\\x07');\n};\n/**\n * CSI\n */\n// CSI Ps A\n// Cursor Up Ps Times (default = 1) (CUU).\n\n\nProgram.prototype.cuu = Program.prototype.up = Program.prototype.cursorUp = function (param) {\n  this.y -= param || 1;\n\n  this._ncoords();\n\n  if (this.tput) {\n    if (!this.tput.strings.parm_up_cursor) {\n      return this._write(this.repeat(this.tput.cuu1(), param));\n    }\n\n    return this.put.cuu(param);\n  }\n\n  return this._write('\\x1b[' + (param || '') + 'A');\n}; // CSI Ps B\n// Cursor Down Ps Times (default = 1) (CUD).\n\n\nProgram.prototype.cud = Program.prototype.down = Program.prototype.cursorDown = function (param) {\n  this.y += param || 1;\n\n  this._ncoords();\n\n  if (this.tput) {\n    if (!this.tput.strings.parm_down_cursor) {\n      return this._write(this.repeat(this.tput.cud1(), param));\n    }\n\n    return this.put.cud(param);\n  }\n\n  return this._write('\\x1b[' + (param || '') + 'B');\n}; // CSI Ps C\n// Cursor Forward Ps Times (default = 1) (CUF).\n\n\nProgram.prototype.cuf = Program.prototype.right = Program.prototype.forward = Program.prototype.cursorForward = function (param) {\n  this.x += param || 1;\n\n  this._ncoords();\n\n  if (this.tput) {\n    if (!this.tput.strings.parm_right_cursor) {\n      return this._write(this.repeat(this.tput.cuf1(), param));\n    }\n\n    return this.put.cuf(param);\n  }\n\n  return this._write('\\x1b[' + (param || '') + 'C');\n}; // CSI Ps D\n// Cursor Backward Ps Times (default = 1) (CUB).\n\n\nProgram.prototype.cub = Program.prototype.left = Program.prototype.back = Program.prototype.cursorBackward = function (param) {\n  this.x -= param || 1;\n\n  this._ncoords();\n\n  if (this.tput) {\n    if (!this.tput.strings.parm_left_cursor) {\n      return this._write(this.repeat(this.tput.cub1(), param));\n    }\n\n    return this.put.cub(param);\n  }\n\n  return this._write('\\x1b[' + (param || '') + 'D');\n}; // CSI Ps ; Ps H\n// Cursor Position [row;column] (default = [1,1]) (CUP).\n\n\nProgram.prototype.cup = Program.prototype.pos = Program.prototype.cursorPos = function (row, col) {\n  if (!this.zero) {\n    row = (row || 1) - 1;\n    col = (col || 1) - 1;\n  } else {\n    row = row || 0;\n    col = col || 0;\n  }\n\n  this.x = col;\n  this.y = row;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.cup(row, col);\n  return this._write('\\x1b[' + (row + 1) + ';' + (col + 1) + 'H');\n}; // CSI Ps J  Erase in Display (ED).\n//     Ps = 0  -> Erase Below (default).\n//     Ps = 1  -> Erase Above.\n//     Ps = 2  -> Erase All.\n//     Ps = 3  -> Erase Saved Lines (xterm).\n// CSI ? Ps J\n//   Erase in Display (DECSED).\n//     Ps = 0  -> Selective Erase Below (default).\n//     Ps = 1  -> Selective Erase Above.\n//     Ps = 2  -> Selective Erase All.\n\n\nProgram.prototype.ed = Program.prototype.eraseInDisplay = function (param) {\n  if (this.tput) {\n    switch (param) {\n      case 'above':\n        param = 1;\n        break;\n\n      case 'all':\n        param = 2;\n        break;\n\n      case 'saved':\n        param = 3;\n        break;\n\n      case 'below':\n      default:\n        param = 0;\n        break;\n    } // extended tput.E3 = ^[[3;J\n\n\n    return this.put.ed(param);\n  }\n\n  switch (param) {\n    case 'above':\n      return this._write('\\X1b[1J');\n\n    case 'all':\n      return this._write('\\x1b[2J');\n\n    case 'saved':\n      return this._write('\\x1b[3J');\n\n    case 'below':\n    default:\n      return this._write('\\x1b[J');\n  }\n};\n\nProgram.prototype.clear = function () {\n  this.x = 0;\n  this.y = 0;\n  if (this.tput) return this.put.clear();\n  return this._write('\\x1b[H\\x1b[J');\n}; // CSI Ps K  Erase in Line (EL).\n//     Ps = 0  -> Erase to Right (default).\n//     Ps = 1  -> Erase to Left.\n//     Ps = 2  -> Erase All.\n// CSI ? Ps K\n//   Erase in Line (DECSEL).\n//     Ps = 0  -> Selective Erase to Right (default).\n//     Ps = 1  -> Selective Erase to Left.\n//     Ps = 2  -> Selective Erase All.\n\n\nProgram.prototype.el = Program.prototype.eraseInLine = function (param) {\n  if (this.tput) {\n    //if (this.tput.back_color_erase) ...\n    switch (param) {\n      case 'left':\n        param = 1;\n        break;\n\n      case 'all':\n        param = 2;\n        break;\n\n      case 'right':\n      default:\n        param = 0;\n        break;\n    }\n\n    return this.put.el(param);\n  }\n\n  switch (param) {\n    case 'left':\n      return this._write('\\x1b[1K');\n\n    case 'all':\n      return this._write('\\x1b[2K');\n\n    case 'right':\n    default:\n      return this._write('\\x1b[K');\n  }\n}; // CSI Pm m  Character Attributes (SGR).\n//     Ps = 0  -> Normal (default).\n//     Ps = 1  -> Bold.\n//     Ps = 4  -> Underlined.\n//     Ps = 5  -> Blink (appears as Bold).\n//     Ps = 7  -> Inverse.\n//     Ps = 8  -> Invisible, i.e., hidden (VT300).\n//     Ps = 2 2  -> Normal (neither bold nor faint).\n//     Ps = 2 4  -> Not underlined.\n//     Ps = 2 5  -> Steady (not blinking).\n//     Ps = 2 7  -> Positive (not inverse).\n//     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n//     Ps = 3 0  -> Set foreground color to Black.\n//     Ps = 3 1  -> Set foreground color to Red.\n//     Ps = 3 2  -> Set foreground color to Green.\n//     Ps = 3 3  -> Set foreground color to Yellow.\n//     Ps = 3 4  -> Set foreground color to Blue.\n//     Ps = 3 5  -> Set foreground color to Magenta.\n//     Ps = 3 6  -> Set foreground color to Cyan.\n//     Ps = 3 7  -> Set foreground color to White.\n//     Ps = 3 9  -> Set foreground color to default (original).\n//     Ps = 4 0  -> Set background color to Black.\n//     Ps = 4 1  -> Set background color to Red.\n//     Ps = 4 2  -> Set background color to Green.\n//     Ps = 4 3  -> Set background color to Yellow.\n//     Ps = 4 4  -> Set background color to Blue.\n//     Ps = 4 5  -> Set background color to Magenta.\n//     Ps = 4 6  -> Set background color to Cyan.\n//     Ps = 4 7  -> Set background color to White.\n//     Ps = 4 9  -> Set background color to default (original).\n//   If 16-color support is compiled, the following apply.  Assume\n//   that xterm's resources are set so that the ISO color codes are\n//   the first 8 of a set of 16.  Then the aixterm colors are the\n//   bright versions of the ISO colors:\n//     Ps = 9 0  -> Set foreground color to Black.\n//     Ps = 9 1  -> Set foreground color to Red.\n//     Ps = 9 2  -> Set foreground color to Green.\n//     Ps = 9 3  -> Set foreground color to Yellow.\n//     Ps = 9 4  -> Set foreground color to Blue.\n//     Ps = 9 5  -> Set foreground color to Magenta.\n//     Ps = 9 6  -> Set foreground color to Cyan.\n//     Ps = 9 7  -> Set foreground color to White.\n//     Ps = 1 0 0  -> Set background color to Black.\n//     Ps = 1 0 1  -> Set background color to Red.\n//     Ps = 1 0 2  -> Set background color to Green.\n//     Ps = 1 0 3  -> Set background color to Yellow.\n//     Ps = 1 0 4  -> Set background color to Blue.\n//     Ps = 1 0 5  -> Set background color to Magenta.\n//     Ps = 1 0 6  -> Set background color to Cyan.\n//     Ps = 1 0 7  -> Set background color to White.\n//   If xterm is compiled with the 16-color support disabled, it\n//   supports the following, from rxvt:\n//     Ps = 1 0 0  -> Set foreground and background color to\n//     default.\n//   If 88- or 256-color support is compiled, the following apply.\n//     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n//     Ps.\n//     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n//     Ps.\n\n\nProgram.prototype.sgr = Program.prototype.attr = Program.prototype.charAttributes = function (param, val) {\n  return this._write(this._attr(param, val));\n};\n\nProgram.prototype.text = function (text, attr) {\n  return this._attr(attr, true) + text + this._attr(attr, false);\n}; // NOTE: sun-color may not allow multiple params for SGR.\n\n\nProgram.prototype._attr = function (param, val) {\n  var self = this,\n      parts,\n      color,\n      m;\n\n  if (Array.isArray(param)) {\n    parts = param;\n    param = parts[0] || 'normal';\n  } else {\n    param = param || 'normal';\n    parts = param.split(/\\s*[,;]\\s*/);\n  }\n\n  if (parts.length > 1) {\n    var used = {},\n        out = [];\n    parts.forEach(function (part) {\n      part = self._attr(part, val).slice(2, -1);\n      if (part === '') return;\n      if (used[part]) return;\n      used[part] = true;\n      out.push(part);\n    });\n    return '\\x1b[' + out.join(';') + 'm';\n  }\n\n  if (param.indexOf('no ') === 0) {\n    param = param.substring(3);\n    val = false;\n  } else if (param.indexOf('!') === 0) {\n    param = param.substring(1);\n    val = false;\n  }\n\n  switch (param) {\n    // attributes\n    case 'normal':\n    case 'default':\n      if (val === false) return '';\n      return '\\x1b[m';\n\n    case 'bold':\n      return val === false ? '\\x1b[22m' : '\\x1b[1m';\n\n    case 'ul':\n    case 'underline':\n    case 'underlined':\n      return val === false ? '\\x1b[24m' : '\\x1b[4m';\n\n    case 'blink':\n      return val === false ? '\\x1b[25m' : '\\x1b[5m';\n\n    case 'inverse':\n      return val === false ? '\\x1b[27m' : '\\x1b[7m';\n\n    case 'invisible':\n      return val === false ? '\\x1b[28m' : '\\x1b[8m';\n    // 8-color foreground\n\n    case 'black fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[30m';\n\n    case 'red fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[31m';\n\n    case 'green fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[32m';\n\n    case 'yellow fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[33m';\n\n    case 'blue fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[34m';\n\n    case 'magenta fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[35m';\n\n    case 'cyan fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[36m';\n\n    case 'white fg':\n    case 'light grey fg':\n    case 'light gray fg':\n    case 'bright grey fg':\n    case 'bright gray fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[37m';\n\n    case 'default fg':\n      if (val === false) return '';\n      return '\\x1b[39m';\n    // 8-color background\n\n    case 'black bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[40m';\n\n    case 'red bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[41m';\n\n    case 'green bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[42m';\n\n    case 'yellow bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[43m';\n\n    case 'blue bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[44m';\n\n    case 'magenta bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[45m';\n\n    case 'cyan bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[46m';\n\n    case 'white bg':\n    case 'light grey bg':\n    case 'light gray bg':\n    case 'bright grey bg':\n    case 'bright gray bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[47m';\n\n    case 'default bg':\n      if (val === false) return '';\n      return '\\x1b[49m';\n    // 16-color foreground\n\n    case 'light black fg':\n    case 'bright black fg':\n    case 'grey fg':\n    case 'gray fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[90m';\n\n    case 'light red fg':\n    case 'bright red fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[91m';\n\n    case 'light green fg':\n    case 'bright green fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[92m';\n\n    case 'light yellow fg':\n    case 'bright yellow fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[93m';\n\n    case 'light blue fg':\n    case 'bright blue fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[94m';\n\n    case 'light magenta fg':\n    case 'bright magenta fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[95m';\n\n    case 'light cyan fg':\n    case 'bright cyan fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[96m';\n\n    case 'light white fg':\n    case 'bright white fg':\n      return val === false ? '\\x1b[39m' : '\\x1b[97m';\n    // 16-color background\n\n    case 'light black bg':\n    case 'bright black bg':\n    case 'grey bg':\n    case 'gray bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[100m';\n\n    case 'light red bg':\n    case 'bright red bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[101m';\n\n    case 'light green bg':\n    case 'bright green bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[102m';\n\n    case 'light yellow bg':\n    case 'bright yellow bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[103m';\n\n    case 'light blue bg':\n    case 'bright blue bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[104m';\n\n    case 'light magenta bg':\n    case 'bright magenta bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[105m';\n\n    case 'light cyan bg':\n    case 'bright cyan bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[106m';\n\n    case 'light white bg':\n    case 'bright white bg':\n      return val === false ? '\\x1b[49m' : '\\x1b[107m';\n    // non-16-color rxvt default fg and bg\n\n    case 'default fg bg':\n      if (val === false) return '';\n      return this.term('rxvt') ? '\\x1b[100m' : '\\x1b[39;49m';\n\n    default:\n      // 256-color fg and bg\n      if (param[0] === '#') {\n        param = param.replace(/#(?:[0-9a-f]{3}){1,2}/i, colors.match);\n      }\n\n      m = /^(-?\\d+) (fg|bg)$/.exec(param);\n\n      if (m) {\n        color = +m[1];\n\n        if (val === false || color === -1) {\n          return this._attr('default ' + m[2]);\n        }\n\n        color = colors.reduce(color, this.tput.colors);\n\n        if (color < 16 || this.tput && this.tput.colors <= 16) {\n          if (m[2] === 'fg') {\n            if (color < 8) {\n              color += 30;\n            } else if (color < 16) {\n              color -= 8;\n              color += 90;\n            }\n          } else if (m[2] === 'bg') {\n            if (color < 8) {\n              color += 40;\n            } else if (color < 16) {\n              color -= 8;\n              color += 100;\n            }\n          }\n\n          return '\\x1b[' + color + 'm';\n        }\n\n        if (m[2] === 'fg') {\n          return '\\x1b[38;5;' + color + 'm';\n        }\n\n        if (m[2] === 'bg') {\n          return '\\x1b[48;5;' + color + 'm';\n        }\n      }\n\n      if (/^[\\d;]*$/.test(param)) {\n        return '\\x1b[' + param + 'm';\n      }\n\n      return null;\n  }\n};\n\nProgram.prototype.fg = Program.prototype.setForeground = function (color, val) {\n  color = color.split(/\\s*[,;]\\s*/).join(' fg, ') + ' fg';\n  return this.attr(color, val);\n};\n\nProgram.prototype.bg = Program.prototype.setBackground = function (color, val) {\n  color = color.split(/\\s*[,;]\\s*/).join(' bg, ') + ' bg';\n  return this.attr(color, val);\n}; // CSI Ps n  Device Status Report (DSR).\n//     Ps = 5  -> Status Report.  Result (``OK'') is\n//   CSI 0 n\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n//   Result is\n//   CSI r ; c R\n// CSI ? Ps n\n//   Device Status Report (DSR, DEC-specific).\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n//     ? r ; c R (assumes page is zero).\n//     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n//     or CSI ? 1 1  n  (not ready).\n//     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n//     or CSI ? 2 1  n  (locked).\n//     Ps = 2 6  -> Report Keyboard status as\n//   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n//   The last two parameters apply to VT400 & up, and denote key-\n//   board ready and LK01 respectively.\n//     Ps = 5 3  -> Report Locator status as\n//   CSI ? 5 3  n  Locator available, if compiled-in, or\n//   CSI ? 5 0  n  No Locator, if not.\n\n\nProgram.prototype.dsr = Program.prototype.deviceStatus = function (param, callback, dec, noBypass) {\n  if (dec) {\n    return this.response('device-status', '\\x1b[?' + (param || '0') + 'n', callback, noBypass);\n  }\n\n  return this.response('device-status', '\\x1b[' + (param || '0') + 'n', callback, noBypass);\n};\n\nProgram.prototype.getCursor = function (callback) {\n  return this.deviceStatus(6, callback, false, true);\n};\n\nProgram.prototype.saveReportedCursor = function (callback) {\n  var self = this;\n\n  if (this.tput.strings.user7 === '\\x1b[6n' || this.term('screen')) {\n    return this.getCursor(function (err, data) {\n      if (data) {\n        self._rx = data.status.x;\n        self._ry = data.status.y;\n      }\n\n      if (!callback) return;\n      return callback(err);\n    });\n  }\n\n  if (!callback) return;\n  return callback();\n};\n\nProgram.prototype.restoreReportedCursor = function () {\n  if (this._rx == null) return;\n  return this.cup(this._ry, this._rx); // return this.nel();\n};\n/**\n * Additions\n */\n// CSI Ps @\n// Insert Ps (Blank) Character(s) (default = 1) (ICH).\n\n\nProgram.prototype.ich = Program.prototype.insertChars = function (param) {\n  this.x += param || 1;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.ich(param);\n  return this._write('\\x1b[' + (param || 1) + '@');\n}; // CSI Ps E\n// Cursor Next Line Ps Times (default = 1) (CNL).\n// same as CSI Ps B ?\n\n\nProgram.prototype.cnl = Program.prototype.cursorNextLine = function (param) {\n  this.y += param || 1;\n\n  this._ncoords();\n\n  return this._write('\\x1b[' + (param || '') + 'E');\n}; // CSI Ps F\n// Cursor Preceding Line Ps Times (default = 1) (CNL).\n// reuse CSI Ps A ?\n\n\nProgram.prototype.cpl = Program.prototype.cursorPrecedingLine = function (param) {\n  this.y -= param || 1;\n\n  this._ncoords();\n\n  return this._write('\\x1b[' + (param || '') + 'F');\n}; // CSI Ps G\n// Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n\n\nProgram.prototype.cha = Program.prototype.cursorCharAbsolute = function (param) {\n  if (!this.zero) {\n    param = (param || 1) - 1;\n  } else {\n    param = param || 0;\n  }\n\n  this.x = param;\n  this.y = 0;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.hpa(param);\n  return this._write('\\x1b[' + (param + 1) + 'G');\n}; // CSI Ps L\n// Insert Ps Line(s) (default = 1) (IL).\n\n\nProgram.prototype.il = Program.prototype.insertLines = function (param) {\n  if (this.tput) return this.put.il(param);\n  return this._write('\\x1b[' + (param || '') + 'L');\n}; // CSI Ps M\n// Delete Ps Line(s) (default = 1) (DL).\n\n\nProgram.prototype.dl = Program.prototype.deleteLines = function (param) {\n  if (this.tput) return this.put.dl(param);\n  return this._write('\\x1b[' + (param || '') + 'M');\n}; // CSI Ps P\n// Delete Ps Character(s) (default = 1) (DCH).\n\n\nProgram.prototype.dch = Program.prototype.deleteChars = function (param) {\n  if (this.tput) return this.put.dch(param);\n  return this._write('\\x1b[' + (param || '') + 'P');\n}; // CSI Ps X\n// Erase Ps Character(s) (default = 1) (ECH).\n\n\nProgram.prototype.ech = Program.prototype.eraseChars = function (param) {\n  if (this.tput) return this.put.ech(param);\n  return this._write('\\x1b[' + (param || '') + 'X');\n}; // CSI Pm `  Character Position Absolute\n//   [column] (default = [row,1]) (HPA).\n\n\nProgram.prototype.hpa = Program.prototype.charPosAbsolute = function (param) {\n  this.x = param || 0;\n\n  this._ncoords();\n\n  if (this.tput) {\n    return this.put.hpa.apply(this.put, arguments);\n  }\n\n  param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + '`');\n}; // 141 61 a * HPR -\n// Horizontal Position Relative\n// reuse CSI Ps C ?\n\n\nProgram.prototype.hpr = Program.prototype.HPositionRelative = function (param) {\n  if (this.tput) return this.cuf(param);\n  this.x += param || 1;\n\n  this._ncoords(); // Does not exist:\n  // if (this.tput) return this.put.hpr(param);\n\n\n  return this._write('\\x1b[' + (param || '') + 'a');\n}; // CSI Ps c  Send Device Attributes (Primary DA).\n//     Ps = 0  or omitted -> request attributes from terminal.  The\n//     response depends on the decTerminalID resource setting.\n//     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n//     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n//     -> CSI ? 6 c  (``VT102'')\n//     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n//   The VT100-style response parameters do not mean anything by\n//   themselves.  VT220 parameters do, telling the host what fea-\n//   tures the terminal supports:\n//     Ps = 1  -> 132-columns.\n//     Ps = 2  -> Printer.\n//     Ps = 6  -> Selective erase.\n//     Ps = 8  -> User-defined keys.\n//     Ps = 9  -> National replacement character sets.\n//     Ps = 1 5  -> Technical characters.\n//     Ps = 2 2  -> ANSI color, e.g., VT525.\n//     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n// CSI > Ps c\n//   Send Device Attributes (Secondary DA).\n//     Ps = 0  or omitted -> request the terminal's identification\n//     code.  The response depends on the decTerminalID resource set-\n//     ting.  It should apply only to VT220 and up, but xterm extends\n//     this to VT100.\n//     -> CSI  > Pp ; Pv ; Pc c\n//   where Pp denotes the terminal type\n//     Pp = 0  -> ``VT100''.\n//     Pp = 1  -> ``VT220''.\n//   and Pv is the firmware version (for xterm, this was originally\n//   the XFree86 patch number, starting with 95).  In a DEC termi-\n//   nal, Pc indicates the ROM cartridge registration number and is\n//   always zero.\n// More information:\n//   xterm/charproc.c - line 2012, for more information.\n//   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n\n\nProgram.prototype.da = Program.prototype.sendDeviceAttributes = function (param, callback) {\n  return this.response('device-attributes', '\\x1b[' + (param || '') + 'c', callback);\n}; // CSI Pm d\n// Line Position Absolute  [row] (default = [1,column]) (VPA).\n// NOTE: Can't find in terminfo, no idea why it has multiple params.\n\n\nProgram.prototype.vpa = Program.prototype.linePosAbsolute = function (param) {\n  this.y = param || 1;\n\n  this._ncoords();\n\n  if (this.tput) {\n    return this.put.vpa.apply(this.put, arguments);\n  }\n\n  param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + 'd');\n}; // 145 65 e * VPR - Vertical Position Relative\n// reuse CSI Ps B ?\n\n\nProgram.prototype.vpr = Program.prototype.VPositionRelative = function (param) {\n  if (this.tput) return this.cud(param);\n  this.y += param || 1;\n\n  this._ncoords(); // Does not exist:\n  // if (this.tput) return this.put.vpr(param);\n\n\n  return this._write('\\x1b[' + (param || '') + 'e');\n}; // CSI Ps ; Ps f\n//   Horizontal and Vertical Position [row;column] (default =\n//   [1,1]) (HVP).\n\n\nProgram.prototype.hvp = Program.prototype.HVPosition = function (row, col) {\n  if (!this.zero) {\n    row = (row || 1) - 1;\n    col = (col || 1) - 1;\n  } else {\n    row = row || 0;\n    col = col || 0;\n  }\n\n  this.y = row;\n  this.x = col;\n\n  this._ncoords(); // Does not exist (?):\n  // if (this.tput) return this.put.hvp(row, col);\n\n\n  if (this.tput) return this.put.cup(row, col);\n  return this._write('\\x1b[' + (row + 1) + ';' + (col + 1) + 'f');\n}; // CSI Pm h  Set Mode (SM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Insert Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Automatic Newline (LNM).\n// CSI ? Pm h\n//   DEC Private Mode Set (DECSET).\n//     Ps = 1  -> Application Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate USASCII for character sets G0-G3\n//     (DECANM), and set VT100 mode.\n//     Ps = 3  -> 132 Column Mode (DECCOLM).\n//     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n//     Ps = 5  -> Reverse Video (DECSCNM).\n//     Ps = 6  -> Origin Mode (DECOM).\n//     Ps = 7  -> Wraparound Mode (DECAWM).\n//     Ps = 8  -> Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n//     tion Mouse Tracking.\n//     Ps = 1 0  -> Show toolbar (rxvt).\n//     Ps = 1 2  -> Start Blinking Cursor (att610).\n//     Ps = 1 8  -> Print form feed (DECPFF).\n//     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n//     Ps = 2 5  -> Show Cursor (DECTCEM).\n//     Ps = 3 0  -> Show scrollbar (rxvt).\n//     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n//     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n//     Ps = 4 0  -> Allow 80 -> 132 Mode.\n//     Ps = 4 1  -> more(1) fix (see curses resource).\n//     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n//     RCM).\n//     Ps = 4 4  -> Turn On Margin Bell.\n//     Ps = 4 5  -> Reverse-wraparound Mode.\n//     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n//     compile-time option.\n//     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 6 6  -> Application keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n//     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n//     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n//     (enables the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n//     Lock keys.  (This enables the numLock resource).\n//     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n//     enables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n//     key.\n//     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n//     enables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n//     (This enables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n//     Control-G is received.  (This enables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n//     is received.  (enables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n//     Screen Buffer, clearing it first.  (This may be disabled by\n//     the titeInhibit resource).  This combines the effects of the 1\n//     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n//     applications rather than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Set Sun function-key mode.\n//     Ps = 1 0 5 2  -> Set HP function-key mode.\n//     Ps = 1 0 5 3  -> Set SCO function-key mode.\n//     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n//     Ps = 2 0 0 4  -> Set bracketed paste mode.\n// Modes:\n//   http://vt100.net/docs/vt220-rm/chapter4.html\n\n\nProgram.prototype.sm = Program.prototype.setMode = function () {\n  var param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + 'h');\n};\n\nProgram.prototype.decset = function () {\n  var param = slice.call(arguments).join(';');\n  return this.setMode('?' + param);\n};\n\nProgram.prototype.dectcem = Program.prototype.cnorm = Program.prototype.cvvis = Program.prototype.showCursor = function () {\n  this.cursorHidden = false; // NOTE: In xterm terminfo:\n  // cnorm stops blinking cursor\n  // cvvis starts blinking cursor\n\n  if (this.tput) return this.put.cnorm(); //if (this.tput) return this.put.cvvis();\n  // return this._write('\\x1b[?12l\\x1b[?25h'); // cursor_normal\n  // return this._write('\\x1b[?12;25h'); // cursor_visible\n\n  return this.setMode('?25');\n};\n\nProgram.prototype.alternate = Program.prototype.smcup = Program.prototype.alternateBuffer = function () {\n  this.isAlt = true;\n  if (this.tput) return this.put.smcup();\n  if (this.term('vt') || this.term('linux')) return;\n  this.setMode('?47');\n  return this.setMode('?1049');\n}; // CSI Pm l  Reset Mode (RM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Replace Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Normal Linefeed (LNM).\n// CSI ? Pm l\n//   DEC Private Mode Reset (DECRST).\n//     Ps = 1  -> Normal Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate VT52 mode (DECANM).\n//     Ps = 3  -> 80 Column Mode (DECCOLM).\n//     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n//     Ps = 5  -> Normal Video (DECSCNM).\n//     Ps = 6  -> Normal Cursor Mode (DECOM).\n//     Ps = 7  -> No Wraparound Mode (DECAWM).\n//     Ps = 8  -> No Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Don't send Mouse X & Y on button press.\n//     Ps = 1 0  -> Hide toolbar (rxvt).\n//     Ps = 1 2  -> Stop Blinking Cursor (att610).\n//     Ps = 1 8  -> Don't print form feed (DECPFF).\n//     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n//     Ps = 2 5  -> Hide Cursor (DECTCEM).\n//     Ps = 3 0  -> Don't show scrollbar (rxvt).\n//     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n//     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n//     Ps = 4 1  -> No more(1) fix (see curses resource).\n//     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n//     NRCM).\n//     Ps = 4 4  -> Turn Off Margin Bell.\n//     Ps = 4 5  -> No Reverse-wraparound Mode.\n//     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n//     compile-time option).\n//     Ps = 4 7  -> Use Normal Screen Buffer.\n//     Ps = 6 6  -> Numeric keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n//     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n//     (rxvt).\n//     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n//     the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n//     Lock keys.  (This disables the numLock resource).\n//     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n//     (This disables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n//     Delete key.\n//     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n//     (This disables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n//     (This disables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n//     Control-G is received.  (This disables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n//     G is received.  (This disables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n//     first if in the Alternate Screen.  (This may be disabled by\n//     the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n//     as in DECRC.  (This may be disabled by the titeInhibit\n//     resource).  This combines the effects of the 1 0 4 7  and 1 0\n//     4 8  modes.  Use this with terminfo-based applications rather\n//     than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n//     Ps = 1 0 5 2  -> Reset HP function-key mode.\n//     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n//     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n//     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n\n\nProgram.prototype.rm = Program.prototype.resetMode = function () {\n  var param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + 'l');\n};\n\nProgram.prototype.decrst = function () {\n  var param = slice.call(arguments).join(';');\n  return this.resetMode('?' + param);\n};\n\nProgram.prototype.dectcemh = Program.prototype.cursor_invisible = Program.prototype.vi = Program.prototype.civis = Program.prototype.hideCursor = function () {\n  this.cursorHidden = true;\n  if (this.tput) return this.put.civis();\n  return this.resetMode('?25');\n};\n\nProgram.prototype.rmcup = Program.prototype.normalBuffer = function () {\n  this.isAlt = false;\n  if (this.tput) return this.put.rmcup();\n  this.resetMode('?47');\n  return this.resetMode('?1049');\n};\n\nProgram.prototype.enableMouse = function () {\n  if (process.env.BLESSED_FORCE_MODES) {\n    var modes = process.env.BLESSED_FORCE_MODES.split(',');\n    var options = {};\n\n    for (var n = 0; n < modes.length; ++n) {\n      var pair = modes[n].split('=');\n      var v = pair[1] !== '0';\n\n      switch (pair[0].toUpperCase()) {\n        case 'SGRMOUSE':\n          options.sgrMouse = v;\n          break;\n\n        case 'UTFMOUSE':\n          options.utfMouse = v;\n          break;\n\n        case 'VT200MOUSE':\n          options.vt200Mouse = v;\n          break;\n\n        case 'URXVTMOUSE':\n          options.urxvtMouse = v;\n          break;\n\n        case 'X10MOUSE':\n          options.x10Mouse = v;\n          break;\n\n        case 'DECMOUSE':\n          options.decMouse = v;\n          break;\n\n        case 'PTERMMOUSE':\n          options.ptermMouse = v;\n          break;\n\n        case 'JSBTERMMOUSE':\n          options.jsbtermMouse = v;\n          break;\n\n        case 'VT200HILITE':\n          options.vt200Hilite = v;\n          break;\n\n        case 'GPMMOUSE':\n          options.gpmMouse = v;\n          break;\n\n        case 'CELLMOTION':\n          options.cellMotion = v;\n          break;\n\n        case 'ALLMOTION':\n          options.allMotion = v;\n          break;\n\n        case 'SENDFOCUS':\n          options.sendFocus = v;\n          break;\n      }\n    }\n\n    return this.setMouse(options, true);\n  } // NOTE:\n  // Cell Motion isn't normally need for anything below here, but we'll\n  // activate it for tmux (whether using it or not) in case our all-motion\n  // passthrough does not work. It can't hurt.\n\n\n  if (this.term('rxvt-unicode')) {\n    return this.setMouse({\n      urxvtMouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  } // rxvt does not support the X10 UTF extensions\n\n\n  if (this.term('rxvt')) {\n    return this.setMouse({\n      vt200Mouse: true,\n      x10Mouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  } // libvte is broken. Older versions do not support the\n  // X10 UTF extension. However, later versions do support\n  // SGR/URXVT.\n\n\n  if (this.isVTE) {\n    return this.setMouse({\n      // NOTE: Could also use urxvtMouse here.\n      sgrMouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  }\n\n  if (this.term('linux')) {\n    return this.setMouse({\n      vt200Mouse: true,\n      gpmMouse: true\n    }, true);\n  }\n\n  if (this.term('xterm') || this.term('screen') || this.tput && this.tput.strings.key_mouse) {\n    return this.setMouse({\n      vt200Mouse: true,\n      utfMouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  }\n};\n\nProgram.prototype.disableMouse = function () {\n  if (!this._currentMouse) return;\n  var obj = {};\n  Object.keys(this._currentMouse).forEach(function (key) {\n    obj[key] = false;\n  });\n  return this.setMouse(obj, false);\n}; // Set Mouse\n\n\nProgram.prototype.setMouse = function (opt, enable) {\n  if (opt.normalMouse != null) {\n    opt.vt200Mouse = opt.normalMouse;\n    opt.allMotion = opt.normalMouse;\n  }\n\n  if (opt.hiliteTracking != null) {\n    opt.vt200Hilite = opt.hiliteTracking;\n  }\n\n  if (enable === true) {\n    if (this._currentMouse) {\n      this.setMouse(opt);\n      Object.keys(opt).forEach(function (key) {\n        this._currentMouse[key] = opt[key];\n      }, this);\n      return;\n    }\n\n    this._currentMouse = opt;\n    this.mouseEnabled = true;\n  } else if (enable === false) {\n    delete this._currentMouse;\n    this.mouseEnabled = false;\n  } //     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n  //     tion Mouse Tracking.\n  //     Ps = 9  -> Don't send Mouse X & Y on button press.\n  // x10 mouse\n\n\n  if (opt.x10Mouse != null) {\n    if (opt.x10Mouse) this.setMode('?9');else this.resetMode('?9');\n  } //     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n  //     release.  See the section Mouse Tracking.\n  //     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n  //     release.  See the section Mouse Tracking.\n  // vt200 mouse\n\n\n  if (opt.vt200Mouse != null) {\n    if (opt.vt200Mouse) this.setMode('?1000');else this.resetMode('?1000');\n  } //     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n  //     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n\n\n  if (opt.vt200Hilite != null) {\n    if (opt.vt200Hilite) this.setMode('?1001');else this.resetMode('?1001');\n  } //     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n  //     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n  // button event mouse\n\n\n  if (opt.cellMotion != null) {\n    if (opt.cellMotion) this.setMode('?1002');else this.resetMode('?1002');\n  } //     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n  //     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n  // any event mouse\n\n\n  if (opt.allMotion != null) {\n    // NOTE: Latest versions of tmux seem to only support cellMotion (not\n    // allMotion). We pass all motion through to the terminal.\n    if (this.tmux && this.tmuxVersion >= 2) {\n      if (opt.allMotion) this._twrite('\\x1b[?1003h');else this._twrite('\\x1b[?1003l');\n    } else {\n      if (opt.allMotion) this.setMode('?1003');else this.resetMode('?1003');\n    }\n  } //     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n  //     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n\n\n  if (opt.sendFocus != null) {\n    if (opt.sendFocus) this.setMode('?1004');else this.resetMode('?1004');\n  } //     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n  //     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n\n\n  if (opt.utfMouse != null) {\n    if (opt.utfMouse) this.setMode('?1005');else this.resetMode('?1005');\n  } // sgr mouse\n\n\n  if (opt.sgrMouse != null) {\n    if (opt.sgrMouse) this.setMode('?1006');else this.resetMode('?1006');\n  } // urxvt mouse\n\n\n  if (opt.urxvtMouse != null) {\n    if (opt.urxvtMouse) this.setMode('?1015');else this.resetMode('?1015');\n  } // dec mouse\n\n\n  if (opt.decMouse != null) {\n    if (opt.decMouse) this._write('\\x1b[1;2\\'z\\x1b[1;3\\'{');else this._write('\\x1b[\\'z');\n  } // pterm mouse\n\n\n  if (opt.ptermMouse != null) {\n    if (opt.ptermMouse) this._write('\\x1b[>1h\\x1b[>6h\\x1b[>7h\\x1b[>1h\\x1b[>9l');else this._write('\\x1b[>1l\\x1b[>6l\\x1b[>7l\\x1b[>1l\\x1b[>9h');\n  } // jsbterm mouse\n\n\n  if (opt.jsbtermMouse != null) {\n    // + = advanced mode\n    if (opt.jsbtermMouse) this._write('\\x1b[0~ZwLMRK+1Q\\x1b\\\\');else this._write('\\x1b[0~ZwQ\\x1b\\\\');\n  } // gpm mouse\n\n\n  if (opt.gpmMouse != null) {\n    if (opt.gpmMouse) this.enableGpm();else this.disableGpm();\n  }\n}; // CSI Ps ; Ps r\n//   Set Scrolling Region [top;bottom] (default = full size of win-\n//   dow) (DECSTBM).\n// CSI ? Pm r\n\n\nProgram.prototype.decstbm = Program.prototype.csr = Program.prototype.setScrollRegion = function (top, bottom) {\n  if (!this.zero) {\n    top = (top || 1) - 1;\n    bottom = (bottom || this.rows) - 1;\n  } else {\n    top = top || 0;\n    bottom = bottom || this.rows - 1;\n  }\n\n  this.scrollTop = top;\n  this.scrollBottom = bottom;\n  this.x = 0;\n  this.y = 0;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.csr(top, bottom);\n  return this._write('\\x1b[' + (top + 1) + ';' + (bottom + 1) + 'r');\n}; // CSI s\n//   Save cursor (ANSI.SYS).\n\n\nProgram.prototype.scA = Program.prototype.saveCursorA = function () {\n  this.savedX = this.x;\n  this.savedY = this.y;\n  if (this.tput) return this.put.sc();\n  return this._write('\\x1b[s');\n}; // CSI u\n//   Restore cursor (ANSI.SYS).\n\n\nProgram.prototype.rcA = Program.prototype.restoreCursorA = function () {\n  this.x = this.savedX || 0;\n  this.y = this.savedY || 0;\n  if (this.tput) return this.put.rc();\n  return this._write('\\x1b[u');\n};\n/**\n * Lesser Used\n */\n// CSI Ps I\n//   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n\n\nProgram.prototype.cht = Program.prototype.cursorForwardTab = function (param) {\n  this.x += 8;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.tab(param);\n  return this._write('\\x1b[' + (param || 1) + 'I');\n}; // CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n\n\nProgram.prototype.su = Program.prototype.scrollUp = function (param) {\n  this.y -= param || 1;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.parm_index(param);\n  return this._write('\\x1b[' + (param || 1) + 'S');\n}; // CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n\n\nProgram.prototype.sd = Program.prototype.scrollDown = function (param) {\n  this.y += param || 1;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.parm_rindex(param);\n  return this._write('\\x1b[' + (param || 1) + 'T');\n}; // CSI Ps ; Ps ; Ps ; Ps ; Ps T\n//   Initiate highlight mouse tracking.  Parameters are\n//   [func;startx;starty;firstrow;lastrow].  See the section Mouse\n//   Tracking.\n\n\nProgram.prototype.initMouseTracking = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + 'T');\n}; // CSI > Ps; Ps T\n//   Reset one or more features of the title modes to the default\n//   value.  Normally, \"reset\" disables the feature.  It is possi-\n//   ble to disable the ability to reset features by compiling a\n//   different default for the title modes into xterm.\n//     Ps = 0  -> Do not set window/icon labels using hexadecimal.\n//     Ps = 1  -> Do not query window/icon labels using hexadeci-\n//     mal.\n//     Ps = 2  -> Do not set window/icon labels using UTF-8.\n//     Ps = 3  -> Do not query window/icon labels using UTF-8.\n//   (See discussion of \"Title Modes\").\n\n\nProgram.prototype.resetTitleModes = function () {\n  return this._write('\\x1b[>' + slice.call(arguments).join(';') + 'T');\n}; // CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n\n\nProgram.prototype.cbt = Program.prototype.cursorBackwardTab = function (param) {\n  this.x -= 8;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.cbt(param);\n  return this._write('\\x1b[' + (param || 1) + 'Z');\n}; // CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n\n\nProgram.prototype.rep = Program.prototype.repeatPrecedingCharacter = function (param) {\n  this.x += param || 1;\n\n  this._ncoords();\n\n  if (this.tput) return this.put.rep(param);\n  return this._write('\\x1b[' + (param || 1) + 'b');\n}; // CSI Ps g  Tab Clear (TBC).\n//     Ps = 0  -> Clear Current Column (default).\n//     Ps = 3  -> Clear All.\n// Potentially:\n//   Ps = 2  -> Clear Stops on Line.\n//   http://vt100.net/annarbor/aaa-ug/section6.html\n\n\nProgram.prototype.tbc = Program.prototype.tabClear = function (param) {\n  if (this.tput) return this.put.tbc(param);\n  return this._write('\\x1b[' + (param || 0) + 'g');\n}; // CSI Pm i  Media Copy (MC).\n//     Ps = 0  -> Print screen (default).\n//     Ps = 4  -> Turn off printer controller mode.\n//     Ps = 5  -> Turn on printer controller mode.\n// CSI ? Pm i\n//   Media Copy (MC, DEC-specific).\n//     Ps = 1  -> Print line containing cursor.\n//     Ps = 4  -> Turn off autoprint mode.\n//     Ps = 5  -> Turn on autoprint mode.\n//     Ps = 1  0  -> Print composed display, ignores DECPEX.\n//     Ps = 1  1  -> Print all pages.\n\n\nProgram.prototype.mc = Program.prototype.mediaCopy = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + 'i');\n};\n\nProgram.prototype.print_screen = Program.prototype.ps = Program.prototype.mc0 = function () {\n  if (this.tput) return this.put.mc0();\n  return this.mc('0');\n};\n\nProgram.prototype.prtr_on = Program.prototype.po = Program.prototype.mc5 = function () {\n  if (this.tput) return this.put.mc5();\n  return this.mc('5');\n};\n\nProgram.prototype.prtr_off = Program.prototype.pf = Program.prototype.mc4 = function () {\n  if (this.tput) return this.put.mc4();\n  return this.mc('4');\n};\n\nProgram.prototype.prtr_non = Program.prototype.pO = Program.prototype.mc5p = function () {\n  if (this.tput) return this.put.mc5p();\n  return this.mc('?5');\n}; // CSI > Ps; Ps m\n//   Set or reset resource-values used by xterm to decide whether\n//   to construct escape sequences holding information about the\n//   modifiers pressed with a given key.  The first parameter iden-\n//   tifies the resource to set/reset.  The second parameter is the\n//   value to assign to the resource.  If the second parameter is\n//   omitted, the resource is reset to its initial value.\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If no parameters are given, all resources are reset to their\n//   initial values.\n\n\nProgram.prototype.setResources = function () {\n  return this._write('\\x1b[>' + slice.call(arguments).join(';') + 'm');\n}; // CSI > Ps n\n//   Disable modifiers which may be enabled via the CSI > Ps; Ps m\n//   sequence.  This corresponds to a resource value of \"-1\", which\n//   cannot be set with the other sequence.  The parameter identi-\n//   fies the resource to be disabled:\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If the parameter is omitted, modifyFunctionKeys is disabled.\n//   When modifyFunctionKeys is disabled, xterm uses the modifier\n//   keys to make an extended sequence of functions rather than\n//   adding a parameter to each function key to denote the modi-\n//   fiers.\n\n\nProgram.prototype.disableModifiers = function (param) {\n  return this._write('\\x1b[>' + (param || '') + 'n');\n}; // CSI > Ps p\n//   Set resource value pointerMode.  This is used by xterm to\n//   decide whether to hide the pointer cursor as the user types.\n//   Valid values for the parameter:\n//     Ps = 0  -> never hide the pointer.\n//     Ps = 1  -> hide if the mouse tracking mode is not enabled.\n//     Ps = 2  -> always hide the pointer.  If no parameter is\n//     given, xterm uses the default, which is 1 .\n\n\nProgram.prototype.setPointerMode = function (param) {\n  return this._write('\\x1b[>' + (param || '') + 'p');\n}; // CSI ! p   Soft terminal reset (DECSTR).\n// http://vt100.net/docs/vt220-rm/table4-10.html\n\n\nProgram.prototype.decstr = Program.prototype.rs2 = Program.prototype.softReset = function () {\n  //if (this.tput) return this.put.init_2string();\n  //if (this.tput) return this.put.reset_2string();\n  if (this.tput) return this.put.rs2(); //return this._write('\\x1b[!p');\n  //return this._write('\\x1b[!p\\x1b[?3;4l\\x1b[4l\\x1b>'); // init\n\n  return this._write('\\x1b[!p\\x1b[?3;4l\\x1b[4l\\x1b>'); // reset\n}; // CSI Ps$ p\n//   Request ANSI mode (DECRQM).  For VT300 and up, reply is\n//     CSI Ps; Pm$ y\n//   where Ps is the mode number as in RM, and Pm is the mode\n//   value:\n//     0 - not recognized\n//     1 - set\n//     2 - reset\n//     3 - permanently set\n//     4 - permanently reset\n\n\nProgram.prototype.decrqm = Program.prototype.requestAnsiMode = function (param) {\n  return this._write('\\x1b[' + (param || '') + '$p');\n}; // CSI ? Ps$ p\n//   Request DEC private mode (DECRQM).  For VT300 and up, reply is\n//     CSI ? Ps; Pm$ p\n//   where Ps is the mode number as in DECSET, Pm is the mode value\n//   as in the ANSI DECRQM.\n\n\nProgram.prototype.decrqmp = Program.prototype.requestPrivateMode = function (param) {\n  return this._write('\\x1b[?' + (param || '') + '$p');\n}; // CSI Ps ; Ps \" p\n//   Set conformance level (DECSCL).  Valid values for the first\n//   parameter:\n//     Ps = 6 1  -> VT100.\n//     Ps = 6 2  -> VT200.\n//     Ps = 6 3  -> VT300.\n//   Valid values for the second parameter:\n//     Ps = 0  -> 8-bit controls.\n//     Ps = 1  -> 7-bit controls (always set for VT100).\n//     Ps = 2  -> 8-bit controls.\n\n\nProgram.prototype.decscl = Program.prototype.setConformanceLevel = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\"p');\n}; // CSI Ps q  Load LEDs (DECLL).\n//     Ps = 0  -> Clear all LEDS (default).\n//     Ps = 1  -> Light Num Lock.\n//     Ps = 2  -> Light Caps Lock.\n//     Ps = 3  -> Light Scroll Lock.\n//     Ps = 2  1  -> Extinguish Num Lock.\n//     Ps = 2  2  -> Extinguish Caps Lock.\n//     Ps = 2  3  -> Extinguish Scroll Lock.\n\n\nProgram.prototype.decll = Program.prototype.loadLEDs = function (param) {\n  return this._write('\\x1b[' + (param || '') + 'q');\n}; // CSI Ps SP q\n//   Set cursor style (DECSCUSR, VT520).\n//     Ps = 0  -> blinking block.\n//     Ps = 1  -> blinking block (default).\n//     Ps = 2  -> steady block.\n//     Ps = 3  -> blinking underline.\n//     Ps = 4  -> steady underline.\n\n\nProgram.prototype.decscusr = Program.prototype.setCursorStyle = function (param) {\n  switch (param) {\n    case 'blinking block':\n      param = 1;\n      break;\n\n    case 'block':\n    case 'steady block':\n      param = 2;\n      break;\n\n    case 'blinking underline':\n      param = 3;\n      break;\n\n    case 'underline':\n    case 'steady underline':\n      param = 4;\n      break;\n\n    case 'blinking bar':\n      param = 5;\n      break;\n\n    case 'bar':\n    case 'steady bar':\n      param = 6;\n      break;\n  }\n\n  if (param === 2 && this.has('Se')) {\n    return this.put.Se();\n  }\n\n  if (this.has('Ss')) {\n    return this.put.Ss(param);\n  }\n\n  return this._write('\\x1b[' + (param || 1) + ' q');\n}; // CSI Ps \" q\n//   Select character protection attribute (DECSCA).  Valid values\n//   for the parameter:\n//     Ps = 0  -> DECSED and DECSEL can erase (default).\n//     Ps = 1  -> DECSED and DECSEL cannot erase.\n//     Ps = 2  -> DECSED and DECSEL can erase.\n\n\nProgram.prototype.decsca = Program.prototype.setCharProtectionAttr = function (param) {\n  return this._write('\\x1b[' + (param || 0) + '\"q');\n}; // CSI ? Pm r\n//   Restore DEC Private Mode Values.  The value of Ps previously\n//   saved is restored.  Ps values are the same as for DECSET.\n\n\nProgram.prototype.restorePrivateValues = function () {\n  return this._write('\\x1b[?' + slice.call(arguments).join(';') + 'r');\n}; // CSI Pt; Pl; Pb; Pr; Ps$ r\n//   Change Attributes in Rectangular Area (DECCARA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\n\n\nProgram.prototype.deccara = Program.prototype.setAttrInRectangle = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$r');\n}; // CSI ? Pm s\n//   Save DEC Private Mode Values.  Ps values are the same as for\n//   DECSET.\n\n\nProgram.prototype.savePrivateValues = function () {\n  return this._write('\\x1b[?' + slice.call(arguments).join(';') + 's');\n}; // CSI Ps ; Ps ; Ps t\n//   Window manipulation (from dtterm, as well as extensions).\n//   These controls may be disabled using the allowWindowOps\n//   resource.  Valid values for the first (and any additional\n//   parameters) are:\n//     Ps = 1  -> De-iconify window.\n//     Ps = 2  -> Iconify window.\n//     Ps = 3  ;  x ;  y -> Move window to [x, y].\n//     Ps = 4  ;  height ;  width -> Resize the xterm window to\n//     height and width in pixels.\n//     Ps = 5  -> Raise the xterm window to the front of the stack-\n//     ing order.\n//     Ps = 6  -> Lower the xterm window to the bottom of the\n//     stacking order.\n//     Ps = 7  -> Refresh the xterm window.\n//     Ps = 8  ;  height ;  width -> Resize the text area to\n//     [height;width] in characters.\n//     Ps = 9  ;  0  -> Restore maximized window.\n//     Ps = 9  ;  1  -> Maximize window (i.e., resize to screen\n//     size).\n//     Ps = 1 0  ;  0  -> Undo full-screen mode.\n//     Ps = 1 0  ;  1  -> Change to full-screen.\n//     Ps = 1 1  -> Report xterm window state.  If the xterm window\n//     is open (non-iconified), it returns CSI 1 t .  If the xterm\n//     window is iconified, it returns CSI 2 t .\n//     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n//     ; x ; y t\n//     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n//     4  ;  height ;  width t\n//     Ps = 1 8  -> Report the size of the text area in characters.\n//     Result is CSI  8  ;  height ;  width t\n//     Ps = 1 9  -> Report the size of the screen in characters.\n//     Result is CSI  9  ;  height ;  width t\n//     Ps = 2 0  -> Report xterm window's icon label.  Result is\n//     OSC  L  label ST\n//     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n//     label ST\n//     Ps = 2 2  ;  0  -> Save xterm icon and window title on\n//     stack.\n//     Ps = 2 2  ;  1  -> Save xterm icon title on stack.\n//     Ps = 2 2  ;  2  -> Save xterm window title on stack.\n//     Ps = 2 3  ;  0  -> Restore xterm icon and window title from\n//     stack.\n//     Ps = 2 3  ;  1  -> Restore xterm icon title from stack.\n//     Ps = 2 3  ;  2  -> Restore xterm window title from stack.\n//     Ps >= 2 4  -> Resize to Ps lines (DECSLPP).\n\n\nProgram.prototype.manipulateWindow = function () {\n  var args = slice.call(arguments);\n  var callback = typeof args[args.length - 1] === 'function' ? args.pop() : function () {};\n  return this.response('window-manipulation', '\\x1b[' + args.join(';') + 't', callback);\n};\n\nProgram.prototype.getWindowSize = function (callback) {\n  return this.manipulateWindow(18, callback);\n}; // CSI Pt; Pl; Pb; Pr; Ps$ t\n//   Reverse Attributes in Rectangular Area (DECRARA), VT400 and\n//   up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the attributes to reverse, i.e.,  1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\n\n\nProgram.prototype.decrara = Program.prototype.reverseAttrInRectangle = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$t');\n}; // CSI > Ps; Ps t\n//   Set one or more features of the title modes.  Each parameter\n//   enables a single feature.\n//     Ps = 0  -> Set window/icon labels using hexadecimal.\n//     Ps = 1  -> Query window/icon labels using hexadecimal.\n//     Ps = 2  -> Set window/icon labels using UTF-8.\n//     Ps = 3  -> Query window/icon labels using UTF-8.  (See dis-\n//     cussion of \"Title Modes\")\n// XXX VTE bizarelly echos this:\n\n\nProgram.prototype.setTitleModeFeature = function () {\n  return this._twrite('\\x1b[>' + slice.call(arguments).join(';') + 't');\n}; // CSI Ps SP t\n//   Set warning-bell volume (DECSWBV, VT520).\n//     Ps = 0  or 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 5 , 6 , 7 , or 8  -> high.\n\n\nProgram.prototype.decswbv = Program.prototype.setWarningBellVolume = function (param) {\n  return this._write('\\x1b[' + (param || '') + ' t');\n}; // CSI Ps SP u\n//   Set margin-bell volume (DECSMBV, VT520).\n//     Ps = 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 0 , 5 , 6 , 7 , or 8  -> high.\n\n\nProgram.prototype.decsmbv = Program.prototype.setMarginBellVolume = function (param) {\n  return this._write('\\x1b[' + (param || '') + ' u');\n}; // CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n//   Copy Rectangular Area (DECCRA, VT400 and up).\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Pp denotes the source page.\n//     Pt; Pl denotes the target location.\n//     Pp denotes the target page.\n// NOTE: xterm doesn't enable this code by default.\n\n\nProgram.prototype.deccra = Program.prototype.copyRectangle = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$v');\n}; // CSI Pt ; Pl ; Pb ; Pr ' w\n//   Enable Filter Rectangle (DECEFR), VT420 and up.\n//   Parameters are [top;left;bottom;right].\n//   Defines the coordinates of a filter rectangle and activates\n//   it.  Anytime the locator is detected outside of the filter\n//   rectangle, an outside rectangle event is generated and the\n//   rectangle is disabled.  Filter rectangles are always treated\n//   as \"one-shot\" events.  Any parameters that are omitted default\n//   to the current locator position.  If all parameters are omit-\n//   ted, any locator motion will be reported.  DECELR always can-\n//   cels any prevous rectangle definition.\n\n\nProgram.prototype.decefr = Program.prototype.enableFilterRectangle = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\\'w');\n}; // CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n//   if Ps is a \"0\" (default) or \"1\", and xterm is emulating VT100,\n//   the control sequence elicits a response of the same form whose\n//   parameters describe the terminal:\n//     Ps -> the given Ps incremented by 2.\n//     Pn = 1  <- no parity.\n//     Pn = 1  <- eight bits.\n//     Pn = 1  <- 2  8  transmit 38.4k baud.\n//     Pn = 1  <- 2  8  receive 38.4k baud.\n//     Pn = 1  <- clock multiplier.\n//     Pn = 0  <- STP flags.\n\n\nProgram.prototype.decreqtparm = Program.prototype.requestParameters = function (param) {\n  return this._write('\\x1b[' + (param || 0) + 'x');\n}; // CSI Ps x  Select Attribute Change Extent (DECSACE).\n//     Ps = 0  -> from start to end position, wrapped.\n//     Ps = 1  -> from start to end position, wrapped.\n//     Ps = 2  -> rectangle (exact).\n\n\nProgram.prototype.decsace = Program.prototype.selectChangeExtent = function (param) {\n  return this._write('\\x1b[' + (param || 0) + 'x');\n}; // CSI Pc; Pt; Pl; Pb; Pr$ x\n//   Fill Rectangular Area (DECFRA), VT420 and up.\n//     Pc is the character to use.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\n\n\nProgram.prototype.decfra = Program.prototype.fillRectangle = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$x');\n}; // CSI Ps ; Pu ' z\n//   Enable Locator Reporting (DECELR).\n//   Valid values for the first parameter:\n//     Ps = 0  -> Locator disabled (default).\n//     Ps = 1  -> Locator enabled.\n//     Ps = 2  -> Locator enabled for one report, then disabled.\n//   The second parameter specifies the coordinate unit for locator\n//   reports.\n//   Valid values for the second parameter:\n//     Pu = 0  <- or omitted -> default to character cells.\n//     Pu = 1  <- device physical pixels.\n//     Pu = 2  <- character cells.\n\n\nProgram.prototype.decelr = Program.prototype.enableLocatorReporting = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\\'z');\n}; // CSI Pt; Pl; Pb; Pr$ z\n//   Erase Rectangular Area (DECERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\n\n\nProgram.prototype.decera = Program.prototype.eraseRectangle = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$z');\n}; // CSI Pm ' {\n//   Select Locator Events (DECSLE).\n//   Valid values for the first (and any additional parameters)\n//   are:\n//     Ps = 0  -> only respond to explicit host requests (DECRQLP).\n//                (This is default).  It also cancels any filter\n//   rectangle.\n//     Ps = 1  -> report button down transitions.\n//     Ps = 2  -> do not report button down transitions.\n//     Ps = 3  -> report button up transitions.\n//     Ps = 4  -> do not report button up transitions.\n\n\nProgram.prototype.decsle = Program.prototype.setLocatorEvents = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\\'{');\n}; // CSI Pt; Pl; Pb; Pr$ {\n//   Selective Erase Rectangular Area (DECSERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n\n\nProgram.prototype.decsera = Program.prototype.selectiveEraseRectangle = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '${');\n}; // CSI Ps ' |\n//   Request Locator Position (DECRQLP).\n//   Valid values for the parameter are:\n//     Ps = 0 , 1 or omitted -> transmit a single DECLRP locator\n//     report.\n//   If Locator Reporting has been enabled by a DECELR, xterm will\n//   respond with a DECLRP Locator Report.  This report is also\n//   generated on button up and down events if they have been\n//   enabled with a DECSLE, or when the locator is detected outside\n//   of a filter rectangle, if filter rectangles have been enabled\n//   with a DECEFR.\n//     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n//   Parameters are [event;button;row;column;page].\n//   Valid values for the event:\n//     Pe = 0  -> locator unavailable - no other parameters sent.\n//     Pe = 1  -> request - xterm received a DECRQLP.\n//     Pe = 2  -> left button down.\n//     Pe = 3  -> left button up.\n//     Pe = 4  -> middle button down.\n//     Pe = 5  -> middle button up.\n//     Pe = 6  -> right button down.\n//     Pe = 7  -> right button up.\n//     Pe = 8  -> M4 button down.\n//     Pe = 9  -> M4 button up.\n//     Pe = 1 0  -> locator outside filter rectangle.\n//   ``button'' parameter is a bitmask indicating which buttons are\n//     pressed:\n//     Pb = 0  <- no buttons down.\n//     Pb & 1  <- right button down.\n//     Pb & 2  <- middle button down.\n//     Pb & 4  <- left button down.\n//     Pb & 8  <- M4 button down.\n//   ``row'' and ``column'' parameters are the coordinates of the\n//     locator position in the xterm window, encoded as ASCII deci-\n//     mal.\n//   The ``page'' parameter is not used by xterm, and will be omit-\n//   ted.\n\n\nProgram.prototype.decrqlp = Program.prototype.req_mouse_pos = Program.prototype.reqmp = Program.prototype.requestLocatorPosition = function (param, callback) {\n  // See also:\n  // get_mouse / getm / Gm\n  // mouse_info / minfo / Mi\n  // Correct for tput?\n  if (this.has('req_mouse_pos')) {\n    var code = this.tput.req_mouse_pos(param);\n    return this.response('locator-position', code, callback);\n  }\n\n  return this.response('locator-position', '\\x1b[' + (param || '') + '\\'|', callback);\n}; // CSI P m SP }\n// Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n// NOTE: xterm doesn't enable this code by default.\n\n\nProgram.prototype.decic = Program.prototype.insertColumns = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + ' }');\n}; // CSI P m SP ~\n// Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n// NOTE: xterm doesn't enable this code by default.\n\n\nProgram.prototype.decdc = Program.prototype.deleteColumns = function () {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + ' ~');\n};\n\nProgram.prototype.out = function (name) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  this.ret = true;\n  var out = this[name].apply(this, args);\n  this.ret = false;\n  return out;\n};\n\nProgram.prototype.sigtstp = function (callback) {\n  var resume = this.pause();\n  process.once('SIGCONT', function () {\n    resume();\n    if (callback) callback();\n  });\n  process.kill(process.pid, 'SIGTSTP');\n};\n\nProgram.prototype.pause = function (callback) {\n  var self = this,\n      isAlt = this.isAlt,\n      mouseEnabled = this.mouseEnabled;\n  this.lsaveCursor('pause'); //this.csr(0, screen.height - 1);\n\n  if (isAlt) this.normalBuffer();\n  this.showCursor();\n  if (mouseEnabled) this.disableMouse();\n  var write = this.output.write;\n\n  this.output.write = function () {};\n\n  if (this.input.setRawMode) {\n    this.input.setRawMode(false);\n  }\n\n  this.input.pause();\n  return this._resume = function () {\n    delete self._resume;\n\n    if (self.input.setRawMode) {\n      self.input.setRawMode(true);\n    }\n\n    self.input.resume();\n    self.output.write = write;\n    if (isAlt) self.alternateBuffer(); //self.csr(0, screen.height - 1);\n\n    if (mouseEnabled) self.enableMouse();\n    self.lrestoreCursor('pause', true);\n    if (callback) callback();\n  };\n};\n\nProgram.prototype.resume = function () {\n  if (this._resume) return this._resume();\n};\n/**\n * Helpers\n */\n// We could do this easier by just manipulating the _events object, or for\n// older versions of node, manipulating the array returned by listeners(), but\n// neither of these methods are guaranteed to work in future versions of node.\n\n\nfunction unshiftEvent(obj, event, listener) {\n  var listeners = obj.listeners(event);\n  obj.removeAllListeners(event);\n  obj.on(event, listener);\n  listeners.forEach(function (listener) {\n    obj.on(event, listener);\n  });\n}\n\nfunction merge(out) {\n  slice.call(arguments, 1).forEach(function (obj) {\n    Object.keys(obj).forEach(function (key) {\n      out[key] = obj[key];\n    });\n  });\n  return out;\n}\n/**\n * Expose\n */\n\n\nmodule.exports = Program;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/program.js"],"names":["EventEmitter","require","StringDecoder","cp","util","fs","Tput","colors","slice","Array","prototype","nextTick","global","setImmediate","process","bind","Program","options","self","call","__proto__","Object","input","arguments","output","stdin","stdout","log","dump","_logger","createWriteStream","setupDump","zero","useBuffer","buffer","x","y","savedX","savedY","cols","columns","rows","scrollTop","scrollBottom","_terminal","terminal","term","env","TERM","platform","toLowerCase","isOSXTerm","TERM_PROGRAM","isiTerm2","ITERM_SESSION_ID","isXFCE","test","COLORTERM","isTerminator","TERMINATOR_UUID","isLXDE","isVTE","VTE_VERSION","isRxvt","isXterm","tmux","TMUX","tmuxVersion","version","execFileSync","encoding","exec","trim","split","e","_buf","_flush","flush","tput","setupTput","listen","total","instances","program","indexOf","push","index","_bound","unshiftEvent","_exitHandler","forEach","_exiting","type","_log","format","apply","debug","pre","msg","write","decoder","stringify","data","caret","replace","ch","charCodeAt","toString","length","String","fromCharCode","on","_tputSetup","_write","padding","extended","printf","termcap","forceUnicode","error","emit","message","put","args","cap","shift","keys","key","_print","__defineGetter__","__defineSetter__","setTerminal","has","name","is","_blessedInput","_listenInput","_newHandler","fn","removeListener","setRawMode","isRaw","resume","bindMouse","_blessedOutput","_listenOutput","_keypressHandler","code","sequence","merge","ctrl","meta","full","_dataHandler","emitKeypressEvents","isTTY","resize","_resizeHandler","resizeTimeout","_resizeTimer","clearTimeout","time","setTimeout","destroy","splice","destroyed","pause","listener","onceKey","once","unkey","removeKey","_boundMouse","text","_bindMouse","s","buf","parts","b","mod","params","down","page","button","undefined","Buffer","isBuffer","bx","by","raw","action","_lastButton","enableGpm","gpmclient","gpm","btn","modifier","ButtonName","hasShiftKey","hasMetaKey","hasCtrlKey","dx","dy","disableGpm","stop","bindResponse","_boundResponse","_bindResponse","out","map","event","advancedVideo","attr","cols132","printer","selectiveErase","userDefinedKeys","nationalReplacementCharsets","technicalCharacters","userWindows","horizontalScrolling","ansiColor","ansiTextLocator","firmwareVersion","romCartridgeRegistrationNumber","deviceAttributes","status","deviceStatus","printerStatus","UDKStatus","keyboardStatus","locator","JSON","cursor","state","windowState","position","windowPosition","size","height","width","windowSizePixels","textAreaSizeCharacters","screenSizeCharacters","windowIconLabel","windowTitle","mask","row","col","locatorPosition","ps","pt","response","callback","noBypass","onresponse","timeout","Error","_twrite","_owrite","writable","_buffer","ret","iterations","timer","bytesWritten","setInterval","clearInterval","echo","print","_ncoords","setx","cursorCharAbsolute","sety","linePosAbsolute","move","cursorPos","omove","cuf","cub","cud","cuu","cup","rsetx","forward","back","rsety","up","rmove","simpleInsert","i","repeat","join","_title","title","setTitle","copyToClipboard","cursorShape","shape","blink","cursorColor","color","cursorReset","resetCursor","getTextParams","param","err","getCursorColor","nul","bel","bell","vtab","ff","form","kbs","backspace","ht","tab","shiftOut","shiftIn","cr","return","nel","newline","feed","bools","eat_newline_glitch","ind","ri","reverse","reverseIndex","nextLine","reset","rs1","ris","tabSet","hts","sc","saveCursor","lsaveCursor","rc","restoreCursor","hide","lrestoreCursor","_saved","hidden","cursorHidden","pos","hideCursor","showCursor","lineHeight","charset","val","level","smacs","rmacs","enter_alt_charset_mode","as","exit_alt_charset_mode","ae","setG","resetColors","Cr","dynamicColors","Cs","selData","a","Ms","cursorUp","strings","parm_up_cursor","cuu1","cursorDown","parm_down_cursor","cud1","right","cursorForward","parm_right_cursor","cuf1","left","cursorBackward","parm_left_cursor","cub1","ed","eraseInDisplay","clear","el","eraseInLine","sgr","charAttributes","_attr","m","isArray","used","part","substring","match","reduce","fg","setForeground","bg","setBackground","dsr","dec","getCursor","saveReportedCursor","user7","_rx","_ry","restoreReportedCursor","ich","insertChars","cnl","cursorNextLine","cpl","cursorPrecedingLine","cha","hpa","il","insertLines","dl","deleteLines","dch","deleteChars","ech","eraseChars","charPosAbsolute","hpr","HPositionRelative","da","sendDeviceAttributes","vpa","vpr","VPositionRelative","hvp","HVPosition","sm","setMode","decset","dectcem","cnorm","cvvis","alternate","smcup","alternateBuffer","isAlt","rm","resetMode","decrst","dectcemh","cursor_invisible","vi","civis","rmcup","normalBuffer","enableMouse","BLESSED_FORCE_MODES","modes","n","pair","v","toUpperCase","sgrMouse","utfMouse","vt200Mouse","urxvtMouse","x10Mouse","decMouse","ptermMouse","jsbtermMouse","vt200Hilite","gpmMouse","cellMotion","allMotion","sendFocus","setMouse","key_mouse","disableMouse","_currentMouse","obj","opt","enable","normalMouse","hiliteTracking","mouseEnabled","decstbm","csr","setScrollRegion","top","bottom","scA","saveCursorA","rcA","restoreCursorA","cht","cursorForwardTab","su","scrollUp","parm_index","sd","scrollDown","parm_rindex","initMouseTracking","resetTitleModes","cbt","cursorBackwardTab","rep","repeatPrecedingCharacter","tbc","tabClear","mc","mediaCopy","print_screen","mc0","prtr_on","po","mc5","prtr_off","pf","mc4","prtr_non","pO","mc5p","setResources","disableModifiers","setPointerMode","decstr","rs2","softReset","decrqm","requestAnsiMode","decrqmp","requestPrivateMode","decscl","setConformanceLevel","decll","loadLEDs","decscusr","setCursorStyle","Se","Ss","decsca","setCharProtectionAttr","restorePrivateValues","deccara","setAttrInRectangle","savePrivateValues","manipulateWindow","pop","getWindowSize","decrara","reverseAttrInRectangle","setTitleModeFeature","decswbv","setWarningBellVolume","decsmbv","setMarginBellVolume","deccra","copyRectangle","decefr","enableFilterRectangle","decreqtparm","requestParameters","decsace","selectChangeExtent","decfra","fillRectangle","decelr","enableLocatorReporting","decera","eraseRectangle","decsle","setLocatorEvents","decsera","selectiveEraseRectangle","decrqlp","req_mouse_pos","reqmp","requestLocatorPosition","decic","insertColumns","decdc","deleteColumns","sigtstp","kill","pid","_resume","listeners","removeAllListeners","module","exports"],"mappings":"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la,OAAO,CAACN,SAAR,CAAkBya,UAAlB,GAA+B,UAAS5L,GAAT,EAAcC,GAAd,EAAmB;AAChD,MAAI,CAAC,KAAKxN,IAAV,EAAgB;AACduN,IAAAA,GAAG,GAAG,CAACA,GAAG,IAAI,CAAR,IAAa,CAAnB;AACAC,IAAAA,GAAG,GAAG,CAACA,GAAG,IAAI,CAAR,IAAa,CAAnB;AACD,GAHD,MAGO;AACLD,IAAAA,GAAG,GAAGA,GAAG,IAAI,CAAb;AACAC,IAAAA,GAAG,GAAGA,GAAG,IAAI,CAAb;AACD;;AACD,OAAKpN,CAAL,GAASmN,GAAT;AACA,OAAKpN,CAAL,GAASqN,GAAT;;AACA,OAAKsB,QAAL,GAVgD,CAWhD;AACA;;;AACA,MAAI,KAAKhM,IAAT,EAAe,OAAO,KAAK4C,GAAL,CAASgK,GAAT,CAAanC,GAAb,EAAkBC,GAAlB,CAAP;AACf,SAAO,KAAKvI,MAAL,CAAY,WAAWsI,GAAG,GAAG,CAAjB,IAAsB,GAAtB,IAA6BC,GAAG,GAAG,CAAnC,IAAwC,GAApD,CAAP;AACD,CAhBD,C,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAxO,OAAO,CAACN,SAAR,CAAkB0a,EAAlB,GACApa,OAAO,CAACN,SAAR,CAAkB2a,OAAlB,GAA4B,YAAW;AACrC,MAAIpI,KAAK,GAAGzS,KAAK,CAACW,IAAN,CAAWI,SAAX,EAAsB6Q,IAAtB,CAA2B,GAA3B,CAAZ;AACA,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","sourcesContent":["/**\n * program.js - basic curses-like functionality for blessed.\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , StringDecoder = require('string_decoder').StringDecoder\n  , cp = require('child_process')\n  , util = require('util')\n  , fs = require('fs');\n\nvar Tput = require('./tput')\n  , colors = require('./colors')\n  , slice = Array.prototype.slice;\n\nvar nextTick = global.setImmediate || process.nextTick.bind(process);\n\n/**\n * Program\n */\n\nfunction Program(options) {\n  var self = this;\n\n  if (!(this instanceof Program)) {\n    return new Program(options);\n  }\n\n  Program.bind(this);\n\n  EventEmitter.call(this);\n\n  if (!options || options.__proto__ !== Object.prototype) {\n    options = {\n      input: arguments[0],\n      output: arguments[1]\n    };\n  }\n\n  this.options = options;\n  this.input = options.input || process.stdin;\n  this.output = options.output || process.stdout;\n\n  options.log = options.log || options.dump;\n  if (options.log) {\n    this._logger = fs.createWriteStream(options.log);\n    if (options.dump) this.setupDump();\n  }\n\n  this.zero = options.zero !== false;\n  this.useBuffer = options.buffer;\n\n  this.x = 0;\n  this.y = 0;\n  this.savedX = 0;\n  this.savedY = 0;\n\n  this.cols = this.output.columns || 1;\n  this.rows = this.output.rows || 1;\n\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n\n  this._terminal = options.terminal\n    || options.term\n    || process.env.TERM\n    || (process.platform === 'win32' ? 'windows-ansi' : 'xterm');\n\n  this._terminal = this._terminal.toLowerCase();\n\n  // OSX\n  this.isOSXTerm = process.env.TERM_PROGRAM === 'Apple_Terminal';\n  this.isiTerm2 = process.env.TERM_PROGRAM === 'iTerm.app'\n    || !!process.env.ITERM_SESSION_ID;\n\n  // VTE\n  // NOTE: lxterminal does not provide an env variable to check for.\n  // NOTE: gnome-terminal and sakura use a later version of VTE\n  // which provides VTE_VERSION as well as supports SGR events.\n  this.isXFCE = /xfce/i.test(process.env.COLORTERM);\n  this.isTerminator = !!process.env.TERMINATOR_UUID;\n  this.isLXDE = false;\n  this.isVTE = !!process.env.VTE_VERSION\n    || this.isXFCE\n    || this.isTerminator\n    || this.isLXDE;\n\n  // xterm and rxvt - not accurate\n  this.isRxvt = /rxvt/i.test(process.env.COLORTERM);\n  this.isXterm = false;\n\n  this.tmux = !!process.env.TMUX;\n  this.tmuxVersion = (function() {\n    if (!self.tmux) return 2;\n    try {\n      var version = cp.execFileSync('tmux', ['-V'], { encoding: 'utf8' });\n      return +/^tmux ([\\d.]+)/i.exec(version.trim().split('\\n')[0])[1];\n    } catch (e) {\n      return 2;\n    }\n  })();\n\n  this._buf = '';\n  this._flush = this.flush.bind(this);\n\n  if (options.tput !== false) {\n    this.setupTput();\n  }\n\n  this.listen();\n}\n\nProgram.global = null;\n\nProgram.total = 0;\n\nProgram.instances = [];\n\nProgram.bind = function(program) {\n  if (!Program.global) {\n    Program.global = program;\n  }\n\n  if (!~Program.instances.indexOf(program)) {\n    Program.instances.push(program);\n    program.index = Program.total;\n    Program.total++;\n  }\n\n  if (Program._bound) return;\n  Program._bound = true;\n\n  unshiftEvent(process, 'exit', Program._exitHandler = function() {\n    Program.instances.forEach(function(program) {\n      // Potentially reset window title on exit:\n      // if (program._originalTitle) {\n      //   program.setTitle(program._originalTitle);\n      // }\n      // Ensure the buffer is flushed (it should\n      // always be at this point, but who knows).\n      program.flush();\n      // Ensure _exiting is set (could technically\n      // use process._exiting).\n      program._exiting = true;\n    });\n  });\n};\n\nProgram.prototype.__proto__ = EventEmitter.prototype;\n\nProgram.prototype.type = 'program';\n\nProgram.prototype.log = function() {\n  return this._log('LOG',  util.format.apply(util, arguments));\n};\n\nProgram.prototype.debug = function() {\n  if (!this.options.debug) return;\n  return this._log('DEBUG',  util.format.apply(util, arguments));\n};\n\nProgram.prototype._log = function(pre, msg) {\n  if (!this._logger) return;\n  return this._logger.write(pre + ': ' + msg + '\\n-\\n');\n};\n\nProgram.prototype.setupDump = function() {\n  var self = this\n    , write = this.output.write\n    , decoder = new StringDecoder('utf8');\n\n  function stringify(data) {\n    return caret(data\n      .replace(/\\r/g, '\\\\r')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\t/g, '\\\\t'))\n      .replace(/[^ -~]/g, function(ch) {\n        if (ch.charCodeAt(0) > 0xff) return ch;\n        ch = ch.charCodeAt(0).toString(16);\n        if (ch.length > 2) {\n          if (ch.length < 4) ch = '0' + ch;\n          return '\\\\u' + ch;\n        }\n        if (ch.length < 2) ch = '0' + ch;\n        return '\\\\x' + ch;\n      });\n  }\n\n  function caret(data) {\n    return data.replace(/[\\0\\x80\\x1b-\\x1f\\x7f\\x01-\\x1a]/g, function(ch) {\n      switch (ch) {\n        case '\\0':\n        case '\\200':\n          ch = '@';\n          break;\n        case '\\x1b':\n          ch = '[';\n          break;\n        case '\\x1c':\n          ch = '\\\\';\n          break;\n        case '\\x1d':\n          ch = ']';\n          break;\n        case '\\x1e':\n          ch = '^';\n          break;\n        case '\\x1f':\n          ch = '_';\n          break;\n        case '\\x7f':\n          ch = '?';\n          break;\n        default:\n          ch = ch.charCodeAt(0);\n          // From ('A' - 64) to ('Z' - 64).\n          if (ch >= 1 && ch <= 26) {\n            ch = String.fromCharCode(ch + 64);\n          } else {\n            return String.fromCharCode(ch);\n          }\n          break;\n      }\n      return '^' + ch;\n    });\n  }\n\n  this.input.on('data', function(data) {\n    self._log('IN', stringify(decoder.write(data)));\n  });\n\n  this.output.write = function(data) {\n    self._log('OUT', stringify(data));\n    return write.apply(this, arguments);\n  };\n};\n\nProgram.prototype.setupTput = function() {\n  if (this._tputSetup) return;\n  this._tputSetup = true;\n\n  var self = this\n    , options = this.options\n    , write = this._write.bind(this);\n\n  var tput = this.tput = new Tput({\n    terminal: this.terminal,\n    padding: options.padding,\n    extended: options.extended,\n    printf: options.printf,\n    termcap: options.termcap,\n    forceUnicode: options.forceUnicode\n  });\n\n  if (tput.error) {\n    nextTick(function() {\n      self.emit('warning', tput.error.message);\n    });\n  }\n\n  if (tput.padding) {\n    nextTick(function() {\n      self.emit('warning', 'Terminfo padding has been enabled.');\n    });\n  }\n\n  this.put = function() {\n    var args = slice.call(arguments)\n      , cap = args.shift();\n\n    if (tput[cap]) {\n      return this._write(tput[cap].apply(tput, args));\n    }\n  };\n\n  Object.keys(tput).forEach(function(key) {\n    if (self[key] == null) {\n      self[key] = tput[key];\n    }\n\n    if (typeof tput[key] !== 'function') {\n      self.put[key] = tput[key];\n      return;\n    }\n\n    if (tput.padding) {\n      self.put[key] = function() {\n        return tput._print(tput[key].apply(tput, arguments), write);\n      };\n    } else {\n      self.put[key] = function() {\n        return self._write(tput[key].apply(tput, arguments));\n      };\n    }\n  });\n};\n\nProgram.prototype.__defineGetter__('terminal', function() {\n  return this._terminal;\n});\n\nProgram.prototype.__defineSetter__('terminal', function(terminal) {\n  this.setTerminal(terminal);\n  return this.terminal;\n});\n\nProgram.prototype.setTerminal = function(terminal) {\n  this._terminal = terminal.toLowerCase();\n  delete this._tputSetup;\n  this.setupTput();\n};\n\nProgram.prototype.has = function(name) {\n  return this.tput\n    ? this.tput.has(name)\n    : false;\n};\n\nProgram.prototype.term = function(is) {\n  return this.terminal.indexOf(is) === 0;\n};\n\nProgram.prototype.listen = function() {\n  var self = this;\n\n  // Potentially reset window title on exit:\n  // if (!this.isRxvt) {\n  //   if (!this.isVTE) this.setTitleModeFeature(3);\n  //   this.manipulateWindow(21, function(err, data) {\n  //     if (err) return;\n  //     self._originalTitle = data.text;\n  //   });\n  // }\n\n  // Listen for keys/mouse on input\n  if (!this.input._blessedInput) {\n    this.input._blessedInput = 1;\n    this._listenInput();\n  } else {\n    this.input._blessedInput++;\n  }\n\n  this.on('newListener', this._newHandler = function fn(type) {\n    if (type === 'keypress' || type === 'mouse') {\n      self.removeListener('newListener', fn);\n      if (self.input.setRawMode && !self.input.isRaw) {\n        self.input.setRawMode(true);\n        self.input.resume();\n      }\n    }\n  });\n\n  this.on('newListener', function fn(type) {\n    if (type === 'mouse') {\n      self.removeListener('newListener', fn);\n      self.bindMouse();\n    }\n  });\n\n  // Listen for resize on output\n  if (!this.output._blessedOutput) {\n    this.output._blessedOutput = 1;\n    this._listenOutput();\n  } else {\n    this.output._blessedOutput++;\n  }\n};\n\nProgram.prototype._listenInput = function() {\n  var keys = require('./keys')\n    , self = this;\n\n  // Input\n  this.input.on('keypress', this.input._keypressHandler = function(ch, key) {\n    key = key || { ch: ch };\n\n    if (key.name === 'undefined'\n        && (key.code === '[M' || key.code === '[I' || key.code === '[O')) {\n      // A mouse sequence. The `keys` module doesn't understand these.\n      return;\n    }\n\n    if (key.name === 'undefined') {\n      // Not sure what this is, but we should probably ignore it.\n      return;\n    }\n\n    if (key.name === 'enter' && key.sequence === '\\n') {\n      key.name = 'linefeed';\n    }\n\n    if (key.name === 'return' && key.sequence === '\\r') {\n      self.input.emit('keypress', ch, merge({}, key, { name: 'enter' }));\n    }\n\n    var name = (key.ctrl ? 'C-' : '')\n      + (key.meta ? 'M-' : '')\n      + (key.shift && key.name ? 'S-' : '')\n      + (key.name || ch);\n\n    key.full = name;\n\n    Program.instances.forEach(function(program) {\n      if (program.input !== self.input) return;\n      program.emit('keypress', ch, key);\n      program.emit('key ' + name, ch, key);\n    });\n  });\n\n  this.input.on('data', this.input._dataHandler = function(data) {\n    Program.instances.forEach(function(program) {\n      if (program.input !== self.input) return;\n      program.emit('data', data);\n    });\n  });\n\n  keys.emitKeypressEvents(this.input);\n};\n\nProgram.prototype._listenOutput = function() {\n  var self = this;\n\n  if (!this.output.isTTY) {\n    nextTick(function() {\n      self.emit('warning', 'Output is not a TTY');\n    });\n  }\n\n  // Output\n  function resize() {\n    Program.instances.forEach(function(program) {\n      if (program.output !== self.output) return;\n      program.cols = program.output.columns;\n      program.rows = program.output.rows;\n      program.emit('resize');\n    });\n  }\n\n  this.output.on('resize', this.output._resizeHandler = function() {\n    Program.instances.forEach(function(program) {\n      if (program.output !== self.output) return;\n      if (!program.options.resizeTimeout) {\n        return resize();\n      }\n      if (program._resizeTimer) {\n        clearTimeout(program._resizeTimer);\n        delete program._resizeTimer;\n      }\n      var time = typeof program.options.resizeTimeout === 'number'\n        ? program.options.resizeTimeout\n        : 300;\n      program._resizeTimer = setTimeout(resize, time);\n    });\n  });\n};\n\nProgram.prototype.destroy = function() {\n  var index = Program.instances.indexOf(this);\n\n  if (~index) {\n    Program.instances.splice(index, 1);\n    Program.total--;\n\n    this.flush();\n    this._exiting = true;\n\n    Program.global = Program.instances[0];\n\n    if (Program.total === 0) {\n      Program.global = null;\n\n      process.removeListener('exit', Program._exitHandler);\n      delete Program._exitHandler;\n\n      delete Program._bound;\n    }\n\n    this.input._blessedInput--;\n    this.output._blessedOutput--;\n\n    if (this.input._blessedInput === 0) {\n      this.input.removeListener('keypress', this.input._keypressHandler);\n      this.input.removeListener('data', this.input._dataHandler);\n      delete this.input._keypressHandler;\n      delete this.input._dataHandler;\n\n      if (this.input.setRawMode) {\n        if (this.input.isRaw) {\n          this.input.setRawMode(false);\n        }\n        if (!this.input.destroyed) {\n          this.input.pause();\n        }\n      }\n    }\n\n    if (this.output._blessedOutput === 0) {\n      this.output.removeListener('resize', this.output._resizeHandler);\n      delete this.output._resizeHandler;\n    }\n\n    this.removeListener('newListener', this._newHandler);\n    delete this._newHandler;\n\n    this.destroyed = true;\n    this.emit('destroy');\n  }\n};\n\nProgram.prototype.key = function(key, listener) {\n  if (typeof key === 'string') key = key.split(/\\s*,\\s*/);\n  key.forEach(function(key) {\n    return this.on('key ' + key, listener);\n  }, this);\n};\n\nProgram.prototype.onceKey = function(key, listener) {\n  if (typeof key === 'string') key = key.split(/\\s*,\\s*/);\n  key.forEach(function(key) {\n    return this.once('key ' + key, listener);\n  }, this);\n};\n\nProgram.prototype.unkey =\nProgram.prototype.removeKey = function(key, listener) {\n  if (typeof key === 'string') key = key.split(/\\s*,\\s*/);\n  key.forEach(function(key) {\n    return this.removeListener('key ' + key, listener);\n  }, this);\n};\n\n// XTerm mouse events\n// http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n// To better understand these\n// the xterm code is very helpful:\n// Relevant files:\n//   button.c, charproc.c, misc.c\n// Relevant functions in xterm/button.c:\n//   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n// send a mouse event:\n// regular/utf8: ^[[M Cb Cx Cy\n// urxvt: ^[[ Cb ; Cx ; Cy M\n// sgr: ^[[ Cb ; Cx ; Cy M/m\n// vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n// locator: CSI P e ; P b ; P r ; P c ; P p & w\n// motion example of a left click:\n// ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n// mouseup, mousedown, mousewheel\n// left click: ^[[M 3<^[[M#3<\n// mousewheel up: ^[[M`3>\nProgram.prototype.bindMouse = function() {\n  if (this._boundMouse) return;\n  this._boundMouse = true;\n\n  var decoder = new StringDecoder('utf8')\n    , self = this;\n\n  this.on('data', function(data) {\n    var text = decoder.write(data);\n    if (!text) return;\n    self._bindMouse(text, data);\n  });\n};\n\nProgram.prototype._bindMouse = function(s, buf) {\n  var self = this\n    , key\n    , parts\n    , b\n    , x\n    , y\n    , mod\n    , params\n    , down\n    , page\n    , button;\n\n  key = {\n    name: undefined,\n    ctrl: false,\n    meta: false,\n    shift: false\n  };\n\n  if (Buffer.isBuffer(s)) {\n    if (s[0] > 127 && s[1] === undefined) {\n      s[0] -= 128;\n      s = '\\x1b' + s.toString('utf-8');\n    } else {\n      s = s.toString('utf-8');\n    }\n  }\n\n  // if (this.8bit) {\n  //   s = s.replace(/\\233/g, '\\x1b[');\n  //   buf = new Buffer(s, 'utf8');\n  // }\n\n  // XTerm / X10 for buggy VTE\n  // VTE can only send unsigned chars and no unicode for coords. This limits\n  // them to 0xff. However, normally the x10 protocol does not allow a byte\n  // under 0x20, but since VTE can have the bytes overflow, we can consider\n  // bytes below 0x20 to be up to 0xff + 0x20. This gives a limit of 287. Since\n  // characters ranging from 223 to 248 confuse javascript's utf parser, we\n  // need to parse the raw binary. We can detect whether the terminal is using\n  // a bugged VTE version by examining the coordinates and seeing whether they\n  // are a value they would never otherwise be with a properly implemented x10\n  // protocol. This method of detecting VTE is only 99% reliable because we\n  // can't check if the coords are 0x00 (255) since that is a valid x10 coord\n  // technically.\n  var bx = s.charCodeAt(4);\n  var by = s.charCodeAt(5);\n  if (buf[0] === 0x1b && buf[1] === 0x5b && buf[2] === 0x4d\n      && (this.isVTE\n      || bx >= 65533 || by >= 65533\n      || (bx > 0x00 && bx < 0x20)\n      || (by > 0x00 && by < 0x20)\n      || (buf[4] > 223 && buf[4] < 248 && buf.length === 6)\n      || (buf[5] > 223 && buf[5] < 248 && buf.length === 6))) {\n    b = buf[3];\n    x = buf[4];\n    y = buf[5];\n\n    // unsigned char overflow.\n    if (x < 0x20) x += 0xff;\n    if (y < 0x20) y += 0xff;\n\n    // Convert the coordinates into a\n    // properly formatted x10 utf8 sequence.\n    s = '\\x1b[M'\n      + String.fromCharCode(b)\n      + String.fromCharCode(x)\n      + String.fromCharCode(y);\n  }\n\n  // XTerm / X10\n  if (parts = /^\\x1b\\[M([\\x00\\u0020-\\uffff]{3})/.exec(s)) {\n    b = parts[1].charCodeAt(0);\n    x = parts[1].charCodeAt(1);\n    y = parts[1].charCodeAt(2);\n\n    key.name = 'mouse';\n    key.type = 'X10';\n\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x - 32;\n    key.y = y - 32;\n\n    if (this.zero) key.x--, key.y--;\n\n    if (x === 0) key.x = 255;\n    if (y === 0) key.y = 255;\n\n    mod = b >> 2;\n    key.shift = !!(mod & 1);\n    key.meta = !!((mod >> 1) & 1);\n    key.ctrl = !!((mod >> 2) & 1);\n\n    b -= 32;\n\n    if ((b >> 6) & 1) {\n      key.action = b & 1 ? 'wheeldown' : 'wheelup';\n      key.button = 'middle';\n    } else if (b === 3) {\n      // NOTE: x10 and urxvt have no way\n      // of telling which button mouseup used.\n      key.action = 'mouseup';\n      key.button = this._lastButton || 'unknown';\n      delete this._lastButton;\n    } else {\n      key.action = 'mousedown';\n      button = b & 3;\n      key.button =\n        button === 0 ? 'left'\n        : button === 1 ? 'middle'\n        : button === 2 ? 'right'\n        : 'unknown';\n      this._lastButton = key.button;\n    }\n\n    // Probably a movement.\n    // The *newer* VTE gets mouse movements comepletely wrong.\n    // This presents a problem: older versions of VTE that get it right might\n    // be confused by the second conditional in the if statement.\n    // NOTE: Possibly just switch back to the if statement below.\n    // none, shift, ctrl, alt\n    // gnome: 32, 36, 48, 40\n    // xterm: 35, _, 51, _\n    // urxvt: 35, _, _, _\n    // if (key.action === 'mousedown' && key.button === 'unknown') {\n    if (b === 35 || b === 39 || b === 51 || b === 43\n        || (this.isVTE && (b === 32 || b === 36 || b === 48 || b === 40))) {\n      delete key.button;\n      key.action = 'mousemove';\n    }\n\n    self.emit('mouse', key);\n\n    return;\n  }\n\n  // URxvt\n  if (parts = /^\\x1b\\[(\\d+;\\d+;\\d+)M/.exec(s)) {\n    params = parts[1].split(';');\n    b = +params[0];\n    x = +params[1];\n    y = +params[2];\n\n    key.name = 'mouse';\n    key.type = 'urxvt';\n\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n\n    if (this.zero) key.x--, key.y--;\n\n    mod = b >> 2;\n    key.shift = !!(mod & 1);\n    key.meta = !!((mod >> 1) & 1);\n    key.ctrl = !!((mod >> 2) & 1);\n\n    // XXX Bug in urxvt after wheelup/down on mousemove\n    // NOTE: This may be different than 128/129 depending\n    // on mod keys.\n    if (b === 128 || b === 129) {\n      b = 67;\n    }\n\n    b -= 32;\n\n    if ((b >> 6) & 1) {\n      key.action = b & 1 ? 'wheeldown' : 'wheelup';\n      key.button = 'middle';\n    } else if (b === 3) {\n      // NOTE: x10 and urxvt have no way\n      // of telling which button mouseup used.\n      key.action = 'mouseup';\n      key.button = this._lastButton || 'unknown';\n      delete this._lastButton;\n    } else {\n      key.action = 'mousedown';\n      button = b & 3;\n      key.button =\n        button === 0 ? 'left'\n        : button === 1 ? 'middle'\n        : button === 2 ? 'right'\n        : 'unknown';\n      // NOTE: 0/32 = mousemove, 32/64 = mousemove with left down\n      // if ((b >> 1) === 32)\n      this._lastButton = key.button;\n    }\n\n    // Probably a movement.\n    // The *newer* VTE gets mouse movements comepletely wrong.\n    // This presents a problem: older versions of VTE that get it right might\n    // be confused by the second conditional in the if statement.\n    // NOTE: Possibly just switch back to the if statement below.\n    // none, shift, ctrl, alt\n    // urxvt: 35, _, _, _\n    // gnome: 32, 36, 48, 40\n    // if (key.action === 'mousedown' && key.button === 'unknown') {\n    if (b === 35 || b === 39 || b === 51 || b === 43\n        || (this.isVTE && (b === 32 || b === 36 || b === 48 || b === 40))) {\n      delete key.button;\n      key.action = 'mousemove';\n    }\n\n    self.emit('mouse', key);\n\n    return;\n  }\n\n  // SGR\n  if (parts = /^\\x1b\\[<(\\d+;\\d+;\\d+)([mM])/.exec(s)) {\n    down = parts[2] === 'M';\n    params = parts[1].split(';');\n    b = +params[0];\n    x = +params[1];\n    y = +params[2];\n\n    key.name = 'mouse';\n    key.type = 'sgr';\n\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n\n    if (this.zero) key.x--, key.y--;\n\n    mod = b >> 2;\n    key.shift = !!(mod & 1);\n    key.meta = !!((mod >> 1) & 1);\n    key.ctrl = !!((mod >> 2) & 1);\n\n    if ((b >> 6) & 1) {\n      key.action = b & 1 ? 'wheeldown' : 'wheelup';\n      key.button = 'middle';\n    } else {\n      key.action = down\n        ? 'mousedown'\n        : 'mouseup';\n      button = b & 3;\n      key.button =\n        button === 0 ? 'left'\n        : button === 1 ? 'middle'\n        : button === 2 ? 'right'\n        : 'unknown';\n    }\n\n    // Probably a movement.\n    // The *newer* VTE gets mouse movements comepletely wrong.\n    // This presents a problem: older versions of VTE that get it right might\n    // be confused by the second conditional in the if statement.\n    // NOTE: Possibly just switch back to the if statement below.\n    // none, shift, ctrl, alt\n    // xterm: 35, _, 51, _\n    // gnome: 32, 36, 48, 40\n    // if (key.action === 'mousedown' && key.button === 'unknown') {\n    if (b === 35 || b === 39 || b === 51 || b === 43\n        || (this.isVTE && (b === 32 || b === 36 || b === 48 || b === 40))) {\n      delete key.button;\n      key.action = 'mousemove';\n    }\n\n    self.emit('mouse', key);\n\n    return;\n  }\n\n  // DEC\n  // The xterm mouse documentation says there is a\n  // `<` prefix, the DECRQLP says there is no prefix.\n  if (parts = /^\\x1b\\[<(\\d+;\\d+;\\d+;\\d+)&w/.exec(s)) {\n    params = parts[1].split(';');\n    b = +params[0];\n    x = +params[1];\n    y = +params[2];\n    page = +params[3];\n\n    key.name = 'mouse';\n    key.type = 'dec';\n\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n    key.page = page;\n\n    if (this.zero) key.x--, key.y--;\n\n    key.action = b === 3\n      ? 'mouseup'\n      : 'mousedown';\n\n    key.button =\n      b === 2 ? 'left'\n      : b === 4 ? 'middle'\n      : b === 6 ? 'right'\n      : 'unknown';\n\n    self.emit('mouse', key);\n\n    return;\n  }\n\n  // vt300\n  if (parts = /^\\x1b\\[24([0135])~\\[(\\d+),(\\d+)\\]\\r/.exec(s)) {\n    b = +parts[1];\n    x = +parts[2];\n    y = +parts[3];\n\n    key.name = 'mouse';\n    key.type = 'vt300';\n\n    key.raw = [b, x, y, parts[0]];\n    key.buf = buf;\n    key.x = x;\n    key.y = y;\n\n    if (this.zero) key.x--, key.y--;\n\n    key.action = 'mousedown';\n    key.button =\n      b === 1 ? 'left'\n      : b === 2 ? 'middle'\n      : b === 5 ? 'right'\n      : 'unknown';\n\n    self.emit('mouse', key);\n\n    return;\n  }\n\n  if (parts = /^\\x1b\\[(O|I)/.exec(s)) {\n    key.action = parts[1] === 'I'\n      ? 'focus'\n      : 'blur';\n\n    self.emit('mouse', key);\n    self.emit(key.action);\n\n    return;\n  }\n};\n\n// gpm support for linux vc\nProgram.prototype.enableGpm = function() {\n  var self = this;\n  var gpmclient = require('./gpmclient');\n\n  if (this.gpm) return;\n\n  this.gpm = gpmclient();\n\n  this.gpm.on('btndown', function(btn, modifier, x, y) {\n    x--, y--;\n\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mousedown',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n\n    self.emit('mouse', key);\n  });\n\n  this.gpm.on('btnup', function(btn, modifier, x, y) {\n    x--, y--;\n\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mouseup',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n\n    self.emit('mouse', key);\n  });\n\n  this.gpm.on('move', function(btn, modifier, x, y) {\n    x--, y--;\n\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mousemove',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n\n    self.emit('mouse', key);\n  });\n\n  this.gpm.on('drag', function(btn, modifier, x, y) {\n    x--, y--;\n\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: 'mousemove',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n\n    self.emit('mouse', key);\n  });\n\n  this.gpm.on('mousewheel', function(btn, modifier, x, y, dx, dy) {\n    var key = {\n      name: 'mouse',\n      type: 'GPM',\n      action: dy > 0 ? 'wheelup' : 'wheeldown',\n      button: self.gpm.ButtonName(btn),\n      raw: [btn, modifier, x, y, dx, dy],\n      x: x,\n      y: y,\n      shift: self.gpm.hasShiftKey(modifier),\n      meta: self.gpm.hasMetaKey(modifier),\n      ctrl: self.gpm.hasCtrlKey(modifier)\n    };\n\n    self.emit('mouse', key);\n  });\n};\n\nProgram.prototype.disableGpm = function() {\n  if (this.gpm) {\n    this.gpm.stop();\n    delete this.gpm;\n  }\n};\n\n// All possible responses from the terminal\nProgram.prototype.bindResponse = function() {\n  if (this._boundResponse) return;\n  this._boundResponse = true;\n\n  var decoder = new StringDecoder('utf8')\n    , self = this;\n\n  this.on('data', function(data) {\n    data = decoder.write(data);\n    if (!data) return;\n    self._bindResponse(data);\n  });\n};\n\nProgram.prototype._bindResponse = function(s) {\n  var out = {}\n    , parts;\n\n  if (Buffer.isBuffer(s)) {\n    if (s[0] > 127 && s[1] === undefined) {\n      s[0] -= 128;\n      s = '\\x1b' + s.toString('utf-8');\n    } else {\n      s = s.toString('utf-8');\n    }\n  }\n\n  // CSI P s c\n  // Send Device Attributes (Primary DA).\n  // CSI > P s c\n  // Send Device Attributes (Secondary DA).\n  if (parts = /^\\x1b\\[(\\?|>)(\\d*(?:;\\d*)*)c/.exec(s)) {\n    parts = parts[2].split(';').map(function(ch) {\n      return +ch || 0;\n    });\n\n    out.event = 'device-attributes';\n    out.code = 'DA';\n\n    if (parts[1] === '?') {\n      out.type = 'primary-attribute';\n      // VT100-style params:\n      if (parts[0] === 1 && parts[2] === 2) {\n        out.term = 'vt100';\n        out.advancedVideo = true;\n      } else if (parts[0] === 1 && parts[2] === 0) {\n        out.term = 'vt101';\n      } else if (parts[0] === 6) {\n        out.term = 'vt102';\n      } else if (parts[0] === 60\n        && parts[1] === 1 && parts[2] === 2\n        && parts[3] === 6 && parts[4] === 8\n        && parts[5] === 9 && parts[6] === 15) {\n        out.term = 'vt220';\n      } else {\n        // VT200-style params:\n        parts.forEach(function(attr) {\n          switch (attr) {\n            case 1:\n              out.cols132 = true;\n              break;\n            case 2:\n              out.printer = true;\n              break;\n            case 6:\n              out.selectiveErase = true;\n              break;\n            case 8:\n              out.userDefinedKeys = true;\n              break;\n            case 9:\n              out.nationalReplacementCharsets = true;\n              break;\n            case 15:\n              out.technicalCharacters = true;\n              break;\n            case 18:\n              out.userWindows = true;\n              break;\n            case 21:\n              out.horizontalScrolling = true;\n              break;\n            case 22:\n              out.ansiColor = true;\n              break;\n            case 29:\n              out.ansiTextLocator = true;\n              break;\n          }\n        });\n      }\n    } else {\n      out.type = 'secondary-attribute';\n      switch (parts[0]) {\n        case 0:\n          out.term = 'vt100';\n          break;\n        case 1:\n          out.term = 'vt220';\n          break;\n        case 2:\n          out.term = 'vt240';\n          break;\n        case 18:\n          out.term = 'vt330';\n          break;\n        case 19:\n          out.term = 'vt340';\n          break;\n        case 24:\n          out.term = 'vt320';\n          break;\n        case 41:\n          out.term = 'vt420';\n          break;\n        case 61:\n          out.term = 'vt510';\n          break;\n        case 64:\n          out.term = 'vt520';\n          break;\n        case 65:\n          out.term = 'vt525';\n          break;\n      }\n      out.firmwareVersion = parts[1];\n      out.romCartridgeRegistrationNumber = parts[2];\n    }\n\n    // LEGACY\n    out.deviceAttributes = out;\n\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n\n    return;\n  }\n\n  // CSI Ps n  Device Status Report (DSR).\n  //     Ps = 5  -> Status Report.  Result (``OK'') is\n  //   CSI 0 n\n  // CSI ? Ps n\n  //   Device Status Report (DSR, DEC-specific).\n  //     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n  //     or CSI ? 1 1  n  (not ready).\n  //     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n  //     or CSI ? 2 1  n  (locked).\n  //     Ps = 2 6  -> Report Keyboard status as\n  //   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n  //   The last two parameters apply to VT400 & up, and denote key-\n  //   board ready and LK01 respectively.\n  //     Ps = 5 3  -> Report Locator status as\n  //   CSI ? 5 3  n  Locator available, if compiled-in, or\n  //   CSI ? 5 0  n  No Locator, if not.\n  if (parts = /^\\x1b\\[(\\?)?(\\d+)(?:;(\\d+);(\\d+);(\\d+))?n/.exec(s)) {\n    out.event = 'device-status';\n    out.code = 'DSR';\n\n    if (!parts[1] && parts[2] === '0' && !parts[3]) {\n      out.type = 'device-status';\n      out.status = 'OK';\n\n      // LEGACY\n      out.deviceStatus = out.status;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] && (parts[2] === '10' || parts[2] === '11') && !parts[3]) {\n      out.type = 'printer-status';\n      out.status = parts[2] === '10'\n        ? 'ready'\n        : 'not ready';\n\n      // LEGACY\n      out.printerStatus = out.status;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] && (parts[2] === '20' || parts[2] === '21') && !parts[3]) {\n      out.type = 'udk-status';\n      out.status = parts[2] === '20'\n        ? 'unlocked'\n        : 'locked';\n\n      // LEGACY\n      out.UDKStatus = out.status;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1]\n        && parts[2] === '27'\n        && parts[3] === '1'\n        && parts[4] === '0'\n        && parts[5] === '0') {\n      out.type = 'keyboard-status';\n      out.status = 'OK';\n\n      // LEGACY\n      out.keyboardStatus = out.status;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] && (parts[2] === '53' || parts[2] === '50') && !parts[3]) {\n      out.type = 'locator-status';\n      out.status = parts[2] === '53'\n          ? 'available'\n          : 'unavailable';\n\n      // LEGACY\n      out.locator = out.status;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    out.type = 'error';\n    out.text = 'Unhandled: ' + JSON.stringify(parts);\n\n    // LEGACY\n    out.error = out.text;\n\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n\n    return;\n  }\n\n  // CSI Ps n  Device Status Report (DSR).\n  //     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n  //   Result is\n  //   CSI r ; c R\n  // CSI ? Ps n\n  //   Device Status Report (DSR, DEC-specific).\n  //     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n  //     ? r ; c R (assumes page is zero).\n  if (parts = /^\\x1b\\[(\\?)?(\\d+);(\\d+)R/.exec(s)) {\n    out.event = 'device-status';\n    out.code = 'DSR';\n    out.type = 'cursor-status';\n\n    out.status = {\n      x: +parts[3],\n      y: +parts[2],\n      page: !parts[1] ? undefined : 0\n    };\n\n    out.x = out.status.x;\n    out.y = out.status.y;\n    out.page = out.status.page;\n\n    // LEGACY\n    out.cursor = out.status;\n\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n\n    return;\n  }\n\n  // CSI Ps ; Ps ; Ps t\n  //   Window manipulation (from dtterm, as well as extensions).\n  //   These controls may be disabled using the allowWindowOps\n  //   resource.  Valid values for the first (and any additional\n  //   parameters) are:\n  //     Ps = 1 1  -> Report xterm window state.  If the xterm window\n  //     is open (non-iconified), it returns CSI 1 t .  If the xterm\n  //     window is iconified, it returns CSI 2 t .\n  //     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n  //     ; x ; y t\n  //     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n  //     4  ;  height ;  width t\n  //     Ps = 1 8  -> Report the size of the text area in characters.\n  //     Result is CSI  8  ;  height ;  width t\n  //     Ps = 1 9  -> Report the size of the screen in characters.\n  //     Result is CSI  9  ;  height ;  width t\n  if (parts = /^\\x1b\\[(\\d+)(?:;(\\d+);(\\d+))?t/.exec(s)) {\n    out.event = 'window-manipulation';\n    out.code = '';\n\n    if ((parts[1] === '1' || parts[1] === '2') && !parts[2]) {\n      out.type = 'window-state';\n      out.state = parts[1] === '1'\n        ? 'non-iconified'\n        : 'iconified';\n\n      // LEGACY\n      out.windowState = out.state;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] === '3' && parts[2]) {\n      out.type = 'window-position';\n\n      out.position = {\n        x: +parts[2],\n        y: +parts[3]\n      };\n      out.x = out.position.x;\n      out.y = out.position.y;\n\n      // LEGACY\n      out.windowPosition = out.position;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] === '4' && parts[2]) {\n      out.type = 'window-size-pixels';\n      out.size = {\n        height: +parts[2],\n        width: +parts[3]\n      };\n      out.height = out.size.height;\n      out.width = out.size.width;\n\n      // LEGACY\n      out.windowSizePixels = out.size;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] === '8' && parts[2]) {\n      out.type = 'textarea-size';\n      out.size = {\n        height: +parts[2],\n        width: +parts[3]\n      };\n      out.height = out.size.height;\n      out.width = out.size.width;\n\n      // LEGACY\n      out.textAreaSizeCharacters = out.size;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] === '9' && parts[2]) {\n      out.type = 'screen-size';\n      out.size = {\n        height: +parts[2],\n        width: +parts[3]\n      };\n      out.height = out.size.height;\n      out.width = out.size.width;\n\n      // LEGACY\n      out.screenSizeCharacters = out.size;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    out.type = 'error';\n    out.text = 'Unhandled: ' + JSON.stringify(parts);\n\n    // LEGACY\n    out.error = out.text;\n\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n\n    return;\n  }\n\n  // rxvt-unicode does not support window manipulation\n  //   Result Normal: OSC l/L 0xEF 0xBF 0xBD\n  //   Result ASCII: OSC l/L 0x1c (file separator)\n  //   Result UTF8->ASCII: OSC l/L 0xFD\n  // Test with:\n  //   echo -ne '\\ePtmux;\\e\\e[>3t\\e\\\\'\n  //   sleep 2 && echo -ne '\\ePtmux;\\e\\e[21t\\e\\\\' & cat -v\n  //   -\n  //   echo -ne '\\e[>3t'\n  //   sleep 2 && echo -ne '\\e[21t' & cat -v\n  if (parts = /^\\x1b\\](l|L)([^\\x07\\x1b]*)$/.exec(s)) {\n    parts[2] = 'rxvt';\n    s = '\\x1b]' + parts[1] + parts[2] + '\\x1b\\\\';\n  }\n\n  // CSI Ps ; Ps ; Ps t\n  //   Window manipulation (from dtterm, as well as extensions).\n  //   These controls may be disabled using the allowWindowOps\n  //   resource.  Valid values for the first (and any additional\n  //   parameters) are:\n  //     Ps = 2 0  -> Report xterm window's icon label.  Result is\n  //     OSC  L  label ST\n  //     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n  //     label ST\n  if (parts = /^\\x1b\\](l|L)([^\\x07\\x1b]*)(?:\\x07|\\x1b\\\\)/.exec(s)) {\n    out.event = 'window-manipulation';\n    out.code = '';\n\n    if (parts[1] === 'L') {\n      out.type = 'window-icon-label';\n      out.text = parts[2];\n\n      // LEGACY\n      out.windowIconLabel = out.text;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    if (parts[1] === 'l') {\n      out.type = 'window-title';\n      out.text = parts[2];\n\n      // LEGACY\n      out.windowTitle = out.text;\n\n      this.emit('response', out);\n      this.emit('response ' + out.event, out);\n\n      return;\n    }\n\n    out.type = 'error';\n    out.text = 'Unhandled: ' + JSON.stringify(parts);\n\n    // LEGACY\n    out.error = out.text;\n\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n\n    return;\n  }\n\n  // CSI Ps ' |\n  //   Request Locator Position (DECRQLP).\n  //     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n  //   Parameters are [event;button;row;column;page].\n  //   Valid values for the event:\n  //     Pe = 0  -> locator unavailable - no other parameters sent.\n  //     Pe = 1  -> request - xterm received a DECRQLP.\n  //     Pe = 2  -> left button down.\n  //     Pe = 3  -> left button up.\n  //     Pe = 4  -> middle button down.\n  //     Pe = 5  -> middle button up.\n  //     Pe = 6  -> right button down.\n  //     Pe = 7  -> right button up.\n  //     Pe = 8  -> M4 button down.\n  //     Pe = 9  -> M4 button up.\n  //     Pe = 1 0  -> locator outside filter rectangle.\n  //   ``button'' parameter is a bitmask indicating which buttons are\n  //     pressed:\n  //     Pb = 0  <- no buttons down.\n  //     Pb & 1  <- right button down.\n  //     Pb & 2  <- middle button down.\n  //     Pb & 4  <- left button down.\n  //     Pb & 8  <- M4 button down.\n  //   ``row'' and ``column'' parameters are the coordinates of the\n  //     locator position in the xterm window, encoded as ASCII deci-\n  //     mal.\n  //   The ``page'' parameter is not used by xterm, and will be omit-\n  //   ted.\n  // NOTE:\n  // This is already implemented in the _bindMouse\n  // method, but it might make more sense here.\n  // The xterm mouse documentation says there is a\n  // `<` prefix, the DECRQLP says there is no prefix.\n  if (parts = /^\\x1b\\[(\\d+(?:;\\d+){4})&w/.exec(s)) {\n    parts = parts[1].split(';').map(function(ch) {\n      return +ch;\n    });\n\n    out.event = 'locator-position';\n    out.code = 'DECRQLP';\n\n    switch (parts[0]) {\n      case 0:\n        out.status = 'locator-unavailable';\n        break;\n      case 1:\n        out.status = 'request';\n        break;\n      case 2:\n        out.status = 'left-button-down';\n        break;\n      case 3:\n        out.status = 'left-button-up';\n        break;\n      case 4:\n        out.status = 'middle-button-down';\n        break;\n      case 5:\n        out.status = 'middle-button-up';\n        break;\n      case 6:\n        out.status = 'right-button-down';\n        break;\n      case 7:\n        out.status = 'right-button-up';\n        break;\n      case 8:\n        out.status = 'm4-button-down';\n        break;\n      case 9:\n        out.status = 'm4-button-up';\n        break;\n      case 10:\n        out.status = 'locator-outside';\n        break;\n    }\n\n    out.mask = parts[1];\n    out.row = parts[2];\n    out.col = parts[3];\n    out.page = parts[4];\n\n    // LEGACY\n    out.locatorPosition = out;\n\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n\n    return;\n  }\n\n  // OSC Ps ; Pt BEL\n  // OSC Ps ; Pt ST\n  // Set Text Parameters\n  if (parts = /^\\x1b\\](\\d+);([^\\x07\\x1b]+)(?:\\x07|\\x1b\\\\)/.exec(s)) {\n    out.event = 'text-params';\n    out.code = 'Set Text Parameters';\n    out.ps = +s[1];\n    out.pt = s[2];\n    this.emit('response', out);\n    this.emit('response ' + out.event, out);\n  }\n};\n\nProgram.prototype.response = function(name, text, callback, noBypass) {\n  var self = this;\n\n  if (arguments.length === 2) {\n    callback = text;\n    text = name;\n    name = null;\n  }\n\n  if (!callback) {\n    callback = function() {};\n  }\n\n  this.bindResponse();\n\n  name = name\n    ? 'response ' + name\n    : 'response';\n\n  var onresponse;\n\n  this.once(name, onresponse = function(event) {\n    if (timeout) clearTimeout(timeout);\n    if (event.type === 'error') {\n      return callback(new Error(event.event + ': ' + event.text));\n    }\n    return callback(null, event);\n  });\n\n  var timeout = setTimeout(function() {\n    self.removeListener(name, onresponse);\n    return callback(new Error('Timeout.'));\n  }, 2000);\n\n  return noBypass\n    ? this._write(text)\n    : this._twrite(text);\n};\n\nProgram.prototype._owrite =\nProgram.prototype.write = function(text) {\n  if (!this.output.writable) return;\n  return this.output.write(text);\n};\n\nProgram.prototype._buffer = function(text) {\n  if (this._exiting) {\n    this.flush();\n    this._owrite(text);\n    return;\n  }\n\n  if (this._buf) {\n    this._buf += text;\n    return;\n  }\n\n  this._buf = text;\n\n  nextTick(this._flush);\n\n  return true;\n};\n\nProgram.prototype.flush = function() {\n  if (!this._buf) return;\n  this._owrite(this._buf);\n  this._buf = '';\n};\n\nProgram.prototype._write = function(text) {\n  if (this.ret) return text;\n  if (this.useBuffer) {\n    return this._buffer(text);\n  }\n  return this._owrite(text);\n};\n\n// Example: `DCS tmux; ESC Pt ST`\n// Real: `DCS tmux; ESC Pt ESC \\`\nProgram.prototype._twrite = function(data) {\n  var self = this\n    , iterations = 0\n    , timer;\n\n  if (this.tmux) {\n    // Replace all STs with BELs so they can be nested within the DCS code.\n    data = data.replace(/\\x1b\\\\/g, '\\x07');\n\n    // Wrap in tmux forward DCS:\n    data = '\\x1bPtmux;\\x1b' + data + '\\x1b\\\\';\n\n    // If we've never even flushed yet, it means we're still in\n    // the normal buffer. Wait for alt screen buffer.\n    if (this.output.bytesWritten === 0) {\n      timer = setInterval(function() {\n        if (self.output.bytesWritten > 0 || ++iterations === 50) {\n          clearInterval(timer);\n          self.flush();\n          self._owrite(data);\n        }\n      }, 100);\n      return true;\n    }\n\n    // NOTE: Flushing the buffer is required in some cases.\n    // The DCS code must be at the start of the output.\n    this.flush();\n\n    // Write out raw now that the buffer is flushed.\n    return this._owrite(data);\n  }\n\n  return this._write(data);\n};\n\nProgram.prototype.echo =\nProgram.prototype.print = function(text, attr) {\n  return attr\n    ? this._write(this.text(text, attr))\n    : this._write(text);\n};\n\nProgram.prototype._ncoords = function() {\n  if (this.x < 0) this.x = 0;\n  else if (this.x >= this.cols) this.x = this.cols - 1;\n  if (this.y < 0) this.y = 0;\n  else if (this.y >= this.rows) this.y = this.rows - 1;\n};\n\nProgram.prototype.setx = function(x) {\n  return this.cursorCharAbsolute(x);\n  // return this.charPosAbsolute(x);\n};\n\nProgram.prototype.sety = function(y) {\n  return this.linePosAbsolute(y);\n};\n\nProgram.prototype.move = function(x, y) {\n  return this.cursorPos(y, x);\n};\n\n// TODO: Fix cud and cuu calls.\nProgram.prototype.omove = function(x, y) {\n  if (!this.zero) {\n    x = (x || 1) - 1;\n    y = (y || 1) - 1;\n  } else {\n    x = x || 0;\n    y = y || 0;\n  }\n  if (y === this.y && x === this.x) {\n    return;\n  }\n  if (y === this.y) {\n    if (x > this.x) {\n      this.cuf(x - this.x);\n    } else if (x < this.x) {\n      this.cub(this.x - x);\n    }\n  } else if (x === this.x) {\n    if (y > this.y) {\n      this.cud(y - this.y);\n    } else if (y < this.y) {\n      this.cuu(this.y - y);\n    }\n  } else {\n    if (!this.zero) x++, y++;\n    this.cup(y, x);\n  }\n};\n\nProgram.prototype.rsetx = function(x) {\n  // return this.HPositionRelative(x);\n  if (!x) return;\n  return x > 0\n    ? this.forward(x)\n    : this.back(-x);\n};\n\nProgram.prototype.rsety = function(y) {\n  // return this.VPositionRelative(y);\n  if (!y) return;\n  return y > 0\n    ? this.up(y)\n    : this.down(-y);\n};\n\nProgram.prototype.rmove = function(x, y) {\n  this.rsetx(x);\n  this.rsety(y);\n};\n\nProgram.prototype.simpleInsert = function(ch, i, attr) {\n  return this._write(this.repeat(ch, i), attr);\n};\n\nProgram.prototype.repeat = function(ch, i) {\n  if (!i || i < 0) i = 0;\n  return Array(i + 1).join(ch);\n};\n\nProgram.prototype.__defineGetter__('title', function() {\n  return this._title;\n});\n\nProgram.prototype.__defineSetter__('title', function(title) {\n  this.setTitle(title);\n  return this._title;\n});\n\n// Specific to iTerm2, but I think it's really cool.\n// Example:\n//  if (!screen.copyToClipboard(text)) {\n//    execClipboardProgram(text);\n//  }\nProgram.prototype.copyToClipboard = function(text) {\n  if (this.isiTerm2) {\n    this._twrite('\\x1b]50;CopyToCliboard=' + text + '\\x07');\n    return true;\n  }\n  return false;\n};\n\n// Only XTerm and iTerm2. If you know of any others, post them.\nProgram.prototype.cursorShape = function(shape, blink) {\n  if (this.isiTerm2) {\n    switch (shape) {\n      case 'block':\n        if (!blink) {\n          this._twrite('\\x1b]50;CursorShape=0;BlinkingCursorEnabled=0\\x07');\n        } else {\n          this._twrite('\\x1b]50;CursorShape=0;BlinkingCursorEnabled=1\\x07');\n        }\n        break;\n      case 'underline':\n        if (!blink) {\n          // this._twrite('\\x1b]50;CursorShape=n;BlinkingCursorEnabled=0\\x07');\n        } else {\n          // this._twrite('\\x1b]50;CursorShape=n;BlinkingCursorEnabled=1\\x07');\n        }\n        break;\n      case 'line':\n        if (!blink) {\n          this._twrite('\\x1b]50;CursorShape=1;BlinkingCursorEnabled=0\\x07');\n        } else {\n          this._twrite('\\x1b]50;CursorShape=1;BlinkingCursorEnabled=1\\x07');\n        }\n        break;\n    }\n    return true;\n  } else if (this.term('xterm') || this.term('screen')) {\n    switch (shape) {\n      case 'block':\n        if (!blink) {\n          this._twrite('\\x1b[0 q');\n        } else {\n          this._twrite('\\x1b[1 q');\n        }\n        break;\n      case 'underline':\n        if (!blink) {\n          this._twrite('\\x1b[2 q');\n        } else {\n          this._twrite('\\x1b[3 q');\n        }\n        break;\n      case 'line':\n        if (!blink) {\n          this._twrite('\\x1b[4 q');\n        } else {\n          this._twrite('\\x1b[5 q');\n        }\n        break;\n    }\n    return true;\n  }\n  return false;\n};\n\nProgram.prototype.cursorColor = function(color) {\n  if (this.term('xterm') || this.term('rxvt') || this.term('screen')) {\n    this._twrite('\\x1b]12;' + color + '\\x07');\n    return true;\n  }\n  return false;\n};\n\nProgram.prototype.cursorReset =\nProgram.prototype.resetCursor = function() {\n  if (this.term('xterm') || this.term('rxvt') || this.term('screen')) {\n    // XXX\n    // return this.resetColors();\n    this._twrite('\\x1b[0 q');\n    this._twrite('\\x1b]112\\x07');\n    // urxvt doesnt support OSC 112\n    this._twrite('\\x1b]12;white\\x07');\n    return true;\n  }\n  return false;\n};\n\nProgram.prototype.getTextParams = function(param, callback) {\n  return this.response('text-params', '\\x1b]' + param + ';?\\x07', function(err, data) {\n    if (err) return callback(err);\n    return callback(null, data.pt);\n  });\n};\n\nProgram.prototype.getCursorColor = function(callback) {\n  return this.getTextParams(12, callback);\n};\n\n/**\n * Normal\n */\n\n//Program.prototype.pad =\nProgram.prototype.nul = function() {\n  //if (this.has('pad')) return this.put.pad();\n  return this._write('\\200');\n};\n\nProgram.prototype.bel =\nProgram.prototype.bell = function() {\n  if (this.has('bel')) return this.put.bel();\n  return this._write('\\x07');\n};\n\nProgram.prototype.vtab = function() {\n  this.y++;\n  this._ncoords();\n  return this._write('\\x0b');\n};\n\nProgram.prototype.ff =\nProgram.prototype.form = function() {\n  if (this.has('ff')) return this.put.ff();\n  return this._write('\\x0c');\n};\n\nProgram.prototype.kbs =\nProgram.prototype.backspace = function() {\n  this.x--;\n  this._ncoords();\n  if (this.has('kbs')) return this.put.kbs();\n  return this._write('\\x08');\n};\n\nProgram.prototype.ht =\nProgram.prototype.tab = function() {\n  this.x += 8;\n  this._ncoords();\n  if (this.has('ht')) return this.put.ht();\n  return this._write('\\t');\n};\n\nProgram.prototype.shiftOut = function() {\n  // if (this.has('S2')) return this.put.S2();\n  return this._write('\\x0e');\n};\n\nProgram.prototype.shiftIn = function() {\n  // if (this.has('S3')) return this.put.S3();\n  return this._write('\\x0f');\n};\n\nProgram.prototype.cr =\nProgram.prototype.return = function() {\n  this.x = 0;\n  if (this.has('cr')) return this.put.cr();\n  return this._write('\\r');\n};\n\nProgram.prototype.nel =\nProgram.prototype.newline =\nProgram.prototype.feed = function() {\n  if (this.tput && this.tput.bools.eat_newline_glitch && this.x >= this.cols) {\n    return;\n  }\n  this.x = 0;\n  this.y++;\n  this._ncoords();\n  if (this.has('nel')) return this.put.nel();\n  return this._write('\\n');\n};\n\n/**\n * Esc\n */\n\n// ESC D Index (IND is 0x84).\nProgram.prototype.ind =\nProgram.prototype.index = function() {\n  this.y++;\n  this._ncoords();\n  if (this.tput) return this.put.ind();\n  return this._write('\\x1bD');\n};\n\n// ESC M Reverse Index (RI is 0x8d).\nProgram.prototype.ri =\nProgram.prototype.reverse =\nProgram.prototype.reverseIndex = function() {\n  this.y--;\n  this._ncoords();\n  if (this.tput) return this.put.ri();\n  return this._write('\\x1bM');\n};\n\n// ESC E Next Line (NEL is 0x85).\nProgram.prototype.nextLine = function() {\n  this.y++;\n  this.x = 0;\n  this._ncoords();\n  if (this.has('nel')) return this.put.nel();\n  return this._write('\\x1bE');\n};\n\n// ESC c Full Reset (RIS).\nProgram.prototype.reset = function() {\n  this.x = this.y = 0;\n  if (this.has('rs1') || this.has('ris')) {\n    return this.has('rs1')\n      ? this.put.rs1()\n      : this.put.ris();\n  }\n  return this._write('\\x1bc');\n};\n\n// ESC H Tab Set (HTS is 0x88).\nProgram.prototype.tabSet = function() {\n  if (this.tput) return this.put.hts();\n  return this._write('\\x1bH');\n};\n\n// ESC 7 Save Cursor (DECSC).\nProgram.prototype.sc =\nProgram.prototype.saveCursor = function(key) {\n  if (key) return this.lsaveCursor(key);\n  this.savedX = this.x || 0;\n  this.savedY = this.y || 0;\n  if (this.tput) return this.put.sc();\n  return this._write('\\x1b7');\n};\n\n// ESC 8 Restore Cursor (DECRC).\nProgram.prototype.rc =\nProgram.prototype.restoreCursor = function(key, hide) {\n  if (key) return this.lrestoreCursor(key, hide);\n  this.x = this.savedX || 0;\n  this.y = this.savedY || 0;\n  if (this.tput) return this.put.rc();\n  return this._write('\\x1b8');\n};\n\n// Save Cursor Locally\nProgram.prototype.lsaveCursor = function(key) {\n  key = key || 'local';\n  this._saved = this._saved || {};\n  this._saved[key] = this._saved[key] || {};\n  this._saved[key].x = this.x;\n  this._saved[key].y = this.y;\n  this._saved[key].hidden = this.cursorHidden;\n};\n\n// Restore Cursor Locally\nProgram.prototype.lrestoreCursor = function(key, hide) {\n  var pos;\n  key = key || 'local';\n  if (!this._saved || !this._saved[key]) return;\n  pos = this._saved[key];\n  //delete this._saved[key];\n  this.cup(pos.y, pos.x);\n  if (hide && pos.hidden !== this.cursorHidden) {\n    if (pos.hidden) {\n      this.hideCursor();\n    } else {\n      this.showCursor();\n    }\n  }\n};\n\n// ESC # 3 DEC line height/width\nProgram.prototype.lineHeight = function() {\n  return this._write('\\x1b#');\n};\n\n// ESC (,),*,+,-,. Designate G0-G2 Character Set.\nProgram.prototype.charset = function(val, level) {\n  level = level || 0;\n\n  // See also:\n  // acs_chars / acsc / ac\n  // enter_alt_charset_mode / smacs / as\n  // exit_alt_charset_mode / rmacs / ae\n  // enter_pc_charset_mode / smpch / S2\n  // exit_pc_charset_mode / rmpch / S3\n\n  switch (level) {\n    case 0:\n      level = '(';\n      break;\n    case 1:\n      level = ')';\n      break;\n    case 2:\n      level = '*';\n      break;\n    case 3:\n      level = '+';\n      break;\n  }\n\n  var name = typeof val === 'string'\n    ? val.toLowerCase()\n    : val;\n\n  switch (name) {\n    case 'acs':\n    case 'scld': // DEC Special Character and Line Drawing Set.\n      if (this.tput) return this.put.smacs();\n      val = '0';\n      break;\n    case 'uk': // UK\n      val = 'A';\n      break;\n    case 'us': // United States (USASCII).\n    case 'usascii':\n    case 'ascii':\n      if (this.tput) return this.put.rmacs();\n      val = 'B';\n      break;\n    case 'dutch': // Dutch\n      val = '4';\n      break;\n    case 'finnish': // Finnish\n      val = 'C';\n      val = '5';\n      break;\n    case 'french': // French\n      val = 'R';\n      break;\n    case 'frenchcanadian': // FrenchCanadian\n      val = 'Q';\n      break;\n    case 'german':  // German\n      val = 'K';\n      break;\n    case 'italian': // Italian\n      val = 'Y';\n      break;\n    case 'norwegiandanish': // NorwegianDanish\n      val = 'E';\n      val = '6';\n      break;\n    case 'spanish': // Spanish\n      val = 'Z';\n      break;\n    case 'swedish': // Swedish\n      val = 'H';\n      val = '7';\n      break;\n    case 'swiss': // Swiss\n      val = '=';\n      break;\n    case 'isolatin': // ISOLatin (actually /A)\n      val = '/A';\n      break;\n    default: // Default\n      if (this.tput) return this.put.rmacs();\n      val = 'B';\n      break;\n  }\n\n  return this._write('\\x1b(' + val);\n};\n\nProgram.prototype.enter_alt_charset_mode =\nProgram.prototype.as =\nProgram.prototype.smacs = function() {\n  return this.charset('acs');\n};\n\nProgram.prototype.exit_alt_charset_mode =\nProgram.prototype.ae =\nProgram.prototype.rmacs = function() {\n  return this.charset('ascii');\n};\n\n// ESC N\n// Single Shift Select of G2 Character Set\n// ( SS2 is 0x8e). This affects next character only.\n// ESC O\n// Single Shift Select of G3 Character Set\n// ( SS3 is 0x8f). This affects next character only.\n// ESC n\n// Invoke the G2 Character Set as GL (LS2).\n// ESC o\n// Invoke the G3 Character Set as GL (LS3).\n// ESC |\n// Invoke the G3 Character Set as GR (LS3R).\n// ESC }\n// Invoke the G2 Character Set as GR (LS2R).\n// ESC ~\n// Invoke the G1 Character Set as GR (LS1R).\nProgram.prototype.setG = function(val) {\n  // if (this.tput) return this.put.S2();\n  // if (this.tput) return this.put.S3();\n  switch (val) {\n    case 1:\n      val = '~'; // GR\n      break;\n    case 2:\n      val = 'n'; // GL\n      val = '}'; // GR\n      val = 'N'; // Next Char Only\n      break;\n    case 3:\n      val = 'o'; // GL\n      val = '|'; // GR\n      val = 'O'; // Next Char Only\n      break;\n  }\n  return this._write('\\x1b' + val);\n};\n\n/**\n * OSC\n */\n\n// OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Set Text Parameters.\nProgram.prototype.setTitle = function(title) {\n  this._title = title;\n\n  // if (this.term('screen')) {\n  //   // Tmux pane\n  //   // if (this.tmux) {\n  //   //   return this._write('\\x1b]2;' + title + '\\x1b\\\\');\n  //   // }\n  //   return this._write('\\x1bk' + title + '\\x1b\\\\');\n  // }\n\n  return this._twrite('\\x1b]0;' + title + '\\x07');\n};\n\n// OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Reset colors\nProgram.prototype.resetColors = function(param) {\n  if (this.has('Cr')) {\n    return this.put.Cr(param);\n  }\n  return this._twrite('\\x1b]112\\x07');\n  //return this._twrite('\\x1b]112;' + param + '\\x07');\n};\n\n// OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Change dynamic colors\nProgram.prototype.dynamicColors = function(param) {\n  if (this.has('Cs')) {\n    return this.put.Cs(param);\n  }\n  return this._twrite('\\x1b]12;' + param + '\\x07');\n};\n\n// OSC Ps ; Pt ST\n// OSC Ps ; Pt BEL\n//   Sel data\nProgram.prototype.selData = function(a, b) {\n  if (this.has('Ms')) {\n    return this.put.Ms(a, b);\n  }\n  return this._twrite('\\x1b]52;' + a + ';' + b + '\\x07');\n};\n\n/**\n * CSI\n */\n\n// CSI Ps A\n// Cursor Up Ps Times (default = 1) (CUU).\nProgram.prototype.cuu =\nProgram.prototype.up =\nProgram.prototype.cursorUp = function(param) {\n  this.y -= param || 1;\n  this._ncoords();\n  if (this.tput) {\n    if (!this.tput.strings.parm_up_cursor) {\n      return this._write(this.repeat(this.tput.cuu1(), param));\n    }\n    return this.put.cuu(param);\n  }\n  return this._write('\\x1b[' + (param || '') + 'A');\n};\n\n// CSI Ps B\n// Cursor Down Ps Times (default = 1) (CUD).\nProgram.prototype.cud =\nProgram.prototype.down =\nProgram.prototype.cursorDown = function(param) {\n  this.y += param || 1;\n  this._ncoords();\n  if (this.tput) {\n    if (!this.tput.strings.parm_down_cursor) {\n      return this._write(this.repeat(this.tput.cud1(), param));\n    }\n    return this.put.cud(param);\n  }\n  return this._write('\\x1b[' + (param || '') + 'B');\n};\n\n// CSI Ps C\n// Cursor Forward Ps Times (default = 1) (CUF).\nProgram.prototype.cuf =\nProgram.prototype.right =\nProgram.prototype.forward =\nProgram.prototype.cursorForward = function(param) {\n  this.x += param || 1;\n  this._ncoords();\n  if (this.tput) {\n    if (!this.tput.strings.parm_right_cursor) {\n      return this._write(this.repeat(this.tput.cuf1(), param));\n    }\n    return this.put.cuf(param);\n  }\n  return this._write('\\x1b[' + (param || '') + 'C');\n};\n\n// CSI Ps D\n// Cursor Backward Ps Times (default = 1) (CUB).\nProgram.prototype.cub =\nProgram.prototype.left =\nProgram.prototype.back =\nProgram.prototype.cursorBackward = function(param) {\n  this.x -= param || 1;\n  this._ncoords();\n  if (this.tput) {\n    if (!this.tput.strings.parm_left_cursor) {\n      return this._write(this.repeat(this.tput.cub1(), param));\n    }\n    return this.put.cub(param);\n  }\n  return this._write('\\x1b[' + (param || '') + 'D');\n};\n\n// CSI Ps ; Ps H\n// Cursor Position [row;column] (default = [1,1]) (CUP).\nProgram.prototype.cup =\nProgram.prototype.pos =\nProgram.prototype.cursorPos = function(row, col) {\n  if (!this.zero) {\n    row = (row || 1) - 1;\n    col = (col || 1) - 1;\n  } else {\n    row = row || 0;\n    col = col || 0;\n  }\n  this.x = col;\n  this.y = row;\n  this._ncoords();\n  if (this.tput) return this.put.cup(row, col);\n  return this._write('\\x1b[' + (row + 1) + ';' + (col + 1) + 'H');\n};\n\n// CSI Ps J  Erase in Display (ED).\n//     Ps = 0  -> Erase Below (default).\n//     Ps = 1  -> Erase Above.\n//     Ps = 2  -> Erase All.\n//     Ps = 3  -> Erase Saved Lines (xterm).\n// CSI ? Ps J\n//   Erase in Display (DECSED).\n//     Ps = 0  -> Selective Erase Below (default).\n//     Ps = 1  -> Selective Erase Above.\n//     Ps = 2  -> Selective Erase All.\nProgram.prototype.ed =\nProgram.prototype.eraseInDisplay = function(param) {\n  if (this.tput) {\n    switch (param) {\n      case 'above':\n        param = 1;\n        break;\n      case 'all':\n        param = 2;\n        break;\n      case 'saved':\n        param = 3;\n        break;\n      case 'below':\n      default:\n        param = 0;\n        break;\n    }\n    // extended tput.E3 = ^[[3;J\n    return this.put.ed(param);\n  }\n  switch (param) {\n    case 'above':\n      return this._write('\\X1b[1J');\n    case 'all':\n      return this._write('\\x1b[2J');\n    case 'saved':\n      return this._write('\\x1b[3J');\n    case 'below':\n    default:\n      return this._write('\\x1b[J');\n  }\n};\n\nProgram.prototype.clear = function() {\n  this.x = 0;\n  this.y = 0;\n  if (this.tput) return this.put.clear();\n  return this._write('\\x1b[H\\x1b[J');\n};\n\n// CSI Ps K  Erase in Line (EL).\n//     Ps = 0  -> Erase to Right (default).\n//     Ps = 1  -> Erase to Left.\n//     Ps = 2  -> Erase All.\n// CSI ? Ps K\n//   Erase in Line (DECSEL).\n//     Ps = 0  -> Selective Erase to Right (default).\n//     Ps = 1  -> Selective Erase to Left.\n//     Ps = 2  -> Selective Erase All.\nProgram.prototype.el =\nProgram.prototype.eraseInLine = function(param) {\n  if (this.tput) {\n    //if (this.tput.back_color_erase) ...\n    switch (param) {\n      case 'left':\n        param = 1;\n        break;\n      case 'all':\n        param = 2;\n        break;\n      case 'right':\n      default:\n        param = 0;\n        break;\n    }\n    return this.put.el(param);\n  }\n  switch (param) {\n    case 'left':\n      return this._write('\\x1b[1K');\n    case 'all':\n      return this._write('\\x1b[2K');\n    case 'right':\n    default:\n      return this._write('\\x1b[K');\n  }\n};\n\n// CSI Pm m  Character Attributes (SGR).\n//     Ps = 0  -> Normal (default).\n//     Ps = 1  -> Bold.\n//     Ps = 4  -> Underlined.\n//     Ps = 5  -> Blink (appears as Bold).\n//     Ps = 7  -> Inverse.\n//     Ps = 8  -> Invisible, i.e., hidden (VT300).\n//     Ps = 2 2  -> Normal (neither bold nor faint).\n//     Ps = 2 4  -> Not underlined.\n//     Ps = 2 5  -> Steady (not blinking).\n//     Ps = 2 7  -> Positive (not inverse).\n//     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n//     Ps = 3 0  -> Set foreground color to Black.\n//     Ps = 3 1  -> Set foreground color to Red.\n//     Ps = 3 2  -> Set foreground color to Green.\n//     Ps = 3 3  -> Set foreground color to Yellow.\n//     Ps = 3 4  -> Set foreground color to Blue.\n//     Ps = 3 5  -> Set foreground color to Magenta.\n//     Ps = 3 6  -> Set foreground color to Cyan.\n//     Ps = 3 7  -> Set foreground color to White.\n//     Ps = 3 9  -> Set foreground color to default (original).\n//     Ps = 4 0  -> Set background color to Black.\n//     Ps = 4 1  -> Set background color to Red.\n//     Ps = 4 2  -> Set background color to Green.\n//     Ps = 4 3  -> Set background color to Yellow.\n//     Ps = 4 4  -> Set background color to Blue.\n//     Ps = 4 5  -> Set background color to Magenta.\n//     Ps = 4 6  -> Set background color to Cyan.\n//     Ps = 4 7  -> Set background color to White.\n//     Ps = 4 9  -> Set background color to default (original).\n\n//   If 16-color support is compiled, the following apply.  Assume\n//   that xterm's resources are set so that the ISO color codes are\n//   the first 8 of a set of 16.  Then the aixterm colors are the\n//   bright versions of the ISO colors:\n//     Ps = 9 0  -> Set foreground color to Black.\n//     Ps = 9 1  -> Set foreground color to Red.\n//     Ps = 9 2  -> Set foreground color to Green.\n//     Ps = 9 3  -> Set foreground color to Yellow.\n//     Ps = 9 4  -> Set foreground color to Blue.\n//     Ps = 9 5  -> Set foreground color to Magenta.\n//     Ps = 9 6  -> Set foreground color to Cyan.\n//     Ps = 9 7  -> Set foreground color to White.\n//     Ps = 1 0 0  -> Set background color to Black.\n//     Ps = 1 0 1  -> Set background color to Red.\n//     Ps = 1 0 2  -> Set background color to Green.\n//     Ps = 1 0 3  -> Set background color to Yellow.\n//     Ps = 1 0 4  -> Set background color to Blue.\n//     Ps = 1 0 5  -> Set background color to Magenta.\n//     Ps = 1 0 6  -> Set background color to Cyan.\n//     Ps = 1 0 7  -> Set background color to White.\n\n//   If xterm is compiled with the 16-color support disabled, it\n//   supports the following, from rxvt:\n//     Ps = 1 0 0  -> Set foreground and background color to\n//     default.\n\n//   If 88- or 256-color support is compiled, the following apply.\n//     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n//     Ps.\n//     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n//     Ps.\nProgram.prototype.sgr =\nProgram.prototype.attr =\nProgram.prototype.charAttributes = function(param, val) {\n  return this._write(this._attr(param, val));\n};\n\nProgram.prototype.text = function(text, attr) {\n  return this._attr(attr, true) + text + this._attr(attr, false);\n};\n\n// NOTE: sun-color may not allow multiple params for SGR.\nProgram.prototype._attr = function(param, val) {\n  var self = this\n    , parts\n    , color\n    , m;\n\n  if (Array.isArray(param)) {\n    parts = param;\n    param = parts[0] || 'normal';\n  } else {\n    param = param || 'normal';\n    parts = param.split(/\\s*[,;]\\s*/);\n  }\n\n  if (parts.length > 1) {\n    var used = {}\n      , out = [];\n\n    parts.forEach(function(part) {\n      part = self._attr(part, val).slice(2, -1);\n      if (part === '') return;\n      if (used[part]) return;\n      used[part] = true;\n      out.push(part);\n    });\n\n    return '\\x1b[' + out.join(';') + 'm';\n  }\n\n  if (param.indexOf('no ') === 0) {\n    param = param.substring(3);\n    val = false;\n  } else if (param.indexOf('!') === 0) {\n    param = param.substring(1);\n    val = false;\n  }\n\n  switch (param) {\n    // attributes\n    case 'normal':\n    case 'default':\n      if (val === false) return '';\n      return '\\x1b[m';\n    case 'bold':\n      return val === false\n        ? '\\x1b[22m'\n        : '\\x1b[1m';\n    case 'ul':\n    case 'underline':\n    case 'underlined':\n      return val === false\n        ? '\\x1b[24m'\n        : '\\x1b[4m';\n    case 'blink':\n      return val === false\n        ? '\\x1b[25m'\n        : '\\x1b[5m';\n    case 'inverse':\n      return val === false\n        ? '\\x1b[27m'\n        : '\\x1b[7m';\n    case 'invisible':\n      return val === false\n        ? '\\x1b[28m'\n        : '\\x1b[8m';\n\n    // 8-color foreground\n    case 'black fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[30m';\n    case 'red fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[31m';\n    case 'green fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[32m';\n    case 'yellow fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[33m';\n    case 'blue fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[34m';\n    case 'magenta fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[35m';\n    case 'cyan fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[36m';\n    case 'white fg':\n    case 'light grey fg':\n    case 'light gray fg':\n    case 'bright grey fg':\n    case 'bright gray fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[37m';\n    case 'default fg':\n      if (val === false) return '';\n      return '\\x1b[39m';\n\n    // 8-color background\n    case 'black bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[40m';\n    case 'red bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[41m';\n    case 'green bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[42m';\n    case 'yellow bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[43m';\n    case 'blue bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[44m';\n    case 'magenta bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[45m';\n    case 'cyan bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[46m';\n    case 'white bg':\n    case 'light grey bg':\n    case 'light gray bg':\n    case 'bright grey bg':\n    case 'bright gray bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[47m';\n    case 'default bg':\n      if (val === false) return '';\n      return '\\x1b[49m';\n\n    // 16-color foreground\n    case 'light black fg':\n    case 'bright black fg':\n    case 'grey fg':\n    case 'gray fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[90m';\n    case 'light red fg':\n    case 'bright red fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[91m';\n    case 'light green fg':\n    case 'bright green fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[92m';\n    case 'light yellow fg':\n    case 'bright yellow fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[93m';\n    case 'light blue fg':\n    case 'bright blue fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[94m';\n    case 'light magenta fg':\n    case 'bright magenta fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[95m';\n    case 'light cyan fg':\n    case 'bright cyan fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[96m';\n    case 'light white fg':\n    case 'bright white fg':\n      return val === false\n        ? '\\x1b[39m'\n        : '\\x1b[97m';\n\n    // 16-color background\n    case 'light black bg':\n    case 'bright black bg':\n    case 'grey bg':\n    case 'gray bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[100m';\n    case 'light red bg':\n    case 'bright red bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[101m';\n    case 'light green bg':\n    case 'bright green bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[102m';\n    case 'light yellow bg':\n    case 'bright yellow bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[103m';\n    case 'light blue bg':\n    case 'bright blue bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[104m';\n    case 'light magenta bg':\n    case 'bright magenta bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[105m';\n    case 'light cyan bg':\n    case 'bright cyan bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[106m';\n    case 'light white bg':\n    case 'bright white bg':\n      return val === false\n        ? '\\x1b[49m'\n        : '\\x1b[107m';\n\n    // non-16-color rxvt default fg and bg\n    case 'default fg bg':\n      if (val === false) return '';\n      return this.term('rxvt')\n        ? '\\x1b[100m'\n        : '\\x1b[39;49m';\n\n    default:\n      // 256-color fg and bg\n      if (param[0] === '#') {\n        param = param.replace(/#(?:[0-9a-f]{3}){1,2}/i, colors.match);\n      }\n\n      m = /^(-?\\d+) (fg|bg)$/.exec(param);\n      if (m) {\n        color = +m[1];\n\n        if (val === false || color === -1) {\n          return this._attr('default ' + m[2]);\n        }\n\n        color = colors.reduce(color, this.tput.colors);\n\n        if (color < 16 || (this.tput && this.tput.colors <= 16)) {\n          if (m[2] === 'fg') {\n            if (color < 8) {\n              color += 30;\n            } else if (color < 16) {\n              color -= 8;\n              color += 90;\n            }\n          } else if (m[2] === 'bg') {\n            if (color < 8) {\n              color += 40;\n            } else if (color < 16) {\n              color -= 8;\n              color += 100;\n            }\n          }\n          return '\\x1b[' + color + 'm';\n        }\n\n        if (m[2] === 'fg') {\n          return '\\x1b[38;5;' + color + 'm';\n        }\n\n        if (m[2] === 'bg') {\n          return '\\x1b[48;5;' + color + 'm';\n        }\n      }\n\n      if (/^[\\d;]*$/.test(param)) {\n        return '\\x1b[' + param + 'm';\n      }\n\n      return null;\n  }\n};\n\nProgram.prototype.fg =\nProgram.prototype.setForeground = function(color, val) {\n  color = color.split(/\\s*[,;]\\s*/).join(' fg, ') + ' fg';\n  return this.attr(color, val);\n};\n\nProgram.prototype.bg =\nProgram.prototype.setBackground = function(color, val) {\n  color = color.split(/\\s*[,;]\\s*/).join(' bg, ') + ' bg';\n  return this.attr(color, val);\n};\n\n// CSI Ps n  Device Status Report (DSR).\n//     Ps = 5  -> Status Report.  Result (``OK'') is\n//   CSI 0 n\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n//   Result is\n//   CSI r ; c R\n// CSI ? Ps n\n//   Device Status Report (DSR, DEC-specific).\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n//     ? r ; c R (assumes page is zero).\n//     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n//     or CSI ? 1 1  n  (not ready).\n//     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n//     or CSI ? 2 1  n  (locked).\n//     Ps = 2 6  -> Report Keyboard status as\n//   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n//   The last two parameters apply to VT400 & up, and denote key-\n//   board ready and LK01 respectively.\n//     Ps = 5 3  -> Report Locator status as\n//   CSI ? 5 3  n  Locator available, if compiled-in, or\n//   CSI ? 5 0  n  No Locator, if not.\nProgram.prototype.dsr =\nProgram.prototype.deviceStatus = function(param, callback, dec, noBypass) {\n  if (dec) {\n    return this.response('device-status',\n      '\\x1b[?' + (param || '0') + 'n', callback, noBypass);\n  }\n  return this.response('device-status',\n    '\\x1b[' + (param || '0') + 'n', callback, noBypass);\n};\n\nProgram.prototype.getCursor = function(callback) {\n  return this.deviceStatus(6, callback, false, true);\n};\n\nProgram.prototype.saveReportedCursor = function(callback) {\n  var self = this;\n  if (this.tput.strings.user7 === '\\x1b[6n' || this.term('screen')) {\n    return this.getCursor(function(err, data) {\n      if (data) {\n        self._rx = data.status.x;\n        self._ry = data.status.y;\n      }\n      if (!callback) return;\n      return callback(err);\n    });\n  }\n  if (!callback) return;\n  return callback();\n};\n\nProgram.prototype.restoreReportedCursor = function() {\n  if (this._rx == null) return;\n  return this.cup(this._ry, this._rx);\n  // return this.nel();\n};\n\n/**\n * Additions\n */\n\n// CSI Ps @\n// Insert Ps (Blank) Character(s) (default = 1) (ICH).\nProgram.prototype.ich =\nProgram.prototype.insertChars = function(param) {\n  this.x += param || 1;\n  this._ncoords();\n  if (this.tput) return this.put.ich(param);\n  return this._write('\\x1b[' + (param || 1) + '@');\n};\n\n// CSI Ps E\n// Cursor Next Line Ps Times (default = 1) (CNL).\n// same as CSI Ps B ?\nProgram.prototype.cnl =\nProgram.prototype.cursorNextLine = function(param) {\n  this.y += param || 1;\n  this._ncoords();\n  return this._write('\\x1b[' + (param || '') + 'E');\n};\n\n// CSI Ps F\n// Cursor Preceding Line Ps Times (default = 1) (CNL).\n// reuse CSI Ps A ?\nProgram.prototype.cpl =\nProgram.prototype.cursorPrecedingLine = function(param) {\n  this.y -= param || 1;\n  this._ncoords();\n  return this._write('\\x1b[' + (param || '') + 'F');\n};\n\n// CSI Ps G\n// Cursor Character Absolute  [column] (default = [row,1]) (CHA).\nProgram.prototype.cha =\nProgram.prototype.cursorCharAbsolute = function(param) {\n  if (!this.zero) {\n    param = (param || 1) - 1;\n  } else {\n    param = param || 0;\n  }\n  this.x = param;\n  this.y = 0;\n  this._ncoords();\n  if (this.tput) return this.put.hpa(param);\n  return this._write('\\x1b[' + (param + 1) + 'G');\n};\n\n// CSI Ps L\n// Insert Ps Line(s) (default = 1) (IL).\nProgram.prototype.il =\nProgram.prototype.insertLines = function(param) {\n  if (this.tput) return this.put.il(param);\n  return this._write('\\x1b[' + (param || '') + 'L');\n};\n\n// CSI Ps M\n// Delete Ps Line(s) (default = 1) (DL).\nProgram.prototype.dl =\nProgram.prototype.deleteLines = function(param) {\n  if (this.tput) return this.put.dl(param);\n  return this._write('\\x1b[' + (param || '') + 'M');\n};\n\n// CSI Ps P\n// Delete Ps Character(s) (default = 1) (DCH).\nProgram.prototype.dch =\nProgram.prototype.deleteChars = function(param) {\n  if (this.tput) return this.put.dch(param);\n  return this._write('\\x1b[' + (param || '') + 'P');\n};\n\n// CSI Ps X\n// Erase Ps Character(s) (default = 1) (ECH).\nProgram.prototype.ech =\nProgram.prototype.eraseChars = function(param) {\n  if (this.tput) return this.put.ech(param);\n  return this._write('\\x1b[' + (param || '') + 'X');\n};\n\n// CSI Pm `  Character Position Absolute\n//   [column] (default = [row,1]) (HPA).\nProgram.prototype.hpa =\nProgram.prototype.charPosAbsolute = function(param) {\n  this.x = param || 0;\n  this._ncoords();\n  if (this.tput) {\n    return this.put.hpa.apply(this.put, arguments);\n  }\n  param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + '`');\n};\n\n// 141 61 a * HPR -\n// Horizontal Position Relative\n// reuse CSI Ps C ?\nProgram.prototype.hpr =\nProgram.prototype.HPositionRelative = function(param) {\n  if (this.tput) return this.cuf(param);\n  this.x += param || 1;\n  this._ncoords();\n  // Does not exist:\n  // if (this.tput) return this.put.hpr(param);\n  return this._write('\\x1b[' + (param || '') + 'a');\n};\n\n// CSI Ps c  Send Device Attributes (Primary DA).\n//     Ps = 0  or omitted -> request attributes from terminal.  The\n//     response depends on the decTerminalID resource setting.\n//     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n//     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n//     -> CSI ? 6 c  (``VT102'')\n//     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n//   The VT100-style response parameters do not mean anything by\n//   themselves.  VT220 parameters do, telling the host what fea-\n//   tures the terminal supports:\n//     Ps = 1  -> 132-columns.\n//     Ps = 2  -> Printer.\n//     Ps = 6  -> Selective erase.\n//     Ps = 8  -> User-defined keys.\n//     Ps = 9  -> National replacement character sets.\n//     Ps = 1 5  -> Technical characters.\n//     Ps = 2 2  -> ANSI color, e.g., VT525.\n//     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n// CSI > Ps c\n//   Send Device Attributes (Secondary DA).\n//     Ps = 0  or omitted -> request the terminal's identification\n//     code.  The response depends on the decTerminalID resource set-\n//     ting.  It should apply only to VT220 and up, but xterm extends\n//     this to VT100.\n//     -> CSI  > Pp ; Pv ; Pc c\n//   where Pp denotes the terminal type\n//     Pp = 0  -> ``VT100''.\n//     Pp = 1  -> ``VT220''.\n//   and Pv is the firmware version (for xterm, this was originally\n//   the XFree86 patch number, starting with 95).  In a DEC termi-\n//   nal, Pc indicates the ROM cartridge registration number and is\n//   always zero.\n// More information:\n//   xterm/charproc.c - line 2012, for more information.\n//   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\nProgram.prototype.da =\nProgram.prototype.sendDeviceAttributes = function(param, callback) {\n  return this.response('device-attributes',\n    '\\x1b[' + (param || '') + 'c', callback);\n};\n\n// CSI Pm d\n// Line Position Absolute  [row] (default = [1,column]) (VPA).\n// NOTE: Can't find in terminfo, no idea why it has multiple params.\nProgram.prototype.vpa =\nProgram.prototype.linePosAbsolute = function(param) {\n  this.y = param || 1;\n  this._ncoords();\n  if (this.tput) {\n    return this.put.vpa.apply(this.put, arguments);\n  }\n  param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + 'd');\n};\n\n// 145 65 e * VPR - Vertical Position Relative\n// reuse CSI Ps B ?\nProgram.prototype.vpr =\nProgram.prototype.VPositionRelative = function(param) {\n  if (this.tput) return this.cud(param);\n  this.y += param || 1;\n  this._ncoords();\n  // Does not exist:\n  // if (this.tput) return this.put.vpr(param);\n  return this._write('\\x1b[' + (param || '') + 'e');\n};\n\n// CSI Ps ; Ps f\n//   Horizontal and Vertical Position [row;column] (default =\n//   [1,1]) (HVP).\nProgram.prototype.hvp =\nProgram.prototype.HVPosition = function(row, col) {\n  if (!this.zero) {\n    row = (row || 1) - 1;\n    col = (col || 1) - 1;\n  } else {\n    row = row || 0;\n    col = col || 0;\n  }\n  this.y = row;\n  this.x = col;\n  this._ncoords();\n  // Does not exist (?):\n  // if (this.tput) return this.put.hvp(row, col);\n  if (this.tput) return this.put.cup(row, col);\n  return this._write('\\x1b[' + (row + 1) + ';' + (col + 1) + 'f');\n};\n\n// CSI Pm h  Set Mode (SM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Insert Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Automatic Newline (LNM).\n// CSI ? Pm h\n//   DEC Private Mode Set (DECSET).\n//     Ps = 1  -> Application Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate USASCII for character sets G0-G3\n//     (DECANM), and set VT100 mode.\n//     Ps = 3  -> 132 Column Mode (DECCOLM).\n//     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n//     Ps = 5  -> Reverse Video (DECSCNM).\n//     Ps = 6  -> Origin Mode (DECOM).\n//     Ps = 7  -> Wraparound Mode (DECAWM).\n//     Ps = 8  -> Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n//     tion Mouse Tracking.\n//     Ps = 1 0  -> Show toolbar (rxvt).\n//     Ps = 1 2  -> Start Blinking Cursor (att610).\n//     Ps = 1 8  -> Print form feed (DECPFF).\n//     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n//     Ps = 2 5  -> Show Cursor (DECTCEM).\n//     Ps = 3 0  -> Show scrollbar (rxvt).\n//     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n//     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n//     Ps = 4 0  -> Allow 80 -> 132 Mode.\n//     Ps = 4 1  -> more(1) fix (see curses resource).\n//     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n//     RCM).\n//     Ps = 4 4  -> Turn On Margin Bell.\n//     Ps = 4 5  -> Reverse-wraparound Mode.\n//     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n//     compile-time option.\n//     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 6 6  -> Application keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n//     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n//     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n//     (enables the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n//     Lock keys.  (This enables the numLock resource).\n//     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n//     enables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n//     key.\n//     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n//     enables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n//     (This enables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n//     Control-G is received.  (This enables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n//     is received.  (enables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n//     Screen Buffer, clearing it first.  (This may be disabled by\n//     the titeInhibit resource).  This combines the effects of the 1\n//     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n//     applications rather than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Set Sun function-key mode.\n//     Ps = 1 0 5 2  -> Set HP function-key mode.\n//     Ps = 1 0 5 3  -> Set SCO function-key mode.\n//     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n//     Ps = 2 0 0 4  -> Set bracketed paste mode.\n// Modes:\n//   http://vt100.net/docs/vt220-rm/chapter4.html\nProgram.prototype.sm =\nProgram.prototype.setMode = function() {\n  var param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + 'h');\n};\n\nProgram.prototype.decset = function() {\n  var param = slice.call(arguments).join(';');\n  return this.setMode('?' + param);\n};\n\nProgram.prototype.dectcem =\nProgram.prototype.cnorm =\nProgram.prototype.cvvis =\nProgram.prototype.showCursor = function() {\n  this.cursorHidden = false;\n  // NOTE: In xterm terminfo:\n  // cnorm stops blinking cursor\n  // cvvis starts blinking cursor\n  if (this.tput) return this.put.cnorm();\n  //if (this.tput) return this.put.cvvis();\n  // return this._write('\\x1b[?12l\\x1b[?25h'); // cursor_normal\n  // return this._write('\\x1b[?12;25h'); // cursor_visible\n  return this.setMode('?25');\n};\n\nProgram.prototype.alternate =\nProgram.prototype.smcup =\nProgram.prototype.alternateBuffer = function() {\n  this.isAlt = true;\n  if (this.tput) return this.put.smcup();\n  if (this.term('vt') || this.term('linux')) return;\n  this.setMode('?47');\n  return this.setMode('?1049');\n};\n\n// CSI Pm l  Reset Mode (RM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Replace Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Normal Linefeed (LNM).\n// CSI ? Pm l\n//   DEC Private Mode Reset (DECRST).\n//     Ps = 1  -> Normal Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate VT52 mode (DECANM).\n//     Ps = 3  -> 80 Column Mode (DECCOLM).\n//     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n//     Ps = 5  -> Normal Video (DECSCNM).\n//     Ps = 6  -> Normal Cursor Mode (DECOM).\n//     Ps = 7  -> No Wraparound Mode (DECAWM).\n//     Ps = 8  -> No Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Don't send Mouse X & Y on button press.\n//     Ps = 1 0  -> Hide toolbar (rxvt).\n//     Ps = 1 2  -> Stop Blinking Cursor (att610).\n//     Ps = 1 8  -> Don't print form feed (DECPFF).\n//     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n//     Ps = 2 5  -> Hide Cursor (DECTCEM).\n//     Ps = 3 0  -> Don't show scrollbar (rxvt).\n//     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n//     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n//     Ps = 4 1  -> No more(1) fix (see curses resource).\n//     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n//     NRCM).\n//     Ps = 4 4  -> Turn Off Margin Bell.\n//     Ps = 4 5  -> No Reverse-wraparound Mode.\n//     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n//     compile-time option).\n//     Ps = 4 7  -> Use Normal Screen Buffer.\n//     Ps = 6 6  -> Numeric keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n//     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n//     (rxvt).\n//     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n//     the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n//     Lock keys.  (This disables the numLock resource).\n//     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n//     (This disables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n//     Delete key.\n//     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n//     (This disables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n//     (This disables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n//     Control-G is received.  (This disables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n//     G is received.  (This disables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n//     first if in the Alternate Screen.  (This may be disabled by\n//     the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n//     as in DECRC.  (This may be disabled by the titeInhibit\n//     resource).  This combines the effects of the 1 0 4 7  and 1 0\n//     4 8  modes.  Use this with terminfo-based applications rather\n//     than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n//     Ps = 1 0 5 2  -> Reset HP function-key mode.\n//     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n//     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n//     Ps = 2 0 0 4  -> Reset bracketed paste mode.\nProgram.prototype.rm =\nProgram.prototype.resetMode = function() {\n  var param = slice.call(arguments).join(';');\n  return this._write('\\x1b[' + (param || '') + 'l');\n};\n\nProgram.prototype.decrst = function() {\n  var param = slice.call(arguments).join(';');\n  return this.resetMode('?' + param);\n};\n\nProgram.prototype.dectcemh =\nProgram.prototype.cursor_invisible =\nProgram.prototype.vi =\nProgram.prototype.civis =\nProgram.prototype.hideCursor = function() {\n  this.cursorHidden = true;\n  if (this.tput) return this.put.civis();\n  return this.resetMode('?25');\n};\n\nProgram.prototype.rmcup =\nProgram.prototype.normalBuffer = function() {\n  this.isAlt = false;\n  if (this.tput) return this.put.rmcup();\n  this.resetMode('?47');\n  return this.resetMode('?1049');\n};\n\nProgram.prototype.enableMouse = function() {\n  if (process.env.BLESSED_FORCE_MODES) {\n    var modes = process.env.BLESSED_FORCE_MODES.split(',');\n    var options = {};\n    for (var n = 0; n < modes.length; ++n) {\n      var pair = modes[n].split('=');\n      var v = pair[1] !== '0';\n      switch (pair[0].toUpperCase()) {\n        case 'SGRMOUSE':\n          options.sgrMouse = v;\n          break;\n        case 'UTFMOUSE':\n          options.utfMouse = v;\n          break;\n        case 'VT200MOUSE':\n          options.vt200Mouse = v;\n          break;\n        case 'URXVTMOUSE':\n          options.urxvtMouse = v;\n          break;\n        case 'X10MOUSE':\n          options.x10Mouse = v;\n          break;\n        case 'DECMOUSE':\n          options.decMouse = v;\n          break;\n        case 'PTERMMOUSE':\n          options.ptermMouse = v;\n          break;\n        case 'JSBTERMMOUSE':\n          options.jsbtermMouse = v;\n          break;\n        case 'VT200HILITE':\n          options.vt200Hilite = v;\n          break;\n        case 'GPMMOUSE':\n          options.gpmMouse = v;\n          break;\n        case 'CELLMOTION':\n          options.cellMotion = v;\n          break;\n        case 'ALLMOTION':\n          options.allMotion = v;\n          break;\n        case 'SENDFOCUS':\n          options.sendFocus = v;\n          break;\n      }\n    }\n    return this.setMouse(options, true);\n  }\n\n  // NOTE:\n  // Cell Motion isn't normally need for anything below here, but we'll\n  // activate it for tmux (whether using it or not) in case our all-motion\n  // passthrough does not work. It can't hurt.\n\n  if (this.term('rxvt-unicode')) {\n    return this.setMouse({\n      urxvtMouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  }\n\n  // rxvt does not support the X10 UTF extensions\n  if (this.term('rxvt')) {\n    return this.setMouse({\n      vt200Mouse: true,\n      x10Mouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  }\n\n  // libvte is broken. Older versions do not support the\n  // X10 UTF extension. However, later versions do support\n  // SGR/URXVT.\n  if (this.isVTE) {\n    return this.setMouse({\n      // NOTE: Could also use urxvtMouse here.\n      sgrMouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  }\n\n  if (this.term('linux')) {\n    return this.setMouse({\n      vt200Mouse: true,\n      gpmMouse: true\n    }, true);\n  }\n\n  if (this.term('xterm')\n      || this.term('screen')\n      || (this.tput && this.tput.strings.key_mouse)) {\n    return this.setMouse({\n      vt200Mouse: true,\n      utfMouse: true,\n      cellMotion: true,\n      allMotion: true\n    }, true);\n  }\n};\n\nProgram.prototype.disableMouse = function() {\n  if (!this._currentMouse) return;\n\n  var obj = {};\n\n  Object.keys(this._currentMouse).forEach(function(key) {\n    obj[key] = false;\n  });\n\n  return this.setMouse(obj, false);\n};\n\n// Set Mouse\nProgram.prototype.setMouse = function(opt, enable) {\n  if (opt.normalMouse != null) {\n    opt.vt200Mouse = opt.normalMouse;\n    opt.allMotion = opt.normalMouse;\n  }\n\n  if (opt.hiliteTracking != null) {\n    opt.vt200Hilite = opt.hiliteTracking;\n  }\n\n  if (enable === true) {\n    if (this._currentMouse) {\n      this.setMouse(opt);\n      Object.keys(opt).forEach(function(key) {\n        this._currentMouse[key] = opt[key];\n      }, this);\n      return;\n    }\n    this._currentMouse = opt;\n    this.mouseEnabled = true;\n  } else if (enable === false) {\n    delete this._currentMouse;\n    this.mouseEnabled = false;\n  }\n\n  //     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n  //     tion Mouse Tracking.\n  //     Ps = 9  -> Don't send Mouse X & Y on button press.\n  // x10 mouse\n  if (opt.x10Mouse != null) {\n    if (opt.x10Mouse) this.setMode('?9');\n    else this.resetMode('?9');\n  }\n\n  //     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n  //     release.  See the section Mouse Tracking.\n  //     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n  //     release.  See the section Mouse Tracking.\n  // vt200 mouse\n  if (opt.vt200Mouse != null) {\n    if (opt.vt200Mouse) this.setMode('?1000');\n    else this.resetMode('?1000');\n  }\n\n  //     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n  //     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n  if (opt.vt200Hilite != null) {\n    if (opt.vt200Hilite) this.setMode('?1001');\n    else this.resetMode('?1001');\n  }\n\n  //     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n  //     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n  // button event mouse\n  if (opt.cellMotion != null) {\n    if (opt.cellMotion) this.setMode('?1002');\n    else this.resetMode('?1002');\n  }\n\n  //     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n  //     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n  // any event mouse\n  if (opt.allMotion != null) {\n    // NOTE: Latest versions of tmux seem to only support cellMotion (not\n    // allMotion). We pass all motion through to the terminal.\n    if (this.tmux && this.tmuxVersion >= 2) {\n      if (opt.allMotion) this._twrite('\\x1b[?1003h');\n      else this._twrite('\\x1b[?1003l');\n    } else {\n      if (opt.allMotion) this.setMode('?1003');\n      else this.resetMode('?1003');\n    }\n  }\n\n  //     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n  //     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n  if (opt.sendFocus != null) {\n    if (opt.sendFocus) this.setMode('?1004');\n    else this.resetMode('?1004');\n  }\n\n  //     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n  //     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n  if (opt.utfMouse != null) {\n    if (opt.utfMouse) this.setMode('?1005');\n    else this.resetMode('?1005');\n  }\n\n  // sgr mouse\n  if (opt.sgrMouse != null) {\n    if (opt.sgrMouse) this.setMode('?1006');\n    else this.resetMode('?1006');\n  }\n\n  // urxvt mouse\n  if (opt.urxvtMouse != null) {\n    if (opt.urxvtMouse) this.setMode('?1015');\n    else this.resetMode('?1015');\n  }\n\n  // dec mouse\n  if (opt.decMouse != null) {\n    if (opt.decMouse) this._write('\\x1b[1;2\\'z\\x1b[1;3\\'{');\n    else this._write('\\x1b[\\'z');\n  }\n\n  // pterm mouse\n  if (opt.ptermMouse != null) {\n    if (opt.ptermMouse) this._write('\\x1b[>1h\\x1b[>6h\\x1b[>7h\\x1b[>1h\\x1b[>9l');\n    else this._write('\\x1b[>1l\\x1b[>6l\\x1b[>7l\\x1b[>1l\\x1b[>9h');\n  }\n\n  // jsbterm mouse\n  if (opt.jsbtermMouse != null) {\n    // + = advanced mode\n    if (opt.jsbtermMouse) this._write('\\x1b[0~ZwLMRK+1Q\\x1b\\\\');\n    else this._write('\\x1b[0~ZwQ\\x1b\\\\');\n  }\n\n  // gpm mouse\n  if (opt.gpmMouse != null) {\n    if (opt.gpmMouse) this.enableGpm();\n    else this.disableGpm();\n  }\n};\n\n// CSI Ps ; Ps r\n//   Set Scrolling Region [top;bottom] (default = full size of win-\n//   dow) (DECSTBM).\n// CSI ? Pm r\nProgram.prototype.decstbm =\nProgram.prototype.csr =\nProgram.prototype.setScrollRegion = function(top, bottom) {\n  if (!this.zero) {\n    top = (top || 1) - 1;\n    bottom = (bottom || this.rows) - 1;\n  } else {\n    top = top || 0;\n    bottom = bottom || (this.rows - 1);\n  }\n  this.scrollTop = top;\n  this.scrollBottom = bottom;\n  this.x = 0;\n  this.y = 0;\n  this._ncoords();\n  if (this.tput) return this.put.csr(top, bottom);\n  return this._write('\\x1b[' + (top + 1) + ';' + (bottom + 1) + 'r');\n};\n\n// CSI s\n//   Save cursor (ANSI.SYS).\nProgram.prototype.scA =\nProgram.prototype.saveCursorA = function() {\n  this.savedX = this.x;\n  this.savedY = this.y;\n  if (this.tput) return this.put.sc();\n  return this._write('\\x1b[s');\n};\n\n// CSI u\n//   Restore cursor (ANSI.SYS).\nProgram.prototype.rcA =\nProgram.prototype.restoreCursorA = function() {\n  this.x = this.savedX || 0;\n  this.y = this.savedY || 0;\n  if (this.tput) return this.put.rc();\n  return this._write('\\x1b[u');\n};\n\n/**\n * Lesser Used\n */\n\n// CSI Ps I\n//   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\nProgram.prototype.cht =\nProgram.prototype.cursorForwardTab = function(param) {\n  this.x += 8;\n  this._ncoords();\n  if (this.tput) return this.put.tab(param);\n  return this._write('\\x1b[' + (param || 1) + 'I');\n};\n\n// CSI Ps S  Scroll up Ps lines (default = 1) (SU).\nProgram.prototype.su =\nProgram.prototype.scrollUp = function(param) {\n  this.y -= param || 1;\n  this._ncoords();\n  if (this.tput) return this.put.parm_index(param);\n  return this._write('\\x1b[' + (param || 1) + 'S');\n};\n\n// CSI Ps T  Scroll down Ps lines (default = 1) (SD).\nProgram.prototype.sd =\nProgram.prototype.scrollDown = function(param) {\n  this.y += param || 1;\n  this._ncoords();\n  if (this.tput) return this.put.parm_rindex(param);\n  return this._write('\\x1b[' + (param || 1) + 'T');\n};\n\n// CSI Ps ; Ps ; Ps ; Ps ; Ps T\n//   Initiate highlight mouse tracking.  Parameters are\n//   [func;startx;starty;firstrow;lastrow].  See the section Mouse\n//   Tracking.\nProgram.prototype.initMouseTracking = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + 'T');\n};\n\n// CSI > Ps; Ps T\n//   Reset one or more features of the title modes to the default\n//   value.  Normally, \"reset\" disables the feature.  It is possi-\n//   ble to disable the ability to reset features by compiling a\n//   different default for the title modes into xterm.\n//     Ps = 0  -> Do not set window/icon labels using hexadecimal.\n//     Ps = 1  -> Do not query window/icon labels using hexadeci-\n//     mal.\n//     Ps = 2  -> Do not set window/icon labels using UTF-8.\n//     Ps = 3  -> Do not query window/icon labels using UTF-8.\n//   (See discussion of \"Title Modes\").\nProgram.prototype.resetTitleModes = function() {\n  return this._write('\\x1b[>' + slice.call(arguments).join(';') + 'T');\n};\n\n// CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\nProgram.prototype.cbt =\nProgram.prototype.cursorBackwardTab = function(param) {\n  this.x -= 8;\n  this._ncoords();\n  if (this.tput) return this.put.cbt(param);\n  return this._write('\\x1b[' + (param || 1) + 'Z');\n};\n\n// CSI Ps b  Repeat the preceding graphic character Ps times (REP).\nProgram.prototype.rep =\nProgram.prototype.repeatPrecedingCharacter = function(param) {\n  this.x += param || 1;\n  this._ncoords();\n  if (this.tput) return this.put.rep(param);\n  return this._write('\\x1b[' + (param || 1) + 'b');\n};\n\n// CSI Ps g  Tab Clear (TBC).\n//     Ps = 0  -> Clear Current Column (default).\n//     Ps = 3  -> Clear All.\n// Potentially:\n//   Ps = 2  -> Clear Stops on Line.\n//   http://vt100.net/annarbor/aaa-ug/section6.html\nProgram.prototype.tbc =\nProgram.prototype.tabClear = function(param) {\n  if (this.tput) return this.put.tbc(param);\n  return this._write('\\x1b[' + (param || 0) + 'g');\n};\n\n// CSI Pm i  Media Copy (MC).\n//     Ps = 0  -> Print screen (default).\n//     Ps = 4  -> Turn off printer controller mode.\n//     Ps = 5  -> Turn on printer controller mode.\n// CSI ? Pm i\n//   Media Copy (MC, DEC-specific).\n//     Ps = 1  -> Print line containing cursor.\n//     Ps = 4  -> Turn off autoprint mode.\n//     Ps = 5  -> Turn on autoprint mode.\n//     Ps = 1  0  -> Print composed display, ignores DECPEX.\n//     Ps = 1  1  -> Print all pages.\nProgram.prototype.mc =\nProgram.prototype.mediaCopy = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + 'i');\n};\n\nProgram.prototype.print_screen =\nProgram.prototype.ps =\nProgram.prototype.mc0 = function() {\n  if (this.tput) return this.put.mc0();\n  return this.mc('0');\n};\n\nProgram.prototype.prtr_on =\nProgram.prototype.po =\nProgram.prototype.mc5 = function() {\n  if (this.tput) return this.put.mc5();\n  return this.mc('5');\n};\n\nProgram.prototype.prtr_off =\nProgram.prototype.pf =\nProgram.prototype.mc4 = function() {\n  if (this.tput) return this.put.mc4();\n  return this.mc('4');\n};\n\nProgram.prototype.prtr_non =\nProgram.prototype.pO =\nProgram.prototype.mc5p = function() {\n  if (this.tput) return this.put.mc5p();\n  return this.mc('?5');\n};\n\n// CSI > Ps; Ps m\n//   Set or reset resource-values used by xterm to decide whether\n//   to construct escape sequences holding information about the\n//   modifiers pressed with a given key.  The first parameter iden-\n//   tifies the resource to set/reset.  The second parameter is the\n//   value to assign to the resource.  If the second parameter is\n//   omitted, the resource is reset to its initial value.\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If no parameters are given, all resources are reset to their\n//   initial values.\nProgram.prototype.setResources = function() {\n  return this._write('\\x1b[>' + slice.call(arguments).join(';') + 'm');\n};\n\n// CSI > Ps n\n//   Disable modifiers which may be enabled via the CSI > Ps; Ps m\n//   sequence.  This corresponds to a resource value of \"-1\", which\n//   cannot be set with the other sequence.  The parameter identi-\n//   fies the resource to be disabled:\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If the parameter is omitted, modifyFunctionKeys is disabled.\n//   When modifyFunctionKeys is disabled, xterm uses the modifier\n//   keys to make an extended sequence of functions rather than\n//   adding a parameter to each function key to denote the modi-\n//   fiers.\nProgram.prototype.disableModifiers = function(param) {\n  return this._write('\\x1b[>' + (param || '') + 'n');\n};\n\n// CSI > Ps p\n//   Set resource value pointerMode.  This is used by xterm to\n//   decide whether to hide the pointer cursor as the user types.\n//   Valid values for the parameter:\n//     Ps = 0  -> never hide the pointer.\n//     Ps = 1  -> hide if the mouse tracking mode is not enabled.\n//     Ps = 2  -> always hide the pointer.  If no parameter is\n//     given, xterm uses the default, which is 1 .\nProgram.prototype.setPointerMode = function(param) {\n  return this._write('\\x1b[>' + (param || '') + 'p');\n};\n\n// CSI ! p   Soft terminal reset (DECSTR).\n// http://vt100.net/docs/vt220-rm/table4-10.html\nProgram.prototype.decstr =\nProgram.prototype.rs2 =\nProgram.prototype.softReset = function() {\n  //if (this.tput) return this.put.init_2string();\n  //if (this.tput) return this.put.reset_2string();\n  if (this.tput) return this.put.rs2();\n  //return this._write('\\x1b[!p');\n  //return this._write('\\x1b[!p\\x1b[?3;4l\\x1b[4l\\x1b>'); // init\n  return this._write('\\x1b[!p\\x1b[?3;4l\\x1b[4l\\x1b>'); // reset\n};\n\n// CSI Ps$ p\n//   Request ANSI mode (DECRQM).  For VT300 and up, reply is\n//     CSI Ps; Pm$ y\n//   where Ps is the mode number as in RM, and Pm is the mode\n//   value:\n//     0 - not recognized\n//     1 - set\n//     2 - reset\n//     3 - permanently set\n//     4 - permanently reset\nProgram.prototype.decrqm =\nProgram.prototype.requestAnsiMode = function(param) {\n  return this._write('\\x1b[' + (param || '') + '$p');\n};\n\n// CSI ? Ps$ p\n//   Request DEC private mode (DECRQM).  For VT300 and up, reply is\n//     CSI ? Ps; Pm$ p\n//   where Ps is the mode number as in DECSET, Pm is the mode value\n//   as in the ANSI DECRQM.\nProgram.prototype.decrqmp =\nProgram.prototype.requestPrivateMode = function(param) {\n  return this._write('\\x1b[?' + (param || '') + '$p');\n};\n\n// CSI Ps ; Ps \" p\n//   Set conformance level (DECSCL).  Valid values for the first\n//   parameter:\n//     Ps = 6 1  -> VT100.\n//     Ps = 6 2  -> VT200.\n//     Ps = 6 3  -> VT300.\n//   Valid values for the second parameter:\n//     Ps = 0  -> 8-bit controls.\n//     Ps = 1  -> 7-bit controls (always set for VT100).\n//     Ps = 2  -> 8-bit controls.\nProgram.prototype.decscl =\nProgram.prototype.setConformanceLevel = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\"p');\n};\n\n// CSI Ps q  Load LEDs (DECLL).\n//     Ps = 0  -> Clear all LEDS (default).\n//     Ps = 1  -> Light Num Lock.\n//     Ps = 2  -> Light Caps Lock.\n//     Ps = 3  -> Light Scroll Lock.\n//     Ps = 2  1  -> Extinguish Num Lock.\n//     Ps = 2  2  -> Extinguish Caps Lock.\n//     Ps = 2  3  -> Extinguish Scroll Lock.\nProgram.prototype.decll =\nProgram.prototype.loadLEDs = function(param) {\n  return this._write('\\x1b[' + (param || '') + 'q');\n};\n\n// CSI Ps SP q\n//   Set cursor style (DECSCUSR, VT520).\n//     Ps = 0  -> blinking block.\n//     Ps = 1  -> blinking block (default).\n//     Ps = 2  -> steady block.\n//     Ps = 3  -> blinking underline.\n//     Ps = 4  -> steady underline.\nProgram.prototype.decscusr =\nProgram.prototype.setCursorStyle = function(param) {\n  switch (param) {\n    case 'blinking block':\n      param = 1;\n      break;\n    case 'block':\n    case 'steady block':\n      param = 2;\n      break;\n    case 'blinking underline':\n      param = 3;\n      break;\n    case 'underline':\n    case 'steady underline':\n      param = 4;\n      break;\n    case 'blinking bar':\n      param = 5;\n      break;\n    case 'bar':\n    case 'steady bar':\n      param = 6;\n      break;\n  }\n  if (param === 2 && this.has('Se')) {\n    return this.put.Se();\n  }\n  if (this.has('Ss')) {\n    return this.put.Ss(param);\n  }\n  return this._write('\\x1b[' + (param || 1) + ' q');\n};\n\n// CSI Ps \" q\n//   Select character protection attribute (DECSCA).  Valid values\n//   for the parameter:\n//     Ps = 0  -> DECSED and DECSEL can erase (default).\n//     Ps = 1  -> DECSED and DECSEL cannot erase.\n//     Ps = 2  -> DECSED and DECSEL can erase.\nProgram.prototype.decsca =\nProgram.prototype.setCharProtectionAttr = function(param) {\n  return this._write('\\x1b[' + (param || 0) + '\"q');\n};\n\n// CSI ? Pm r\n//   Restore DEC Private Mode Values.  The value of Ps previously\n//   saved is restored.  Ps values are the same as for DECSET.\nProgram.prototype.restorePrivateValues = function() {\n  return this._write('\\x1b[?' + slice.call(arguments).join(';') + 'r');\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ r\n//   Change Attributes in Rectangular Area (DECCARA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nProgram.prototype.deccara =\nProgram.prototype.setAttrInRectangle = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$r');\n};\n\n// CSI ? Pm s\n//   Save DEC Private Mode Values.  Ps values are the same as for\n//   DECSET.\nProgram.prototype.savePrivateValues = function() {\n  return this._write('\\x1b[?' + slice.call(arguments).join(';') + 's');\n};\n\n// CSI Ps ; Ps ; Ps t\n//   Window manipulation (from dtterm, as well as extensions).\n//   These controls may be disabled using the allowWindowOps\n//   resource.  Valid values for the first (and any additional\n//   parameters) are:\n//     Ps = 1  -> De-iconify window.\n//     Ps = 2  -> Iconify window.\n//     Ps = 3  ;  x ;  y -> Move window to [x, y].\n//     Ps = 4  ;  height ;  width -> Resize the xterm window to\n//     height and width in pixels.\n//     Ps = 5  -> Raise the xterm window to the front of the stack-\n//     ing order.\n//     Ps = 6  -> Lower the xterm window to the bottom of the\n//     stacking order.\n//     Ps = 7  -> Refresh the xterm window.\n//     Ps = 8  ;  height ;  width -> Resize the text area to\n//     [height;width] in characters.\n//     Ps = 9  ;  0  -> Restore maximized window.\n//     Ps = 9  ;  1  -> Maximize window (i.e., resize to screen\n//     size).\n//     Ps = 1 0  ;  0  -> Undo full-screen mode.\n//     Ps = 1 0  ;  1  -> Change to full-screen.\n//     Ps = 1 1  -> Report xterm window state.  If the xterm window\n//     is open (non-iconified), it returns CSI 1 t .  If the xterm\n//     window is iconified, it returns CSI 2 t .\n//     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n//     ; x ; y t\n//     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n//     4  ;  height ;  width t\n//     Ps = 1 8  -> Report the size of the text area in characters.\n//     Result is CSI  8  ;  height ;  width t\n//     Ps = 1 9  -> Report the size of the screen in characters.\n//     Result is CSI  9  ;  height ;  width t\n//     Ps = 2 0  -> Report xterm window's icon label.  Result is\n//     OSC  L  label ST\n//     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n//     label ST\n//     Ps = 2 2  ;  0  -> Save xterm icon and window title on\n//     stack.\n//     Ps = 2 2  ;  1  -> Save xterm icon title on stack.\n//     Ps = 2 2  ;  2  -> Save xterm window title on stack.\n//     Ps = 2 3  ;  0  -> Restore xterm icon and window title from\n//     stack.\n//     Ps = 2 3  ;  1  -> Restore xterm icon title from stack.\n//     Ps = 2 3  ;  2  -> Restore xterm window title from stack.\n//     Ps >= 2 4  -> Resize to Ps lines (DECSLPP).\nProgram.prototype.manipulateWindow = function() {\n  var args = slice.call(arguments);\n\n  var callback = typeof args[args.length - 1] === 'function'\n    ? args.pop()\n    : function() {};\n\n  return this.response('window-manipulation',\n    '\\x1b[' + args.join(';') + 't', callback);\n};\n\nProgram.prototype.getWindowSize = function(callback) {\n  return this.manipulateWindow(18, callback);\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ t\n//   Reverse Attributes in Rectangular Area (DECRARA), VT400 and\n//   up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the attributes to reverse, i.e.,  1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nProgram.prototype.decrara =\nProgram.prototype.reverseAttrInRectangle = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$t');\n};\n\n// CSI > Ps; Ps t\n//   Set one or more features of the title modes.  Each parameter\n//   enables a single feature.\n//     Ps = 0  -> Set window/icon labels using hexadecimal.\n//     Ps = 1  -> Query window/icon labels using hexadecimal.\n//     Ps = 2  -> Set window/icon labels using UTF-8.\n//     Ps = 3  -> Query window/icon labels using UTF-8.  (See dis-\n//     cussion of \"Title Modes\")\n// XXX VTE bizarelly echos this:\nProgram.prototype.setTitleModeFeature = function() {\n  return this._twrite('\\x1b[>' + slice.call(arguments).join(';') + 't');\n};\n\n// CSI Ps SP t\n//   Set warning-bell volume (DECSWBV, VT520).\n//     Ps = 0  or 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 5 , 6 , 7 , or 8  -> high.\nProgram.prototype.decswbv =\nProgram.prototype.setWarningBellVolume = function(param) {\n  return this._write('\\x1b[' + (param || '') + ' t');\n};\n\n// CSI Ps SP u\n//   Set margin-bell volume (DECSMBV, VT520).\n//     Ps = 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 0 , 5 , 6 , 7 , or 8  -> high.\nProgram.prototype.decsmbv =\nProgram.prototype.setMarginBellVolume = function(param) {\n  return this._write('\\x1b[' + (param || '') + ' u');\n};\n\n// CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n//   Copy Rectangular Area (DECCRA, VT400 and up).\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Pp denotes the source page.\n//     Pt; Pl denotes the target location.\n//     Pp denotes the target page.\n// NOTE: xterm doesn't enable this code by default.\nProgram.prototype.deccra =\nProgram.prototype.copyRectangle = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$v');\n};\n\n// CSI Pt ; Pl ; Pb ; Pr ' w\n//   Enable Filter Rectangle (DECEFR), VT420 and up.\n//   Parameters are [top;left;bottom;right].\n//   Defines the coordinates of a filter rectangle and activates\n//   it.  Anytime the locator is detected outside of the filter\n//   rectangle, an outside rectangle event is generated and the\n//   rectangle is disabled.  Filter rectangles are always treated\n//   as \"one-shot\" events.  Any parameters that are omitted default\n//   to the current locator position.  If all parameters are omit-\n//   ted, any locator motion will be reported.  DECELR always can-\n//   cels any prevous rectangle definition.\nProgram.prototype.decefr =\nProgram.prototype.enableFilterRectangle = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\\'w');\n};\n\n// CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n//   if Ps is a \"0\" (default) or \"1\", and xterm is emulating VT100,\n//   the control sequence elicits a response of the same form whose\n//   parameters describe the terminal:\n//     Ps -> the given Ps incremented by 2.\n//     Pn = 1  <- no parity.\n//     Pn = 1  <- eight bits.\n//     Pn = 1  <- 2  8  transmit 38.4k baud.\n//     Pn = 1  <- 2  8  receive 38.4k baud.\n//     Pn = 1  <- clock multiplier.\n//     Pn = 0  <- STP flags.\nProgram.prototype.decreqtparm =\nProgram.prototype.requestParameters = function(param) {\n  return this._write('\\x1b[' + (param || 0) + 'x');\n};\n\n// CSI Ps x  Select Attribute Change Extent (DECSACE).\n//     Ps = 0  -> from start to end position, wrapped.\n//     Ps = 1  -> from start to end position, wrapped.\n//     Ps = 2  -> rectangle (exact).\nProgram.prototype.decsace =\nProgram.prototype.selectChangeExtent = function(param) {\n  return this._write('\\x1b[' + (param || 0) + 'x');\n};\n\n// CSI Pc; Pt; Pl; Pb; Pr$ x\n//   Fill Rectangular Area (DECFRA), VT420 and up.\n//     Pc is the character to use.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nProgram.prototype.decfra =\nProgram.prototype.fillRectangle = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$x');\n};\n\n// CSI Ps ; Pu ' z\n//   Enable Locator Reporting (DECELR).\n//   Valid values for the first parameter:\n//     Ps = 0  -> Locator disabled (default).\n//     Ps = 1  -> Locator enabled.\n//     Ps = 2  -> Locator enabled for one report, then disabled.\n//   The second parameter specifies the coordinate unit for locator\n//   reports.\n//   Valid values for the second parameter:\n//     Pu = 0  <- or omitted -> default to character cells.\n//     Pu = 1  <- device physical pixels.\n//     Pu = 2  <- character cells.\nProgram.prototype.decelr =\nProgram.prototype.enableLocatorReporting = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\\'z');\n};\n\n// CSI Pt; Pl; Pb; Pr$ z\n//   Erase Rectangular Area (DECERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nProgram.prototype.decera =\nProgram.prototype.eraseRectangle = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '$z');\n};\n\n// CSI Pm ' {\n//   Select Locator Events (DECSLE).\n//   Valid values for the first (and any additional parameters)\n//   are:\n//     Ps = 0  -> only respond to explicit host requests (DECRQLP).\n//                (This is default).  It also cancels any filter\n//   rectangle.\n//     Ps = 1  -> report button down transitions.\n//     Ps = 2  -> do not report button down transitions.\n//     Ps = 3  -> report button up transitions.\n//     Ps = 4  -> do not report button up transitions.\nProgram.prototype.decsle =\nProgram.prototype.setLocatorEvents = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '\\'{');\n};\n\n// CSI Pt; Pl; Pb; Pr$ {\n//   Selective Erase Rectangular Area (DECSERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\nProgram.prototype.decsera =\nProgram.prototype.selectiveEraseRectangle = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + '${');\n};\n\n// CSI Ps ' |\n//   Request Locator Position (DECRQLP).\n//   Valid values for the parameter are:\n//     Ps = 0 , 1 or omitted -> transmit a single DECLRP locator\n//     report.\n\n//   If Locator Reporting has been enabled by a DECELR, xterm will\n//   respond with a DECLRP Locator Report.  This report is also\n//   generated on button up and down events if they have been\n//   enabled with a DECSLE, or when the locator is detected outside\n//   of a filter rectangle, if filter rectangles have been enabled\n//   with a DECEFR.\n\n//     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n\n//   Parameters are [event;button;row;column;page].\n//   Valid values for the event:\n//     Pe = 0  -> locator unavailable - no other parameters sent.\n//     Pe = 1  -> request - xterm received a DECRQLP.\n//     Pe = 2  -> left button down.\n//     Pe = 3  -> left button up.\n//     Pe = 4  -> middle button down.\n//     Pe = 5  -> middle button up.\n//     Pe = 6  -> right button down.\n//     Pe = 7  -> right button up.\n//     Pe = 8  -> M4 button down.\n//     Pe = 9  -> M4 button up.\n//     Pe = 1 0  -> locator outside filter rectangle.\n//   ``button'' parameter is a bitmask indicating which buttons are\n//     pressed:\n//     Pb = 0  <- no buttons down.\n//     Pb & 1  <- right button down.\n//     Pb & 2  <- middle button down.\n//     Pb & 4  <- left button down.\n//     Pb & 8  <- M4 button down.\n//   ``row'' and ``column'' parameters are the coordinates of the\n//     locator position in the xterm window, encoded as ASCII deci-\n//     mal.\n//   The ``page'' parameter is not used by xterm, and will be omit-\n//   ted.\nProgram.prototype.decrqlp =\nProgram.prototype.req_mouse_pos =\nProgram.prototype.reqmp =\nProgram.prototype.requestLocatorPosition = function(param, callback) {\n  // See also:\n  // get_mouse / getm / Gm\n  // mouse_info / minfo / Mi\n  // Correct for tput?\n  if (this.has('req_mouse_pos')) {\n    var code = this.tput.req_mouse_pos(param);\n    return this.response('locator-position', code, callback);\n  }\n  return this.response('locator-position',\n    '\\x1b[' + (param || '') + '\\'|', callback);\n};\n\n// CSI P m SP }\n// Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n// NOTE: xterm doesn't enable this code by default.\nProgram.prototype.decic =\nProgram.prototype.insertColumns = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + ' }');\n};\n\n// CSI P m SP ~\n// Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n// NOTE: xterm doesn't enable this code by default.\nProgram.prototype.decdc =\nProgram.prototype.deleteColumns = function() {\n  return this._write('\\x1b[' + slice.call(arguments).join(';') + ' ~');\n};\n\nProgram.prototype.out = function(name) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  this.ret = true;\n  var out = this[name].apply(this, args);\n  this.ret = false;\n  return out;\n};\n\nProgram.prototype.sigtstp = function(callback) {\n  var resume = this.pause();\n\n  process.once('SIGCONT', function() {\n    resume();\n    if (callback) callback();\n  });\n\n  process.kill(process.pid, 'SIGTSTP');\n};\n\nProgram.prototype.pause = function(callback) {\n  var self = this\n    , isAlt = this.isAlt\n    , mouseEnabled = this.mouseEnabled;\n\n  this.lsaveCursor('pause');\n  //this.csr(0, screen.height - 1);\n  if (isAlt) this.normalBuffer();\n  this.showCursor();\n  if (mouseEnabled) this.disableMouse();\n\n  var write = this.output.write;\n  this.output.write = function() {};\n  if (this.input.setRawMode) {\n    this.input.setRawMode(false);\n  }\n  this.input.pause();\n\n  return this._resume = function() {\n    delete self._resume;\n\n    if (self.input.setRawMode) {\n      self.input.setRawMode(true);\n    }\n    self.input.resume();\n    self.output.write = write;\n\n    if (isAlt) self.alternateBuffer();\n    //self.csr(0, screen.height - 1);\n    if (mouseEnabled) self.enableMouse();\n    self.lrestoreCursor('pause', true);\n\n    if (callback) callback();\n  };\n};\n\nProgram.prototype.resume = function() {\n  if (this._resume) return this._resume();\n};\n\n/**\n * Helpers\n */\n\n// We could do this easier by just manipulating the _events object, or for\n// older versions of node, manipulating the array returned by listeners(), but\n// neither of these methods are guaranteed to work in future versions of node.\nfunction unshiftEvent(obj, event, listener) {\n  var listeners = obj.listeners(event);\n  obj.removeAllListeners(event);\n  obj.on(event, listener);\n  listeners.forEach(function(listener) {\n    obj.on(event, listener);\n  });\n}\n\nfunction merge(out) {\n  slice.call(arguments, 1).forEach(function(obj) {\n    Object.keys(obj).forEach(function(key) {\n      out[key] = obj[key];\n    });\n  });\n  return out;\n}\n\n/**\n * Expose\n */\n\nmodule.exports = Program;\n"]},"metadata":{},"sourceType":"script"}