{"ast":null,"code":"/**\n * video.js - video element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar cp = require('child_process');\n\nvar Node = require('./node');\n\nvar Box = require('./box');\n\nvar Terminal = require('./terminal');\n/**\n * Video\n */\n\n\nfunction Video(options) {\n  var self = this,\n      shell,\n      args;\n\n  if (!(this instanceof Node)) {\n    return new Video(options);\n  }\n\n  options = options || {};\n  Box.call(this, options);\n\n  if (this.exists('mplayer')) {\n    shell = 'mplayer';\n    args = ['-vo', 'caca', '-quiet', options.file];\n  } else if (this.exists('mpv')) {\n    shell = 'mpv';\n    args = ['--vo', 'caca', '--really-quiet', options.file];\n  } else {\n    this.parseTags = true;\n    this.setContent('{red-fg}{bold}Error:{/bold}' + ' mplayer or mpv not installed.{/red-fg}');\n    return this;\n  }\n\n  var opts = {\n    parent: this,\n    left: 0,\n    top: 0,\n    width: this.width - this.iwidth,\n    height: this.height - this.iheight,\n    shell: shell,\n    args: args.slice()\n  };\n  this.now = Date.now() / 1000 | 0;\n  this.start = opts.start || 0;\n\n  if (this.start) {\n    if (shell === 'mplayer') {\n      opts.args.unshift('-ss', this.start + '');\n    } else if (shell === 'mpv') {\n      opts.args.unshift('--start', this.start + '');\n    }\n  }\n\n  var DISPLAY = process.env.DISPLAY;\n  delete process.env.DISPLAY;\n  this.tty = new Terminal(opts);\n  process.env.DISPLAY = DISPLAY;\n  this.on('click', function () {\n    self.tty.pty.write('p');\n  }); // mplayer/mpv cannot resize itself in the terminal, so we have\n  // to restart it at the correct start time.\n\n  this.on('resize', function () {\n    self.tty.destroy();\n    var opts = {\n      parent: self,\n      left: 0,\n      top: 0,\n      width: self.width - self.iwidth,\n      height: self.height - self.iheight,\n      shell: shell,\n      args: args.slice()\n    };\n    var watched = (Date.now() / 1000 | 0) - self.now;\n    self.now = Date.now() / 1000 | 0;\n    self.start += watched;\n\n    if (shell === 'mplayer') {\n      opts.args.unshift('-ss', self.start + '');\n    } else if (shell === 'mpv') {\n      opts.args.unshift('--start', self.start + '');\n    }\n\n    var DISPLAY = process.env.DISPLAY;\n    delete process.env.DISPLAY;\n    self.tty = new Terminal(opts);\n    process.env.DISPLAY = DISPLAY;\n    self.screen.render();\n  });\n}\n\nVideo.prototype.__proto__ = Box.prototype;\nVideo.prototype.type = 'video';\n\nVideo.prototype.exists = function (program) {\n  try {\n    return !!+cp.execSync('type ' + program + ' > /dev/null 2> /dev/null' + ' && echo 1', {\n      encoding: 'utf8'\n    }).trim();\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Video;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/video.js"],"names":["cp","require","Node","Box","Terminal","Video","options","self","shell","args","call","exists","file","parseTags","setContent","opts","parent","left","top","width","iwidth","height","iheight","slice","now","Date","start","unshift","DISPLAY","process","env","tty","on","pty","write","destroy","watched","screen","render","prototype","__proto__","type","program","execSync","encoding","trim","e","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,eAAD,CAAhB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,YAAD,CAAtB;AAEA;AACA;AACA;;;AAEA,SAASI,KAAT,CAAeC,OAAf,EAAwB;AACtB,MAAIC,IAAI,GAAG,IAAX;AAAA,MACIC,KADJ;AAAA,MAEIC,IAFJ;;AAIA,MAAI,EAAE,gBAAgBP,IAAlB,CAAJ,EAA6B;AAC3B,WAAO,IAAIG,KAAJ,CAAUC,OAAV,CAAP;AACD;;AAEDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEAH,EAAAA,GAAG,CAACO,IAAJ,CAAS,IAAT,EAAeJ,OAAf;;AAEA,MAAI,KAAKK,MAAL,CAAY,SAAZ,CAAJ,EAA4B;AAC1BH,IAAAA,KAAK,GAAG,SAAR;AACAC,IAAAA,IAAI,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0BH,OAAO,CAACM,IAAlC,CAAP;AACD,GAHD,MAGO,IAAI,KAAKD,MAAL,CAAY,KAAZ,CAAJ,EAAwB;AAC7BH,IAAAA,KAAK,GAAG,KAAR;AACAC,IAAAA,IAAI,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,gBAAjB,EAAmCH,OAAO,CAACM,IAA3C,CAAP;AACD,GAHM,MAGA;AACL,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,UAAL,CAAgB,gCACZ,yCADJ;AAEA,WAAO,IAAP;AACD;;AAED,MAAIC,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,IADC;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,GAAG,EAAE,CAHI;AAITC,IAAAA,KAAK,EAAE,KAAKA,KAAL,GAAa,KAAKC,MAJhB;AAKTC,IAAAA,MAAM,EAAE,KAAKA,MAAL,GAAc,KAAKC,OALlB;AAMTd,IAAAA,KAAK,EAAEA,KANE;AAOTC,IAAAA,IAAI,EAAEA,IAAI,CAACc,KAAL;AAPG,GAAX;AAUA,OAAKC,GAAL,GAAWC,IAAI,CAACD,GAAL,KAAa,IAAb,GAAoB,CAA/B;AACA,OAAKE,KAAL,GAAaX,IAAI,CAACW,KAAL,IAAc,CAA3B;;AACA,MAAI,KAAKA,KAAT,EAAgB;AACd,QAAIlB,KAAK,KAAK,SAAd,EAAyB;AACvBO,MAAAA,IAAI,CAACN,IAAL,CAAUkB,OAAV,CAAkB,KAAlB,EAAyB,KAAKD,KAAL,GAAa,EAAtC;AACD,KAFD,MAEO,IAAIlB,KAAK,KAAK,KAAd,EAAqB;AAC1BO,MAAAA,IAAI,CAACN,IAAL,CAAUkB,OAAV,CAAkB,SAAlB,EAA6B,KAAKD,KAAL,GAAa,EAA1C;AACD;AACF;;AAED,MAAIE,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA1B;AACA,SAAOC,OAAO,CAACC,GAAR,CAAYF,OAAnB;AACA,OAAKG,GAAL,GAAW,IAAI3B,QAAJ,CAAaW,IAAb,CAAX;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,GAAsBA,OAAtB;AAEA,OAAKI,EAAL,CAAQ,OAAR,EAAiB,YAAW;AAC1BzB,IAAAA,IAAI,CAACwB,GAAL,CAASE,GAAT,CAAaC,KAAb,CAAmB,GAAnB;AACD,GAFD,EAnDsB,CAuDtB;AACA;;AACA,OAAKF,EAAL,CAAQ,QAAR,EAAkB,YAAW;AAC3BzB,IAAAA,IAAI,CAACwB,GAAL,CAASI,OAAT;AAEA,QAAIpB,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAET,IADC;AAETU,MAAAA,IAAI,EAAE,CAFG;AAGTC,MAAAA,GAAG,EAAE,CAHI;AAITC,MAAAA,KAAK,EAAEZ,IAAI,CAACY,KAAL,GAAaZ,IAAI,CAACa,MAJhB;AAKTC,MAAAA,MAAM,EAAEd,IAAI,CAACc,MAAL,GAAcd,IAAI,CAACe,OALlB;AAMTd,MAAAA,KAAK,EAAEA,KANE;AAOTC,MAAAA,IAAI,EAAEA,IAAI,CAACc,KAAL;AAPG,KAAX;AAUA,QAAIa,OAAO,GAAG,CAACX,IAAI,CAACD,GAAL,KAAa,IAAb,GAAoB,CAArB,IAA0BjB,IAAI,CAACiB,GAA7C;AACAjB,IAAAA,IAAI,CAACiB,GAAL,GAAWC,IAAI,CAACD,GAAL,KAAa,IAAb,GAAoB,CAA/B;AACAjB,IAAAA,IAAI,CAACmB,KAAL,IAAcU,OAAd;;AACA,QAAI5B,KAAK,KAAK,SAAd,EAAyB;AACvBO,MAAAA,IAAI,CAACN,IAAL,CAAUkB,OAAV,CAAkB,KAAlB,EAAyBpB,IAAI,CAACmB,KAAL,GAAa,EAAtC;AACD,KAFD,MAEO,IAAIlB,KAAK,KAAK,KAAd,EAAqB;AAC1BO,MAAAA,IAAI,CAACN,IAAL,CAAUkB,OAAV,CAAkB,SAAlB,EAA6BpB,IAAI,CAACmB,KAAL,GAAa,EAA1C;AACD;;AAED,QAAIE,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAA1B;AACA,WAAOC,OAAO,CAACC,GAAR,CAAYF,OAAnB;AACArB,IAAAA,IAAI,CAACwB,GAAL,GAAW,IAAI3B,QAAJ,CAAaW,IAAb,CAAX;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,GAAsBA,OAAtB;AACArB,IAAAA,IAAI,CAAC8B,MAAL,CAAYC,MAAZ;AACD,GA3BD;AA4BD;;AAEDjC,KAAK,CAACkC,SAAN,CAAgBC,SAAhB,GAA4BrC,GAAG,CAACoC,SAAhC;AAEAlC,KAAK,CAACkC,SAAN,CAAgBE,IAAhB,GAAuB,OAAvB;;AAEApC,KAAK,CAACkC,SAAN,CAAgB5B,MAAhB,GAAyB,UAAS+B,OAAT,EAAkB;AACzC,MAAI;AACF,WAAO,CAAC,CAAC,CAAC1C,EAAE,CAAC2C,QAAH,CAAY,UAClBD,OADkB,GACR,2BADQ,GAElB,YAFM,EAEQ;AAAEE,MAAAA,QAAQ,EAAE;AAAZ,KAFR,EAE8BC,IAF9B,EAAV;AAGD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF,CARD;AAUA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiB3C,KAAjB","sourcesContent":["/**\n * video.js - video element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar cp = require('child_process');\n\nvar Node = require('./node');\nvar Box = require('./box');\nvar Terminal = require('./terminal');\n\n/**\n * Video\n */\n\nfunction Video(options) {\n  var self = this\n    , shell\n    , args;\n\n  if (!(this instanceof Node)) {\n    return new Video(options);\n  }\n\n  options = options || {};\n\n  Box.call(this, options);\n\n  if (this.exists('mplayer')) {\n    shell = 'mplayer';\n    args = ['-vo', 'caca', '-quiet', options.file];\n  } else if (this.exists('mpv')) {\n    shell = 'mpv';\n    args = ['--vo', 'caca', '--really-quiet', options.file];\n  } else {\n    this.parseTags = true;\n    this.setContent('{red-fg}{bold}Error:{/bold}'\n      + ' mplayer or mpv not installed.{/red-fg}');\n    return this;\n  }\n\n  var opts = {\n    parent: this,\n    left: 0,\n    top: 0,\n    width: this.width - this.iwidth,\n    height: this.height - this.iheight,\n    shell: shell,\n    args: args.slice()\n  };\n\n  this.now = Date.now() / 1000 | 0;\n  this.start = opts.start || 0;\n  if (this.start) {\n    if (shell === 'mplayer') {\n      opts.args.unshift('-ss', this.start + '');\n    } else if (shell === 'mpv') {\n      opts.args.unshift('--start', this.start + '');\n    }\n  }\n\n  var DISPLAY = process.env.DISPLAY;\n  delete process.env.DISPLAY;\n  this.tty = new Terminal(opts);\n  process.env.DISPLAY = DISPLAY;\n\n  this.on('click', function() {\n    self.tty.pty.write('p');\n  });\n\n  // mplayer/mpv cannot resize itself in the terminal, so we have\n  // to restart it at the correct start time.\n  this.on('resize', function() {\n    self.tty.destroy();\n\n    var opts = {\n      parent: self,\n      left: 0,\n      top: 0,\n      width: self.width - self.iwidth,\n      height: self.height - self.iheight,\n      shell: shell,\n      args: args.slice()\n    };\n\n    var watched = (Date.now() / 1000 | 0) - self.now;\n    self.now = Date.now() / 1000 | 0;\n    self.start += watched;\n    if (shell === 'mplayer') {\n      opts.args.unshift('-ss', self.start + '');\n    } else if (shell === 'mpv') {\n      opts.args.unshift('--start', self.start + '');\n    }\n\n    var DISPLAY = process.env.DISPLAY;\n    delete process.env.DISPLAY;\n    self.tty = new Terminal(opts);\n    process.env.DISPLAY = DISPLAY;\n    self.screen.render();\n  });\n}\n\nVideo.prototype.__proto__ = Box.prototype;\n\nVideo.prototype.type = 'video';\n\nVideo.prototype.exists = function(program) {\n  try {\n    return !!+cp.execSync('type '\n      + program + ' > /dev/null 2> /dev/null'\n      + ' && echo 1', { encoding: 'utf8' }).trim();\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Video;\n"]},"metadata":{},"sourceType":"script"}