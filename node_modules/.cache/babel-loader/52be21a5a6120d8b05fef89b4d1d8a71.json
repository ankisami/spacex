{"ast":null,"code":"var spawn = require('child_process').spawn;\n\nvar exec = require('child_process').exec;\n\nvar chalk = require('chalk');\n\nvar util = require('util');\n\nvar fmt = require('../tools/fmt.js');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar cst = require('../../constants.js');\n\nvar Promise = require('../tools/promise.min.js');\n\nfunction pspawn(cmd) {\n  return new Promise(function (resolve, reject) {\n    var p_cmd = cmd.split(' ');\n    var install_instance = spawn(p_cmd[0], p_cmd.splice(1, cmd.length), {\n      stdio: 'inherit',\n      env: process.env,\n      shell: true\n    });\n    install_instance.on('close', function (code) {\n      if (code != 0) {\n        console.log(chalk.bold.red('Command failed'));\n        return reject(new Error('Bad cmd return'));\n      }\n\n      return resolve();\n    });\n    install_instance.on('error', function (err) {\n      return reject(err);\n    });\n  });\n}\n\nfunction checkDockerSetup() {\n  return new Promise(function (resolve, reject) {\n    exec(\"docker version -f '{{.Client.Version}}'\", function (err, stdout, stderr) {\n      if (err) {\n        console.error(chalk.red.bold('[Docker access] Error while trying to use docker command'));\n\n        if (err.message && err.message.indexOf('Cannot connect to the Docker') > -1) {\n          console.log();\n          console.log(chalk.blue.bold('[Solution] Setup Docker to be able to be used without sudo rights:'));\n          console.log(chalk.bold('$ sudo groupadd docker'));\n          console.log(chalk.bold('$ sudo usermod -aG docker $USER'));\n          console.log(chalk.bold('Then LOGOUT and LOGIN your Linux session'));\n          console.log('Read more: http://bit.ly/29JGdCE');\n        }\n\n        return reject(err);\n      }\n\n      return resolve();\n    });\n  });\n}\n/**\n * Switch Dockerfile mode\n * check test/programmatic/containerizer.mocha.js\n */\n\n\nfunction parseAndSwitch(file_content, main_file, opts) {\n  var lines = file_content.split('\\n');\n  var mode = opts.mode;\n  lines[0] = 'FROM keymetrics/pm2:' + opts.node_version;\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n\n    if (['## DISTRIBUTION MODE', '## DEVELOPMENT MODE'].indexOf(line) > -1 || i == lines.length - 1) {\n      lines.splice(i, lines.length);\n      lines[i] = '## ' + mode.toUpperCase() + ' MODE';\n      lines[i + 1] = 'ENV NODE_ENV=' + (mode == 'distribution' ? 'production' : mode);\n\n      if (mode == 'distribution') {\n        lines[i + 2] = 'COPY . /var/app';\n        lines[i + 3] = 'CMD [\"pm2-docker\", \"' + main_file + '\", \"--env\", \"production\"]';\n      }\n\n      if (mode == 'development') {\n        lines[i + 2] = 'CMD [\"pm2-dev\", \"' + main_file + '\", \"--env\", \"development\"]';\n      }\n\n      break;\n    }\n  }\n\n  ;\n  lines = lines.join('\\n');\n  return lines;\n}\n\n;\n/**\n * Replace ENV, COPY and CMD depending on the mode\n * @param {String} docker_filepath Dockerfile absolute path\n * @param {String} main_file       Main file to start in container\n * @param {String} mode            Mode to switch the Dockerfile\n */\n\nfunction switchDockerFile(docker_filepath, main_file, opts) {\n  return new Promise(function (resolve, reject) {\n    var data = fs.readFileSync(docker_filepath, 'utf8').toString();\n    if (['distribution', 'development'].indexOf(opts.mode) == -1) return reject(new Error('Unknown mode'));\n    var lines = parseAndSwitch(data, main_file, opts);\n    fs.writeFile(docker_filepath, lines, function (err) {\n      if (err) return reject(err);\n      resolve({\n        Dockerfile_path: docker_filepath,\n        Dockerfile: lines,\n        CMD: ''\n      });\n    });\n  });\n}\n/**\n * Generate sample Dockerfile (lib/templates/Dockerfiles)\n * @param {String} docker_filepath Dockerfile absolute path\n * @param {String} main_file       Main file to start in container\n * @param {String} mode            Mode to switch the Dockerfile\n */\n\n\nfunction generateDockerfile(docker_filepath, main_file, opts) {\n  return new Promise(function (resolve, reject) {\n    var tpl_file = path.join(cst.TEMPLATE_FOLDER, cst.DOCKERFILE_NODEJS);\n    var template = fs.readFileSync(tpl_file, {\n      encoding: 'utf8'\n    });\n    var CMD;\n    template = parseAndSwitch(template, main_file, opts);\n    fs.writeFile(docker_filepath, template, function (err) {\n      if (err) return reject(err);\n      resolve({\n        Dockerfile_path: docker_filepath,\n        Dockerfile: template,\n        CMD: CMD\n      });\n    });\n  });\n}\n\nfunction handleExit(CLI, opts, mode) {\n  process.on('SIGINT', function () {\n    CLI.disconnect();\n    if (mode != 'distribution') return false;\n    exec('docker ps -lq', function (err, stdout, stderr) {\n      if (err) {\n        console.error(err);\n      }\n\n      require('vizion').analyze({\n        folder: process.cwd()\n      }, function recur_path(err, meta) {\n        if (!err && meta.revision) {\n          var commit_id = util.format('#%s(%s) %s', meta.branch, meta.revision.slice(0, 5), meta.comment);\n          console.log(chalk.bold.magenta('$ docker commit -m \"%s\" %s %s'), commit_id, stdout.replace('\\n', ''), opts.imageName);\n        } else console.log(chalk.bold.magenta('$ docker commit %s %s'), stdout.replace('\\n', ''), opts.imageName);\n\n        console.log(chalk.bold.magenta('$ docker push %s'), opts.imageName);\n      });\n    });\n  });\n}\n\nmodule.exports = function (CLI) {\n  CLI.prototype.generateDockerfile = function (script, opts) {\n    var docker_filepath = path.join(process.cwd(), 'Dockerfile');\n    var that = this;\n    fs.stat(docker_filepath, function (err, stat) {\n      if (err || opts.force == true) {\n        generateDockerfile(docker_filepath, script, {\n          mode: 'development'\n        }).then(function () {\n          console.log(chalk.bold('New Dockerfile generated in current folder'));\n          console.log(chalk.bold('You can now run\\n$ pm2 docker:dev <file|config>'));\n          return that.exitCli(cst.SUCCESS_EXIT);\n        });\n        return false;\n      }\n\n      console.log(chalk.red.bold('Dockerfile already exists in this folder, use --force if you want to replace it'));\n      that.exitCli(cst.ERROR_EXIT);\n    });\n  };\n\n  CLI.prototype.dockerMode = function (script, opts, mode) {\n    var promptly = require('promptly');\n\n    var self = this;\n    handleExit(self, opts, mode);\n\n    if (mode == 'distribution' && !opts.imageName) {\n      console.error(chalk.bold.red('--image-name [name] option is missing'));\n      return self.exitCli(cst.ERROR_EXIT);\n    }\n\n    var template;\n    var app_path, main_script;\n    var image_name;\n    var node_version = opts.nodeVersion ? opts.nodeVersion.split('.')[0] : 'latest';\n    image_name = opts.imageName || require('crypto').randomBytes(6).toString('hex');\n\n    if (script.indexOf('/') > -1) {\n      app_path = path.join(process.cwd(), path.dirname(script));\n      main_script = path.basename(script);\n    } else {\n      app_path = process.cwd();\n      main_script = script;\n    }\n\n    checkDockerSetup().then(function () {\n      /////////////////////////\n      // Generate Dockerfile //\n      /////////////////////////\n      return new Promise(function (resolve, reject) {\n        var docker_filepath = path.join(process.cwd(), 'Dockerfile');\n        fs.stat(docker_filepath, function (err, stat) {\n          if (err) {\n            // Dockerfile does not exist, generate one\n            // console.log(chalk.blue.bold('Generating new Dockerfile'));\n            if (opts.force == true) {\n              return resolve(generateDockerfile(docker_filepath, main_script, {\n                node_version: node_version,\n                mode: mode\n              }));\n            }\n\n            if (opts.dockerdaemon) return resolve(generateDockerfile(docker_filepath, main_script, {\n              node_version: node_version,\n              mode: mode\n            }));\n            promptly.prompt('No Dockerfile in current directory, ok to generate a new one? (y/n)', function (err, value) {\n              if (value == 'y') return resolve(generateDockerfile(docker_filepath, main_script, {\n                node_version: node_version,\n                mode: mode\n              }));else return self.exitCli(cst.SUCCESS_EXIT);\n            });\n            return false;\n          }\n\n          return resolve(switchDockerFile(docker_filepath, main_script, {\n            node_version: node_version,\n            mode: mode\n          }));\n        });\n      });\n    }).then(function (_template) {\n      template = _template;\n      return Promise.resolve();\n    }).then(function () {\n      //////////////////\n      // Docker build //\n      //////////////////\n      var docker_build = util.format('docker build -t %s -f %s', image_name, template.Dockerfile_path);\n      if (opts.fresh == true) docker_build += ' --no-cache';\n      docker_build += ' .';\n      console.log();\n      fmt.sep();\n      fmt.title('Building Boot System');\n      fmt.field('Type', chalk.cyan.bold('Docker'));\n      fmt.field('Mode', mode);\n      fmt.field('Image name', image_name);\n      fmt.field('Docker build command', docker_build);\n      fmt.field('Dockerfile path', template.Dockerfile_path);\n      fmt.sep();\n      return pspawn(docker_build);\n    }).then(function () {\n      ////////////////\n      // Docker run //\n      ////////////////\n      var docker_run = 'docker run --net host';\n      if (opts.dockerdaemon == true) docker_run += ' -d';\n      if (mode != 'distribution') docker_run += util.format(' -v %s:/var/app -v /var/app/node_modules', app_path);\n      docker_run += ' ' + image_name;\n      var dockerfile_parsed = template.Dockerfile.split('\\n');\n      var base_image = dockerfile_parsed[0];\n      var run_cmd = dockerfile_parsed[dockerfile_parsed.length - 1];\n      console.log();\n      fmt.sep();\n      fmt.title('Booting');\n      fmt.field('Type', chalk.cyan.bold('Docker'));\n      fmt.field('Mode', mode);\n      fmt.field('Base Image', base_image);\n      fmt.field('Image Name', image_name);\n      fmt.field('Docker Command', docker_run);\n      fmt.field('RUN Command', run_cmd);\n      fmt.field('CWD', app_path);\n      fmt.sep();\n      return pspawn(docker_run);\n    }).then(function () {\n      console.log(chalk.blue.bold('>>> Leaving Docker instance uuid=%s'), image_name);\n      self.disconnect();\n      return Promise.resolve();\n    }).catch(function (err) {\n      console.log();\n      console.log(chalk.grey('Raw error=', err.message));\n      self.disconnect();\n    });\n  };\n};\n\nmodule.exports.generateDockerfile = generateDockerfile;\nmodule.exports.parseAndSwitch = parseAndSwitch;\nmodule.exports.switchDockerFile = switchDockerFile;","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Containerizer.js"],"names":["spawn","require","exec","chalk","util","fmt","fs","path","cst","Promise","pspawn","cmd","resolve","reject","p_cmd","split","install_instance","splice","length","stdio","env","process","shell","on","code","console","log","bold","red","Error","err","checkDockerSetup","stdout","stderr","error","message","indexOf","blue","parseAndSwitch","file_content","main_file","opts","lines","mode","node_version","i","line","toUpperCase","join","switchDockerFile","docker_filepath","data","readFileSync","toString","writeFile","Dockerfile_path","Dockerfile","CMD","generateDockerfile","tpl_file","TEMPLATE_FOLDER","DOCKERFILE_NODEJS","template","encoding","handleExit","CLI","disconnect","analyze","folder","cwd","recur_path","meta","revision","commit_id","format","branch","slice","comment","magenta","replace","imageName","module","exports","prototype","script","that","stat","force","then","exitCli","SUCCESS_EXIT","ERROR_EXIT","dockerMode","promptly","self","app_path","main_script","image_name","nodeVersion","randomBytes","dirname","basename","dockerdaemon","prompt","value","_template","docker_build","fresh","sep","title","field","cyan","docker_run","dockerfile_parsed","base_image","run_cmd","catch","grey"],"mappings":"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","sourcesContent":["\nvar spawn   = require('child_process').spawn;\nvar exec    = require('child_process').exec;\nvar chalk   = require('chalk');\nvar util    = require('util');\nvar fmt     = require('../tools/fmt.js');\nvar fs      = require('fs');\nvar path    = require('path');\nvar cst     = require('../../constants.js');\nvar Promise = require('../tools/promise.min.js');\n\nfunction pspawn(cmd) {\n  return new Promise(function(resolve, reject) {\n    var p_cmd = cmd.split(' ');\n\n    var install_instance = spawn(p_cmd[0], p_cmd.splice(1, cmd.length), {\n      stdio : 'inherit',\n      env : process.env,\n      shell : true\n    });\n\n    install_instance.on('close', function(code) {\n      if (code != 0) {\n        console.log(chalk.bold.red('Command failed'));\n        return reject(new Error('Bad cmd return'));\n      }\n      return resolve();\n    });\n\n    install_instance.on('error', function (err) {\n      return reject(err);\n    });\n  });\n}\n\nfunction checkDockerSetup() {\n  return new Promise(function(resolve, reject) {\n    exec(\"docker version -f '{{.Client.Version}}'\", function(err, stdout, stderr) {\n      if (err) {\n        console.error(chalk.red.bold('[Docker access] Error while trying to use docker command'));\n        if (err.message && err.message.indexOf('Cannot connect to the Docker') > -1) {\n          console.log();\n          console.log(chalk.blue.bold('[Solution] Setup Docker to be able to be used without sudo rights:'));\n          console.log(chalk.bold('$ sudo groupadd docker'));\n          console.log(chalk.bold('$ sudo usermod -aG docker $USER'));\n          console.log(chalk.bold('Then LOGOUT and LOGIN your Linux session'));\n          console.log('Read more: http://bit.ly/29JGdCE');\n        }\n        return reject(err);\n      }\n      return resolve();\n    });\n  });\n}\n\n/**\n * Switch Dockerfile mode\n * check test/programmatic/containerizer.mocha.js\n */\nfunction parseAndSwitch(file_content, main_file, opts) {\n  var lines = file_content.split('\\n');\n  var mode = opts.mode;\n\n  lines[0] = 'FROM keymetrics/pm2:' + opts.node_version;\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n\n    if (['## DISTRIBUTION MODE', '## DEVELOPMENT MODE'].indexOf(line) > -1 ||\n        i == lines.length - 1) {\n      lines.splice(i, lines.length);\n      lines[i] = '## ' + mode.toUpperCase() + ' MODE';\n      lines[i + 1] = 'ENV NODE_ENV=' + (mode == 'distribution' ? 'production' : mode);\n\n      if (mode == 'distribution') {\n        lines[i + 2] = 'COPY . /var/app';\n        lines[i + 3] = 'CMD [\"pm2-docker\", \"' + main_file + '\", \"--env\", \"production\"]';\n      }\n      if (mode == 'development') {\n        lines[i + 2] = 'CMD [\"pm2-dev\", \"' + main_file + '\", \"--env\", \"development\"]';\n      }\n      break;\n    }\n  };\n  lines = lines.join('\\n');\n  return lines;\n};\n\n/**\n * Replace ENV, COPY and CMD depending on the mode\n * @param {String} docker_filepath Dockerfile absolute path\n * @param {String} main_file       Main file to start in container\n * @param {String} mode            Mode to switch the Dockerfile\n */\nfunction switchDockerFile(docker_filepath, main_file, opts) {\n  return new Promise(function(resolve, reject) {\n    var data  = fs.readFileSync(docker_filepath, 'utf8').toString();\n\n    if (['distribution', 'development'].indexOf(opts.mode) == -1)\n      return reject(new Error('Unknown mode'));\n\n    var lines = parseAndSwitch(data, main_file, opts)\n    fs.writeFile(docker_filepath, lines, function(err) {\n      if (err) return reject(err);\n      resolve({\n        Dockerfile_path : docker_filepath,\n        Dockerfile : lines,\n        CMD : ''\n      });\n    })\n  });\n}\n\n/**\n * Generate sample Dockerfile (lib/templates/Dockerfiles)\n * @param {String} docker_filepath Dockerfile absolute path\n * @param {String} main_file       Main file to start in container\n * @param {String} mode            Mode to switch the Dockerfile\n */\nfunction generateDockerfile(docker_filepath, main_file, opts) {\n  return new Promise(function(resolve, reject) {\n    var tpl_file = path.join(cst.TEMPLATE_FOLDER, cst.DOCKERFILE_NODEJS);\n    var template = fs.readFileSync(tpl_file, {encoding: 'utf8'});\n    var CMD;\n\n    template = parseAndSwitch(template, main_file, opts);\n\n    fs.writeFile(docker_filepath, template, function(err) {\n      if (err) return reject(err);\n      resolve({\n        Dockerfile_path : docker_filepath,\n        Dockerfile : template,\n        CMD : CMD\n      });\n    });\n  });\n}\n\nfunction handleExit(CLI, opts, mode) {\n  process.on('SIGINT', function() {\n    CLI.disconnect();\n\n    if (mode != 'distribution')\n      return false;\n\n    exec('docker ps -lq', function(err, stdout, stderr) {\n      if (err) {\n        console.error(err);\n      }\n      require('vizion').analyze({folder : process.cwd()}, function recur_path(err, meta){\n        if (!err && meta.revision) {\n          var commit_id = util.format('#%s(%s) %s',\n                                      meta.branch,\n                                      meta.revision.slice(0, 5),\n                                      meta.comment);\n\n          console.log(chalk.bold.magenta('$ docker commit -m \"%s\" %s %s'),\n                      commit_id,\n                      stdout.replace('\\n', ''),\n                      opts.imageName);\n        }\n        else\n          console.log(chalk.bold.magenta('$ docker commit %s %s'), stdout.replace('\\n', ''), opts.imageName);\n\n        console.log(chalk.bold.magenta('$ docker push %s'), opts.imageName);\n      });\n    });\n  });\n}\n\nmodule.exports = function(CLI) {\n  CLI.prototype.generateDockerfile = function(script, opts) {\n    var docker_filepath = path.join(process.cwd(), 'Dockerfile');\n    var that = this;\n\n    fs.stat(docker_filepath, function(err, stat) {\n      if (err || opts.force == true) {\n        generateDockerfile(docker_filepath, script, {\n          mode : 'development'\n        })\n          .then(function() {\n            console.log(chalk.bold('New Dockerfile generated in current folder'));\n            console.log(chalk.bold('You can now run\\n$ pm2 docker:dev <file|config>'));\n            return that.exitCli(cst.SUCCESS_EXIT);\n          });\n        return false;\n      }\n      console.log(chalk.red.bold('Dockerfile already exists in this folder, use --force if you want to replace it'));\n      that.exitCli(cst.ERROR_EXIT);\n    });\n  };\n\n  CLI.prototype.dockerMode = function(script, opts, mode) {\n    var promptly = require('promptly');\n    var self = this;\n    handleExit(self, opts, mode);\n\n    if (mode == 'distribution' && !opts.imageName) {\n      console.error(chalk.bold.red('--image-name [name] option is missing'));\n      return self.exitCli(cst.ERROR_EXIT);\n    }\n\n    var template;\n    var app_path, main_script;\n    var image_name;\n    var node_version = opts.nodeVersion ? opts.nodeVersion.split('.')[0] : 'latest';\n\n    image_name   = opts.imageName || require('crypto').randomBytes(6).toString('hex');\n\n    if (script.indexOf('/') > -1) {\n      app_path  = path.join(process.cwd(), path.dirname(script));\n      main_script = path.basename(script);\n    }\n    else {\n      app_path  = process.cwd();\n      main_script = script;\n    }\n\n    checkDockerSetup()\n      .then(function() {\n        /////////////////////////\n        // Generate Dockerfile //\n        /////////////////////////\n        return new Promise(function(resolve, reject) {\n          var docker_filepath = path.join(process.cwd(), 'Dockerfile');\n\n          fs.stat(docker_filepath, function(err, stat) {\n            if (err) {\n              // Dockerfile does not exist, generate one\n              // console.log(chalk.blue.bold('Generating new Dockerfile'));\n              if (opts.force == true) {\n                return resolve(generateDockerfile(docker_filepath, main_script, {\n                  node_version : node_version,\n                  mode : mode\n                }));\n              }\n              if (opts.dockerdaemon)\n                return resolve(generateDockerfile(docker_filepath, main_script, {\n                    node_version : node_version,\n                    mode : mode\n                  }));\n              promptly.prompt('No Dockerfile in current directory, ok to generate a new one? (y/n)', function(err, value) {\n                if (value == 'y')\n                  return resolve(generateDockerfile(docker_filepath, main_script, {\n                    node_version : node_version,\n                    mode : mode\n                  }));\n                else\n                  return self.exitCli(cst.SUCCESS_EXIT);\n              });\n              return false;\n            }\n            return resolve(switchDockerFile(docker_filepath, main_script, {\n              node_version : node_version,\n              mode : mode\n            }));\n          });\n        });\n      })\n      .then(function(_template) {\n        template = _template;\n        return Promise.resolve();\n      })\n      .then(function() {\n        //////////////////\n        // Docker build //\n        //////////////////\n\n        var docker_build = util.format('docker build -t %s -f %s',\n                                       image_name,\n                                       template.Dockerfile_path);\n\n        if (opts.fresh == true)\n          docker_build += ' --no-cache';\n        docker_build += ' .';\n\n        console.log();\n        fmt.sep();\n        fmt.title('Building Boot System');\n        fmt.field('Type', chalk.cyan.bold('Docker'));\n        fmt.field('Mode', mode);\n        fmt.field('Image name', image_name);\n        fmt.field('Docker build command', docker_build);\n        fmt.field('Dockerfile path', template.Dockerfile_path);\n        fmt.sep();\n\n        return pspawn(docker_build);\n      })\n      .then(function() {\n        ////////////////\n        // Docker run //\n        ////////////////\n\n        var docker_run = 'docker run --net host';\n\n        if (opts.dockerdaemon == true)\n          docker_run += ' -d';\n        if (mode != 'distribution')\n          docker_run += util.format(' -v %s:/var/app -v /var/app/node_modules', app_path);\n        docker_run += ' ' + image_name;\n        var dockerfile_parsed = template.Dockerfile.split('\\n');\n        var base_image = dockerfile_parsed[0];\n        var run_cmd = dockerfile_parsed[dockerfile_parsed.length - 1];\n\n        console.log();\n        fmt.sep();\n        fmt.title('Booting');\n        fmt.field('Type', chalk.cyan.bold('Docker'));\n        fmt.field('Mode', mode);\n        fmt.field('Base Image', base_image);\n        fmt.field('Image Name', image_name);\n        fmt.field('Docker Command', docker_run);\n        fmt.field('RUN Command', run_cmd);\n        fmt.field('CWD', app_path);\n        fmt.sep();\n        return pspawn(docker_run);\n      })\n      .then(function() {\n        console.log(chalk.blue.bold('>>> Leaving Docker instance uuid=%s'), image_name);\n        self.disconnect();\n        return Promise.resolve();\n      })\n      .catch(function(err) {\n        console.log();\n        console.log(chalk.grey('Raw error=', err.message));\n        self.disconnect();\n      });\n\n  };\n\n};\n\nmodule.exports.generateDockerfile = generateDockerfile;\nmodule.exports.parseAndSwitch     = parseAndSwitch;\nmodule.exports.switchDockerFile   = switchDockerFile;\n"]},"metadata":{},"sourceType":"script"}