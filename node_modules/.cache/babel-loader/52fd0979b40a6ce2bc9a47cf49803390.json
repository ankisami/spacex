{"ast":null,"code":"/**\n * textbox.js - textbox element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar Node = require('./node');\n\nvar Textarea = require('./textarea');\n/**\n * Textbox\n */\n\n\nfunction Textbox(options) {\n  if (!(this instanceof Node)) {\n    return new Textbox(options);\n  }\n\n  options = options || {};\n  options.scrollable = false;\n  Textarea.call(this, options);\n  this.secret = options.secret;\n  this.censor = options.censor;\n}\n\nTextbox.prototype.__proto__ = Textarea.prototype;\nTextbox.prototype.type = 'textbox';\nTextbox.prototype.__olistener = Textbox.prototype._listener;\n\nTextbox.prototype._listener = function (ch, key) {\n  if (key.name === 'enter') {\n    this._done(null, this.value);\n\n    return;\n  }\n\n  return this.__olistener(ch, key);\n};\n\nTextbox.prototype.setValue = function (value) {\n  var visible, val;\n\n  if (value == null) {\n    value = this.value;\n  }\n\n  if (this._value !== value) {\n    value = value.replace(/\\n/g, '');\n    this.value = value;\n    this._value = value;\n\n    if (this.secret) {\n      this.setContent('');\n    } else if (this.censor) {\n      this.setContent(Array(this.value.length + 1).join('*'));\n    } else {\n      visible = -(this.width - this.iwidth - 1);\n      val = this.value.replace(/\\t/g, this.screen.tabc);\n      this.setContent(val.slice(visible));\n    }\n\n    this._updateCursor();\n  }\n};\n\nTextbox.prototype.submit = function () {\n  if (!this.__listener) return;\n  return this.__listener('\\r', {\n    name: 'enter'\n  });\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Textbox;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/textbox.js"],"names":["Node","require","Textarea","Textbox","options","scrollable","call","secret","censor","prototype","__proto__","type","__olistener","_listener","ch","key","name","_done","value","setValue","visible","val","_value","replace","setContent","Array","length","join","width","iwidth","screen","tabc","slice","_updateCursor","submit","__listener","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAD,CAAtB;AAEA;AACA;AACA;;;AAEA,SAASE,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,MAAI,EAAE,gBAAgBJ,IAAlB,CAAJ,EAA6B;AAC3B,WAAO,IAAIG,OAAJ,CAAYC,OAAZ,CAAP;AACD;;AAEDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEAA,EAAAA,OAAO,CAACC,UAAR,GAAqB,KAArB;AAEAH,EAAAA,QAAQ,CAACI,IAAT,CAAc,IAAd,EAAoBF,OAApB;AAEA,OAAKG,MAAL,GAAcH,OAAO,CAACG,MAAtB;AACA,OAAKC,MAAL,GAAcJ,OAAO,CAACI,MAAtB;AACD;;AAEDL,OAAO,CAACM,SAAR,CAAkBC,SAAlB,GAA8BR,QAAQ,CAACO,SAAvC;AAEAN,OAAO,CAACM,SAAR,CAAkBE,IAAlB,GAAyB,SAAzB;AAEAR,OAAO,CAACM,SAAR,CAAkBG,WAAlB,GAAgCT,OAAO,CAACM,SAAR,CAAkBI,SAAlD;;AACAV,OAAO,CAACM,SAAR,CAAkBI,SAAlB,GAA8B,UAASC,EAAT,EAAaC,GAAb,EAAkB;AAC9C,MAAIA,GAAG,CAACC,IAAJ,KAAa,OAAjB,EAA0B;AACxB,SAAKC,KAAL,CAAW,IAAX,EAAiB,KAAKC,KAAtB;;AACA;AACD;;AACD,SAAO,KAAKN,WAAL,CAAiBE,EAAjB,EAAqBC,GAArB,CAAP;AACD,CAND;;AAQAZ,OAAO,CAACM,SAAR,CAAkBU,QAAlB,GAA6B,UAASD,KAAT,EAAgB;AAC3C,MAAIE,OAAJ,EAAaC,GAAb;;AACA,MAAIH,KAAK,IAAI,IAAb,EAAmB;AACjBA,IAAAA,KAAK,GAAG,KAAKA,KAAb;AACD;;AACD,MAAI,KAAKI,MAAL,KAAgBJ,KAApB,EAA2B;AACzBA,IAAAA,KAAK,GAAGA,KAAK,CAACK,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;AACA,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKI,MAAL,GAAcJ,KAAd;;AACA,QAAI,KAAKX,MAAT,EAAiB;AACf,WAAKiB,UAAL,CAAgB,EAAhB;AACD,KAFD,MAEO,IAAI,KAAKhB,MAAT,EAAiB;AACtB,WAAKgB,UAAL,CAAgBC,KAAK,CAAC,KAAKP,KAAL,CAAWQ,MAAX,GAAoB,CAArB,CAAL,CAA6BC,IAA7B,CAAkC,GAAlC,CAAhB;AACD,KAFM,MAEA;AACLP,MAAAA,OAAO,GAAG,EAAE,KAAKQ,KAAL,GAAa,KAAKC,MAAlB,GAA2B,CAA7B,CAAV;AACAR,MAAAA,GAAG,GAAG,KAAKH,KAAL,CAAWK,OAAX,CAAmB,KAAnB,EAA0B,KAAKO,MAAL,CAAYC,IAAtC,CAAN;AACA,WAAKP,UAAL,CAAgBH,GAAG,CAACW,KAAJ,CAAUZ,OAAV,CAAhB;AACD;;AACD,SAAKa,aAAL;AACD;AACF,CApBD;;AAsBA9B,OAAO,CAACM,SAAR,CAAkByB,MAAlB,GAA2B,YAAW;AACpC,MAAI,CAAC,KAAKC,UAAV,EAAsB;AACtB,SAAO,KAAKA,UAAL,CAAgB,IAAhB,EAAsB;AAAEnB,IAAAA,IAAI,EAAE;AAAR,GAAtB,CAAP;AACD,CAHD;AAKA;AACA;AACA;;;AAEAoB,MAAM,CAACC,OAAP,GAAiBlC,OAAjB","sourcesContent":["/**\n * textbox.js - textbox element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar Node = require('./node');\nvar Textarea = require('./textarea');\n\n/**\n * Textbox\n */\n\nfunction Textbox(options) {\n  if (!(this instanceof Node)) {\n    return new Textbox(options);\n  }\n\n  options = options || {};\n\n  options.scrollable = false;\n\n  Textarea.call(this, options);\n\n  this.secret = options.secret;\n  this.censor = options.censor;\n}\n\nTextbox.prototype.__proto__ = Textarea.prototype;\n\nTextbox.prototype.type = 'textbox';\n\nTextbox.prototype.__olistener = Textbox.prototype._listener;\nTextbox.prototype._listener = function(ch, key) {\n  if (key.name === 'enter') {\n    this._done(null, this.value);\n    return;\n  }\n  return this.__olistener(ch, key);\n};\n\nTextbox.prototype.setValue = function(value) {\n  var visible, val;\n  if (value == null) {\n    value = this.value;\n  }\n  if (this._value !== value) {\n    value = value.replace(/\\n/g, '');\n    this.value = value;\n    this._value = value;\n    if (this.secret) {\n      this.setContent('');\n    } else if (this.censor) {\n      this.setContent(Array(this.value.length + 1).join('*'));\n    } else {\n      visible = -(this.width - this.iwidth - 1);\n      val = this.value.replace(/\\t/g, this.screen.tabc);\n      this.setContent(val.slice(visible));\n    }\n    this._updateCursor();\n  }\n};\n\nTextbox.prototype.submit = function() {\n  if (!this.__listener) return;\n  return this.__listener('\\r', { name: 'enter' });\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Textbox;\n"]},"metadata":{},"sourceType":"script"}