{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = timesLimit;\n\nvar _mapLimit = require('./mapLimit');\n\nvar _mapLimit2 = _interopRequireDefault(_mapLimit);\n\nvar _range = require('./internal/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\n\n\nfunction timesLimit(count, limit, iteratee, callback) {\n  var _iteratee = (0, _wrapAsync2.default)(iteratee);\n\n  return (0, _mapLimit2.default)((0, _range2.default)(count), limit, _iteratee, callback);\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/samianki/node_modules/async/timesLimit.js"],"names":["Object","defineProperty","exports","value","default","timesLimit","_mapLimit","require","_mapLimit2","_interopRequireDefault","_range","_range2","_wrapAsync","_wrapAsync2","obj","__esModule","count","limit","iteratee","callback","_iteratee","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,sBAAsB,CAACH,SAAD,CAAvC;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,kBAAD,CAApB;;AAEA,IAAII,OAAO,GAAGF,sBAAsB,CAACC,MAAD,CAApC;;AAEA,IAAIE,UAAU,GAAGL,OAAO,CAAC,sBAAD,CAAxB;;AAEA,IAAIM,WAAW,GAAGJ,sBAAsB,CAACG,UAAD,CAAxC;;AAEA,SAASH,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEV,IAAAA,OAAO,EAAEU;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAST,UAAT,CAAoBW,KAApB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsD;AACpD,MAAIC,SAAS,GAAG,CAAC,GAAGP,WAAW,CAACT,OAAhB,EAAyBc,QAAzB,CAAhB;;AACA,SAAO,CAAC,GAAGV,UAAU,CAACJ,OAAf,EAAwB,CAAC,GAAGO,OAAO,CAACP,OAAZ,EAAqBY,KAArB,CAAxB,EAAqDC,KAArD,EAA4DG,SAA5D,EAAuED,QAAvE,CAAP;AACD;;AACDE,MAAM,CAACnB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = timesLimit;\n\nvar _mapLimit = require('./mapLimit');\n\nvar _mapLimit2 = _interopRequireDefault(_mapLimit);\n\nvar _range = require('./internal/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n  var _iteratee = (0, _wrapAsync2.default)(iteratee);\n  return (0, _mapLimit2.default)((0, _range2.default)(count), limit, _iteratee, callback);\n}\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}