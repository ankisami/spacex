{"ast":null,"code":"var vCheck = require('@pm2/pm2-version-check');\n\nvar semver = require('semver');\n\nvar fs = require('fs');\n\nvar cst = require('../constants.js');\n\nvar os = require('os');\n\nfunction hasDockerEnv() {\n  try {\n    fs.statSync('/.dockerenv');\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction hasDockerCGroup() {\n  try {\n    return fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n  } catch (_) {\n    return false;\n  }\n}\n\nmodule.exports = function (opts) {\n  var params = {\n    state: opts.state,\n    version: opts.version\n  };\n\n  try {\n    params.os = os.type();\n    params.uptime = Math.floor(process.uptime());\n    params.nodev = process.versions.node;\n    params.docker = hasDockerEnv() || hasDockerCGroup();\n  } catch (e) {}\n\n  vCheck.runCheck(params, (err, pkg) => {\n    if (err) return false;\n    if (!pkg.current_version) return false;\n\n    if (opts.version && semver.lt(opts.version, pkg.current_version)) {\n      console.log('[PM2] This PM2 is not UP TO DATE');\n      console.log('[PM2] Upgrade to version %s', pkg.current_version);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/VersionCheck.js"],"names":["vCheck","require","semver","fs","cst","os","hasDockerEnv","statSync","_","hasDockerCGroup","readFileSync","includes","module","exports","opts","params","state","version","type","uptime","Math","floor","process","nodev","versions","node","docker","e","runCheck","err","pkg","current_version","lt","console","log"],"mappings":"AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAApB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,EAAE,GAAOF,OAAO,CAAC,IAAD,CAApB;;AACA,IAAIG,GAAG,GAAMH,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAII,EAAE,GAAOJ,OAAO,CAAC,IAAD,CAApB;;AAEA,SAASK,YAAT,GAAwB;AACvB,MAAI;AACHH,IAAAA,EAAE,CAACI,QAAH,CAAY,aAAZ;AACA,WAAO,IAAP;AACA,GAHD,CAGE,OAAOC,CAAP,EAAU;AACX,WAAO,KAAP;AACA;AACD;;AAED,SAASC,eAAT,GAA2B;AAC1B,MAAI;AACH,WAAON,EAAE,CAACO,YAAH,CAAgB,mBAAhB,EAAqC,MAArC,EAA6CC,QAA7C,CAAsD,QAAtD,CAAP;AACA,GAFD,CAEE,OAAOH,CAAP,EAAU;AACX,WAAO,KAAP;AACA;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/B,MAAIC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KADD;AAEXC,IAAAA,OAAO,EAAEH,IAAI,CAACG;AAFH,GAAb;;AAKA,MAAI;AACFF,IAAAA,MAAM,CAACV,EAAP,GAAYA,EAAE,CAACa,IAAH,EAAZ;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgBC,IAAI,CAACC,KAAL,CAAWC,OAAO,CAACH,MAAR,EAAX,CAAhB;AACAJ,IAAAA,MAAM,CAACQ,KAAP,GAAeD,OAAO,CAACE,QAAR,CAAiBC,IAAhC;AACAV,IAAAA,MAAM,CAACW,MAAP,GAAgBpB,YAAY,MAAMG,eAAe,EAAjD;AACD,GALD,CAKE,OAAMkB,CAAN,EAAS,CACV;;AAED3B,EAAAA,MAAM,CAAC4B,QAAP,CAAgBb,MAAhB,EAAwB,CAACc,GAAD,EAAMC,GAAN,KAAc;AACpC,QAAID,GAAJ,EAAS,OAAO,KAAP;AACT,QAAI,CAACC,GAAG,CAACC,eAAT,EAA0B,OAAO,KAAP;;AAC1B,QAAIjB,IAAI,CAACG,OAAL,IAAgBf,MAAM,CAAC8B,EAAP,CAAUlB,IAAI,CAACG,OAAf,EAAwBa,GAAG,CAACC,eAA5B,CAApB,EAAkE;AAChEE,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CJ,GAAG,CAACC,eAA/C;AACD;AACF,GAPD;AAQD,CAtBD","sourcesContent":["\nvar vCheck = require('@pm2/pm2-version-check')\nvar semver = require('semver')\nvar fs     = require('fs')\nvar cst    = require('../constants.js')\nvar os     = require('os')\n\nfunction hasDockerEnv() {\n\ttry {\n\t\tfs.statSync('/.dockerenv');\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nfunction hasDockerCGroup() {\n\ttry {\n\t\treturn fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nmodule.exports = function (opts) {\n  var params = {\n    state: opts.state,\n    version: opts.version\n  }\n\n  try {\n    params.os = os.type()\n    params.uptime = Math.floor(process.uptime())\n    params.nodev = process.versions.node\n    params.docker = hasDockerEnv() || hasDockerCGroup()\n  } catch(e) {\n  }\n\n  vCheck.runCheck(params, (err, pkg) => {\n    if (err) return false\n    if (!pkg.current_version) return false\n    if (opts.version && semver.lt(opts.version, pkg.current_version)) {\n      console.log('[PM2] This PM2 is not UP TO DATE')\n      console.log('[PM2] Upgrade to version %s', pkg.current_version)\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}