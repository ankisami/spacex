{"ast":null,"code":"const Table = require('cli-tableau');\n\nconst chalk = require('chalk');\n\nconst UxHelpers = require('./helpers.js');\n\nconst Common = require('../../Common.js');\n\nvar postModuleInfos = function (module_name, human_info) {\n  var table = new Table({\n    style: {\n      'padding-left': 1,\n      head: ['cyan', 'bold'],\n      compact: true\n    }\n  });\n  var disp = {};\n  human_info.unshift(['Module name', module_name]);\n  human_info.forEach(function (info) {\n    var obj = {};\n    obj[chalk.bold.cyan(info[0])] = info[1];\n    table.push(obj);\n  });\n  console.log();\n  console.log(chalk.bold.inverse(' Module %s infos '), module_name);\n  console.log(table.toString());\n};\n/**\n * Description\n * @method describeTable\n * @param {Object} proc process list\n */\n\n\nmodule.exports = function (proc) {\n  var table = new Table({\n    style: {\n      'padding-left': 1,\n      head: ['cyan', 'bold'],\n      compact: true\n    }\n  });\n  var pm2_env = proc.pm2_env;\n  var created_at = 'N/A';\n\n  if (pm2_env.axm_options && pm2_env.axm_options.human_info) {\n    postModuleInfos(pm2_env.name, pm2_env.axm_options.human_info);\n  }\n\n  try {\n    if (pm2_env.created_at != null) created_at = new Date(pm2_env.created_at).toISOString();\n  } catch (e) {}\n\n  console.log(chalk.bold.inverse(' Describing process with id %d - name %s '), pm2_env.pm_id, pm2_env.name);\n  UxHelpers.safe_push(table, {\n    'status': UxHelpers.colorStatus(pm2_env.status)\n  }, {\n    'name': pm2_env.name\n  }, {\n    'namespace': pm2_env.namespace\n  }, {\n    'version': pm2_env.version\n  }, {\n    'restarts': pm2_env.restart_time\n  }, {\n    'uptime': pm2_env.pm_uptime && pm2_env.status == 'online' ? UxHelpers.timeSince(pm2_env.pm_uptime) : 0\n  }, {\n    'script path': pm2_env.pm_exec_path\n  }, {\n    'script args': pm2_env.args ? (typeof pm2_env.args == 'string' ? JSON.parse(pm2_env.args.replace(/'/g, '\"')) : pm2_env.args).join(' ') : null\n  }, {\n    'error log path': pm2_env.pm_err_log_path\n  }, {\n    'out log path': pm2_env.pm_out_log_path\n  }, {\n    'pid path': pm2_env.pm_pid_path\n  }, {\n    'interpreter': pm2_env.exec_interpreter\n  }, {\n    'interpreter args': pm2_env.node_args.length != 0 ? pm2_env.node_args : null\n  }, {\n    'script id': pm2_env.pm_id\n  }, {\n    'exec cwd': pm2_env.pm_cwd\n  }, {\n    'exec mode': pm2_env.exec_mode\n  }, {\n    'node.js version': pm2_env.node_version\n  }, {\n    'node env': pm2_env.env.NODE_ENV\n  }, {\n    'watch & reload': pm2_env.watch ? chalk.green.bold('✔') : '✘'\n  }, {\n    'unstable restarts': pm2_env.unstable_restarts\n  }, {\n    'created at': created_at\n  });\n\n  if ('pm_log_path' in pm2_env) {\n    table.splice(6, 0, {\n      'entire log path': pm2_env.pm_log_path\n    });\n  }\n\n  if ('cron_restart' in pm2_env) {\n    table.splice(5, 0, {\n      'cron restart': pm2_env.cron_restart\n    });\n  }\n\n  console.log(table.toString());\n  /**\n   * Module conf display\n   */\n\n  if (pm2_env.axm_options && pm2_env.axm_options.module_conf && Object.keys(pm2_env.axm_options.module_conf).length > 0) {\n    var table_conf = new Table({\n      style: {\n        'padding-left': 1,\n        head: ['cyan', 'bold'],\n        compact: true\n      }\n    });\n    console.log('Process configuration');\n    Object.keys(pm2_env.axm_options.module_conf).forEach(function (key) {\n      var tmp = {};\n      tmp[key] = pm2_env.axm_options.module_conf[key];\n      UxHelpers.safe_push(table_conf, tmp);\n    });\n    console.log(table_conf.toString());\n  }\n  /**\n   * Versioning metadata\n   */\n\n\n  if (pm2_env.versioning) {\n    var table2 = new Table({\n      style: {\n        'padding-left': 1,\n        head: ['cyan', 'bold'],\n        compact: true\n      }\n    });\n    console.log(chalk.inverse.bold(' Revision control metadata '));\n    UxHelpers.safe_push(table2, {\n      'revision control': pm2_env.versioning.type\n    }, {\n      'remote url': pm2_env.versioning.url\n    }, {\n      'repository root': pm2_env.versioning.repo_path\n    }, {\n      'last update': pm2_env.versioning.update_time\n    }, {\n      'revision': pm2_env.versioning.revision\n    }, {\n      'comment': pm2_env.versioning.comment ? pm2_env.versioning.comment.trim().slice(0, 60) : ''\n    }, {\n      'branch': pm2_env.versioning.branch\n    });\n    console.log(table2.toString());\n  }\n\n  if (pm2_env.axm_actions && Object.keys(pm2_env.axm_actions).length > 0) {\n    var table_actions = new Table({\n      style: {\n        'padding-left': 1,\n        head: ['cyan', 'bold'],\n        compact: true\n      }\n    });\n    console.log(chalk.inverse.bold(' Actions available '));\n    pm2_env.axm_actions.forEach(function (action_set) {\n      UxHelpers.safe_push(table_actions, [action_set.action_name]);\n    });\n    console.log(table_actions.toString());\n    Common.printOut(chalk.white.italic(' Trigger via: pm2 trigger %s <action_name>\\n'), pm2_env.name);\n  }\n\n  if (pm2_env.axm_monitor && Object.keys(pm2_env.axm_monitor).length > 0) {\n    var table_probes = new Table({\n      style: {\n        'padding-left': 1,\n        head: ['cyan', 'bold'],\n        compact: true\n      }\n    });\n    console.log(chalk.inverse.bold(' Code metrics value '));\n    Object.keys(pm2_env.axm_monitor).forEach(function (key) {\n      var obj = {};\n      var metric_name = pm2_env.axm_monitor[key].hasOwnProperty(\"value\") ? pm2_env.axm_monitor[key].value : pm2_env.axm_monitor[key];\n      var metric_unit = pm2_env.axm_monitor[key].hasOwnProperty(\"unit\") ? pm2_env.axm_monitor[key].unit : '';\n      var value = `${metric_name} ${metric_unit}`;\n      obj[key] = value;\n      UxHelpers.safe_push(table_probes, obj);\n    });\n    console.log(table_probes.toString());\n  }\n\n  var table_env = new Table({\n    style: {\n      'padding-left': 1,\n      head: ['cyan', 'bold'],\n      compact: true\n    }\n  });\n  console.log(chalk.inverse.bold(' Divergent env variables from local env '));\n\n  var _env = Common.safeExtend({}, pm2_env);\n\n  var diff_env = {};\n  Object.keys(process.env).forEach(k => {\n    if (!_env[k] || _env[k] != process.env[k]) {\n      diff_env[k] = process.env[k];\n    }\n  });\n  Object.keys(diff_env).forEach(function (key) {\n    var obj = {};\n\n    if (_env[key]) {\n      obj[key] = _env[key].slice(0, process.stdout.columns - 60);\n      UxHelpers.safe_push(table_env, obj);\n    }\n  });\n  console.log(table_env.toString());\n  console.log();\n  Common.printOut(chalk.white.italic(' Add your own code metrics: http://bit.ly/code-metrics'));\n  Common.printOut(chalk.white.italic(' Use `pm2 logs %s [--lines 1000]` to display logs'), pm2_env.name);\n  Common.printOut(chalk.white.italic(' Use `pm2 env %s` to display environment variables'), pm2_env.pm_id);\n  Common.printOut(chalk.white.italic(' Use `pm2 monit` to monitor CPU and Memory usage'), pm2_env.name);\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/UX/pm2-describe.js"],"names":["Table","require","chalk","UxHelpers","Common","postModuleInfos","module_name","human_info","table","style","head","compact","disp","unshift","forEach","info","obj","bold","cyan","push","console","log","inverse","toString","module","exports","proc","pm2_env","created_at","axm_options","name","Date","toISOString","e","pm_id","safe_push","colorStatus","status","namespace","version","restart_time","pm_uptime","timeSince","pm_exec_path","args","JSON","parse","replace","join","pm_err_log_path","pm_out_log_path","pm_pid_path","exec_interpreter","node_args","length","pm_cwd","exec_mode","node_version","env","NODE_ENV","watch","green","unstable_restarts","splice","pm_log_path","cron_restart","module_conf","Object","keys","table_conf","key","tmp","versioning","table2","type","url","repo_path","update_time","revision","comment","trim","slice","branch","axm_actions","table_actions","action_set","action_name","printOut","white","italic","axm_monitor","table_probes","metric_name","hasOwnProperty","value","metric_unit","unit","table_env","_env","safeExtend","diff_env","process","k","stdout","columns"],"mappings":"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","sourcesContent":["const Table = require('cli-tableau')\nconst chalk = require('chalk')\nconst UxHelpers = require('./helpers.js')\nconst Common = require('../../Common.js')\n\nvar postModuleInfos = function(module_name, human_info) {\n  var table = new Table({\n    style : {'padding-left' : 1, head : ['cyan', 'bold'], compact : true}\n  })\n\n  var disp = {}\n\n  human_info.unshift(['Module name', module_name])\n  human_info.forEach(function(info) {\n    var obj = {}\n    obj[chalk.bold.cyan(info[0])] = info[1]\n    table.push(obj)\n  })\n\n  console.log()\n  console.log(chalk.bold.inverse(' Module %s infos '), module_name)\n  console.log(table.toString())\n}\n\n/**\n * Description\n * @method describeTable\n * @param {Object} proc process list\n */\nmodule.exports = function(proc) {\n  var table = new Table({\n    style : {'padding-left' : 1, head : ['cyan', 'bold'], compact : true}\n  })\n\n  var pm2_env = proc.pm2_env\n\n  var created_at = 'N/A'\n\n  if (pm2_env.axm_options && pm2_env.axm_options.human_info) {\n    postModuleInfos(pm2_env.name, pm2_env.axm_options.human_info)\n  }\n\n  try {\n    if (pm2_env.created_at != null)\n      created_at = new Date(pm2_env.created_at).toISOString()\n  } catch (e) {\n  }\n\n  console.log(chalk.bold.inverse(' Describing process with id %d - name %s '), pm2_env.pm_id, pm2_env.name)\n  UxHelpers.safe_push(table,\n            { 'status' : UxHelpers.colorStatus(pm2_env.status) },\n            { 'name': pm2_env.name },\n            { 'namespace': pm2_env.namespace },\n            { 'version': pm2_env.version },\n            { 'restarts' : pm2_env.restart_time },\n            { 'uptime' : (pm2_env.pm_uptime && pm2_env.status == 'online') ? UxHelpers.timeSince(pm2_env.pm_uptime) : 0 },\n            { 'script path' : pm2_env.pm_exec_path },\n            { 'script args' : pm2_env.args ? (typeof pm2_env.args == 'string' ? JSON.parse(pm2_env.args.replace(/'/g, '\"')):pm2_env.args).join(' ') : null },\n            { 'error log path' : pm2_env.pm_err_log_path },\n            { 'out log path' : pm2_env.pm_out_log_path },\n            { 'pid path' : pm2_env.pm_pid_path },\n\n            { 'interpreter' : pm2_env.exec_interpreter },\n            { 'interpreter args' : pm2_env.node_args.length != 0 ? pm2_env.node_args : null },\n\n            { 'script id' : pm2_env.pm_id },\n            { 'exec cwd' : pm2_env.pm_cwd },\n\n            { 'exec mode' : pm2_env.exec_mode },\n            { 'node.js version' : pm2_env.node_version },\n            { 'node env': pm2_env.env.NODE_ENV },\n            { 'watch & reload' : pm2_env.watch ? chalk.green.bold('✔') : '✘' },\n            { 'unstable restarts' : pm2_env.unstable_restarts },\n            { 'created at' : created_at }\n           )\n\n  if ('pm_log_path' in pm2_env){\n    table.splice(6, 0, {'entire log path': pm2_env.pm_log_path})\n  }\n\n  if ('cron_restart' in pm2_env){\n    table.splice(5, 0, {'cron restart': pm2_env.cron_restart})\n  }\n\n  console.log(table.toString())\n\n  /**\n   * Module conf display\n   */\n  if (pm2_env.axm_options &&\n      pm2_env.axm_options.module_conf &&\n      Object.keys(pm2_env.axm_options.module_conf).length > 0) {\n    var table_conf = new Table({\n      style : {'padding-left' : 1, head : ['cyan', 'bold'], compact : true}\n    })\n    console.log('Process configuration')\n\n    Object.keys(pm2_env.axm_options.module_conf).forEach(function(key) {\n      var tmp = {}\n      tmp[key] = pm2_env.axm_options.module_conf[key]\n      UxHelpers.safe_push(table_conf, tmp)\n    })\n\n    console.log(table_conf.toString())\n  }\n\n  /**\n   * Versioning metadata\n   */\n  if (pm2_env.versioning) {\n\n    var table2 = new Table({\n      style : {'padding-left' : 1, head : ['cyan', 'bold'], compact : true}\n    })\n\n    console.log(chalk.inverse.bold(' Revision control metadata '))\n    UxHelpers.safe_push(table2,\n              { 'revision control' : pm2_env.versioning.type },\n              { 'remote url' : pm2_env.versioning.url },\n              { 'repository root' : pm2_env.versioning.repo_path },\n              { 'last update' : pm2_env.versioning.update_time },\n              { 'revision' : pm2_env.versioning.revision },\n              { 'comment' :  pm2_env.versioning.comment ? pm2_env.versioning.comment.trim().slice(0, 60) : '' },\n              { 'branch' :  pm2_env.versioning.branch }\n             )\n    console.log(table2.toString())\n  }\n\n  if (pm2_env.axm_actions && Object.keys(pm2_env.axm_actions).length > 0) {\n    var table_actions = new Table({\n      style : {'padding-left' : 1, head : ['cyan', 'bold'], compact : true}\n    })\n\n    console.log(chalk.inverse.bold(' Actions available '))\n    pm2_env.axm_actions.forEach(function(action_set) {\n      UxHelpers.safe_push(table_actions, [action_set.action_name])\n    })\n\n    console.log(table_actions.toString())\n    Common.printOut(chalk.white.italic(' Trigger via: pm2 trigger %s <action_name>\\n'), pm2_env.name)\n  }\n\n  if (pm2_env.axm_monitor && Object.keys(pm2_env.axm_monitor).length > 0) {\n    var table_probes = new Table({\n      style : {'padding-left' : 1, head : ['cyan', 'bold'], compact : true}\n    })\n\n    console.log(chalk.inverse.bold(' Code metrics value '))\n    Object.keys(pm2_env.axm_monitor).forEach(function(key) {\n      var obj = {}\n      var metric_name = pm2_env.axm_monitor[key].hasOwnProperty(\"value\") ? pm2_env.axm_monitor[key].value : pm2_env.axm_monitor[key]\n      var metric_unit = pm2_env.axm_monitor[key].hasOwnProperty(\"unit\") ? pm2_env.axm_monitor[key].unit : ''\n      var value = `${metric_name} ${metric_unit}`\n      obj[key] = value\n      UxHelpers.safe_push(table_probes, obj)\n    })\n\n    console.log(table_probes.toString())\n  }\n\n  var table_env = new Table({\n    style : {'padding-left' : 1, head : ['cyan', 'bold'], compact : true}\n  })\n\n  console.log(chalk.inverse.bold(' Divergent env variables from local env '))\n\n  var _env = Common.safeExtend({}, pm2_env)\n  var diff_env = {}\n\n  Object.keys(process.env).forEach(k => {\n    if (!_env[k] || _env[k] != process.env[k]) {\n      diff_env[k] = process.env[k]\n    }\n  })\n\n  Object.keys(diff_env).forEach(function(key) {\n    var obj = {}\n    if (_env[key]) {\n      obj[key] = _env[key].slice(0, process.stdout.columns - 60)\n      UxHelpers.safe_push(table_env, obj)\n    }\n  })\n\n  console.log(table_env.toString())\n  console.log()\n  Common.printOut(chalk.white.italic(' Add your own code metrics: http://bit.ly/code-metrics'))\n  Common.printOut(chalk.white.italic(' Use `pm2 logs %s [--lines 1000]` to display logs'), pm2_env.name)\n  Common.printOut(chalk.white.italic(' Use `pm2 env %s` to display environment variables'), pm2_env.pm_id)\n  Common.printOut(chalk.white.italic(' Use `pm2 monit` to monitor CPU and Memory usage'), pm2_env.name)\n}\n"]},"metadata":{},"sourceType":"script"}