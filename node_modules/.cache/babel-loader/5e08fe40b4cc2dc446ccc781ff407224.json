{"ast":null,"code":"/**\n * log.js - log element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar util = require('util');\n\nvar nextTick = global.setImmediate || process.nextTick.bind(process);\n\nvar Node = require('./node');\n\nvar ScrollableText = require('./scrollabletext');\n/**\n * Log\n */\n\n\nfunction Log(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Log(options);\n  }\n\n  options = options || {};\n  ScrollableText.call(this, options);\n  this.scrollback = options.scrollback != null ? options.scrollback : Infinity;\n  this.scrollOnInput = options.scrollOnInput;\n  this.on('set content', function () {\n    if (!self._userScrolled || self.scrollOnInput) {\n      nextTick(function () {\n        self.setScrollPerc(100);\n        self._userScrolled = false;\n        self.screen.render();\n      });\n    }\n  });\n}\n\nLog.prototype.__proto__ = ScrollableText.prototype;\nLog.prototype.type = 'log';\n\nLog.prototype.log = Log.prototype.add = function () {\n  var args = Array.prototype.slice.call(arguments);\n\n  if (typeof args[0] === 'object') {\n    args[0] = util.inspect(args[0], true, 20, true);\n  }\n\n  var text = util.format.apply(util, args);\n  this.emit('log', text);\n  var ret = this.pushLine(text);\n\n  if (this._clines.fake.length > this.scrollback) {\n    this.shiftLine(0, this.scrollback / 3 | 0);\n  }\n\n  return ret;\n};\n\nLog.prototype._scroll = Log.prototype.scroll;\n\nLog.prototype.scroll = function (offset, always) {\n  if (offset === 0) return this._scroll(offset, always);\n  this._userScrolled = true;\n\n  var ret = this._scroll(offset, always);\n\n  if (this.getScrollPerc() === 100) {\n    this._userScrolled = false;\n  }\n\n  return ret;\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Log;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/log.js"],"names":["util","require","nextTick","global","setImmediate","process","bind","Node","ScrollableText","Log","options","self","call","scrollback","Infinity","scrollOnInput","on","_userScrolled","setScrollPerc","screen","render","prototype","__proto__","type","log","add","args","Array","slice","arguments","inspect","text","format","apply","emit","ret","pushLine","_clines","fake","length","shiftLine","_scroll","scroll","offset","always","getScrollPerc","module","exports"],"mappings":"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","sourcesContent":["/**\n * log.js - log element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar util = require('util');\n\nvar nextTick = global.setImmediate || process.nextTick.bind(process);\n\nvar Node = require('./node');\nvar ScrollableText = require('./scrollabletext');\n\n/**\n * Log\n */\n\nfunction Log(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Log(options);\n  }\n\n  options = options || {};\n\n  ScrollableText.call(this, options);\n\n  this.scrollback = options.scrollback != null\n    ? options.scrollback\n    : Infinity;\n  this.scrollOnInput = options.scrollOnInput;\n\n  this.on('set content', function() {\n    if (!self._userScrolled || self.scrollOnInput) {\n      nextTick(function() {\n        self.setScrollPerc(100);\n        self._userScrolled = false;\n        self.screen.render();\n      });\n    }\n  });\n}\n\nLog.prototype.__proto__ = ScrollableText.prototype;\n\nLog.prototype.type = 'log';\n\nLog.prototype.log =\nLog.prototype.add = function() {\n  var args = Array.prototype.slice.call(arguments);\n  if (typeof args[0] === 'object') {\n    args[0] = util.inspect(args[0], true, 20, true);\n  }\n  var text = util.format.apply(util, args);\n  this.emit('log', text);\n  var ret = this.pushLine(text);\n  if (this._clines.fake.length > this.scrollback) {\n    this.shiftLine(0, (this.scrollback / 3) | 0);\n  }\n  return ret;\n};\n\nLog.prototype._scroll = Log.prototype.scroll;\nLog.prototype.scroll = function(offset, always) {\n  if (offset === 0) return this._scroll(offset, always);\n  this._userScrolled = true;\n  var ret = this._scroll(offset, always);\n  if (this.getScrollPerc() === 100) {\n    this._userScrolled = false;\n  }\n  return ret;\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Log;\n"]},"metadata":{},"sourceType":"script"}