{"ast":null,"code":"var Configuration = require('../../Configuration.js');\n\nvar cst = require('../../../constants.js');\n\nvar Common = require('../../Common');\n\nvar forEachLimit = require('async/forEachLimit');\n\nconst sexec = require('../../tools/sexec.js');\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar os = require('os');\n\nvar spawn = require('child_process').spawn;\n\nvar exec = require('child_process').exec;\n\nvar execSync = require('child_process').execSync;\n\nmodule.exports = {\n  install,\n  uninstall,\n  start,\n  publish,\n  package\n};\n/**\n * Module management to manage tarball packages\n *\n * pm2 install http.tar.gz\n * pm2 uninstall http\n *\n * - the first and only folder in the tarball must be called module (tar zcvf http module/)\n * - a package.json must be present with attribute \"name\", \"version\" and \"pm2\" to declare apps to run\n */\n\nfunction install(PM2, module_filepath, opts, cb) {\n  // Remote file retrieval\n  if (module_filepath.includes('http') === true) {\n    var target_file = module_filepath.split('/').pop();\n    var target_filepath = path.join(os.tmpdir(), target_file);\n    opts.install_url = module_filepath;\n    return retrieveRemote(module_filepath, target_filepath, err => {\n      if (err) {\n        Common.errMod(err);\n        process.exit(1);\n      }\n\n      installLocal(PM2, target_filepath, opts, cb);\n    });\n  } // Local install\n\n\n  installLocal(PM2, module_filepath, opts, cb);\n}\n\nfunction retrieveRemote(url, dest, cb) {\n  Common.logMod(`Retrieving remote package ${url}...`);\n  var wget = spawn('wget', [url, '-O', dest, '-q'], {\n    stdio: 'inherit',\n    env: process.env,\n    shell: true\n  });\n  wget.on('error', err => {\n    console.error(err.stack || err);\n  });\n  wget.on('close', code => {\n    if (code !== 0) return cb(new Error('Could not download'));\n    return cb(null);\n  });\n}\n\nfunction installLocal(PM2, module_filepath, opts, cb) {\n  Common.logMod(`Installing package ${module_filepath}`); // Get module name by unpacking the module/package.json only and read the name attribute\n\n  getModuleName(module_filepath, function (err, module_name) {\n    if (err) return cb(err);\n    Common.logMod(`Module name is ${module_name}`);\n    Common.logMod(`Depackaging module...`);\n    var install_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n\n    require('mkdirp').sync(install_path);\n\n    var install_instance = spawn('tar', ['zxf', module_filepath, '-C', install_path, '--strip-components 1'], {\n      stdio: 'inherit',\n      env: process.env,\n      shell: true\n    });\n    install_instance.on('close', function (code) {\n      Common.logMod(`Module depackaged in ${install_path}`);\n      if (code == 0) return runInstall(PM2, install_path, module_name, opts, cb);\n      return PM2.exitCli(1);\n    });\n    install_instance.on('error', function (err) {\n      console.error(err.stack || err);\n    });\n  });\n}\n\nfunction deleteModulePath(module_name) {\n  var sanitized = module_name.replace(/\\./g, '');\n  execSync(`rm -r ${path.join(cst.DEFAULT_MODULE_PATH, module_name)}`, {\n    silent: true\n  });\n}\n\nfunction runInstall(PM2, target_path, module_name, opts, cb) {\n  var config_file = path.join(target_path, 'package.json');\n  var conf;\n\n  try {\n    conf = require(config_file);\n    module_name = conf.name;\n  } catch (e) {\n    Common.errMod(new Error('Cannot find package.json file with name attribute at least'));\n  } // Force with the name in the package.json\n\n\n  opts.started_as_module = true;\n  opts.cwd = target_path;\n  if (needPrefix(conf)) opts.name_prefix = module_name;\n\n  if (opts.install) {\n    Common.logMod(`Running YARN install...`);\n    sexec(`cd ${target_path} ; yarn install`, {\n      silent: false\n    }, function (code) {\n      // Start apps under \"apps\" or \"pm2\" attribute\n      Common.logMod(`Starting ${target_path}`);\n      PM2.start(conf, opts, function (err, data) {\n        if (err) return cb(err);\n        Configuration.setSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`, {\n          source: 'tarball',\n          install_url: opts.install_url,\n          installed_at: Date.now()\n        });\n        Common.logMod(`Module INSTALLED and STARTED`);\n        return cb(null, 'Module installed & Started');\n      });\n    });\n  } else {\n    PM2.start(conf, opts, function (err, data) {\n      if (err) return cb(err);\n      Configuration.setSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`, {\n        source: 'tarball',\n        install_url: opts.install_url,\n        installed_at: Date.now()\n      });\n      Common.logMod(`Module INSTALLED and STARTED`);\n      return cb(null, 'Module installed & Started');\n    });\n  }\n}\n\nfunction start(PM2, module_name, cb) {\n  var module_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Starting TAR module ' + module_name);\n  var package_json_path = path.join(module_path, 'package.json');\n  var module_conf = Configuration.getSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`);\n\n  try {\n    var conf = require(package_json_path);\n  } catch (e) {\n    Common.printError(`Could not find package.json as ${package_json_path}`);\n    return cb();\n  }\n\n  var opts = {};\n  opts.started_as_module = true;\n  opts.cwd = module_path;\n  if (module_conf.install_url) opts.install_url = module_conf.install_url;\n  if (needPrefix(conf)) opts.name_prefix = module_name;\n  PM2.start(conf, opts, function (err, data) {\n    if (err) {\n      Common.printError(`Could not start ${module_name} ${module_path}`);\n      return cb();\n    }\n\n    Common.printOut(`${cst.PREFIX_MSG_MOD} Module ${module_name} STARTED`);\n    return cb();\n  });\n}\n/**\n * Retrieve from module package.json the name of each application\n * delete process and delete folder\n */\n\n\nfunction uninstall(PM2, module_name, cb) {\n  var module_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n  Common.logMod(`Removing ${module_name} from auto startup`);\n\n  try {\n    var pkg = require(path.join(module_path, 'package.json'));\n  } catch (e) {\n    Common.errMod('Could not retrieve module package.json');\n    return cb(e);\n  }\n\n  var apps = pkg.apps || pkg.pm2;\n  apps = [].concat(apps);\n  /**\n   * Some time a module can have multiple processes\n   */\n\n  forEachLimit(apps, 1, (app, next) => {\n    var app_name;\n\n    if (!app.name) {\n      Common.renderApplicationName(app);\n    }\n\n    if (apps.length > 1) app_name = `${module_name}:${app.name}`;else if (apps.length == 1 && pkg.name != apps[0].name) app_name = `${module_name}:${app.name}`;else app_name = app.name;\n\n    PM2._operate('deleteProcessId', app_name, () => {\n      deleteModulePath(module_name);\n      next();\n    });\n  }, () => {\n    Configuration.unsetSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`);\n    cb(null);\n  });\n}\n/**\n * Uncompress only module/package.json and retrieve the \"name\" attribute in the package.json\n */\n\n\nfunction getModuleName(module_filepath, cb) {\n  var tmp_folder = path.join(os.tmpdir(), cst.MODULE_BASEFOLDER);\n  var install_instance = spawn('tar', ['zxf', module_filepath, '-C', os.tmpdir(), `${cst.MODULE_BASEFOLDER}/package.json`], {\n    stdio: 'inherit',\n    env: process.env,\n    shell: true\n  });\n  install_instance.on('close', function (code) {\n    try {\n      var pkg = JSON.parse(fs.readFileSync(path.join(tmp_folder, `package.json`)));\n      return cb(null, pkg.name);\n    } catch (e) {\n      return cb(e);\n    }\n  });\n}\n\nfunction package(module_path, target_path, cb) {\n  var base_folder = path.dirname(module_path);\n  var module_folder_name = path.basename(module_path);\n\n  var pkg = require(path.join(module_path, 'package.json'));\n\n  var pkg_name = `${module_folder_name}-v${pkg.version.replace(/\\./g, '-')}.tar.gz`;\n  var target_fullpath = path.join(target_path, pkg_name);\n  var cmd = `tar zcf ${target_fullpath} -C ${base_folder} --transform 's,${module_folder_name},module,' ${module_folder_name}`;\n  Common.logMod(`Gziping ${module_path} to ${target_fullpath}`);\n  var tar = exec(cmd, (err, sto, ste) => {\n    if (err) {\n      console.log(sto.toString().trim());\n      console.log(ste.toString().trim());\n    }\n  });\n  tar.on('close', function (code) {\n    cb(code == 0 ? null : code, {\n      package_name: pkg_name,\n      path: target_fullpath\n    });\n  });\n}\n\nfunction publish(PM2, folder, cb) {\n  var target_folder = folder ? path.resolve(folder) : process.cwd();\n\n  try {\n    var pkg = JSON.parse(fs.readFileSync(path.join(target_folder, 'package.json')).toString());\n  } catch (e) {\n    Common.errMod(`${process.cwd()} module does not contain any package.json`);\n    process.exit(1);\n  }\n\n  if (!pkg.name) throw new Error('Attribute name should be present');\n  if (!pkg.version) throw new Error('Attribute version should be present');\n  if (!pkg.pm2 && !pkg.apps) throw new Error('Attribute apps should be present');\n  var current_path = target_folder;\n  var module_name = path.basename(current_path);\n  var target_path = os.tmpdir();\n  Common.logMod(`Starting publishing procedure for ${module_name}@${pkg.version}`);\n  package(current_path, target_path, (err, res) => {\n    if (err) {\n      Common.errMod('Can\\'t package, exiting');\n      process.exit(1);\n    }\n\n    Common.logMod(`Package [${pkg.name}] created in path ${res.path}`);\n    var data = {\n      module_data: {\n        file: res.path,\n        content_type: 'content/gzip'\n      },\n      id: pkg.name,\n      name: pkg.name,\n      version: pkg.version\n    };\n    var uri = `${PM2.pm2_configuration.registry}/api/v1/modules`;\n    Common.logMod(`Sending Package to remote ${pkg.name} ${uri}`);\n\n    require('needle').post(uri, data, {\n      multipart: true\n    }, function (err, res, body) {\n      if (err) {\n        Common.errMod(err);\n        process.exit(1);\n      }\n\n      if (res.statusCode !== 200) {\n        Common.errMod(`${pkg.name}-${pkg.version}: ${res.body.msg}`);\n        process.exit(1);\n      }\n\n      Common.logMod(`Module ${module_name} published under version ${pkg.version}`);\n      process.exit(0);\n    });\n  });\n}\n\nfunction needPrefix(conf) {\n  if (conf.apps && conf.apps.length > 1 || conf.pm2 && conf.pm2.length > 1 || conf.apps.length == 1 && conf.name != conf.apps[0].name) return true;\n  return false;\n}","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Modules/TAR.js"],"names":["Configuration","require","cst","Common","forEachLimit","sexec","path","fs","os","spawn","exec","execSync","module","exports","install","uninstall","start","publish","package","PM2","module_filepath","opts","cb","includes","target_file","split","pop","target_filepath","join","tmpdir","install_url","retrieveRemote","err","errMod","process","exit","installLocal","url","dest","logMod","wget","stdio","env","shell","on","console","error","stack","code","Error","getModuleName","module_name","install_path","DEFAULT_MODULE_PATH","sync","install_instance","runInstall","exitCli","deleteModulePath","sanitized","replace","silent","target_path","config_file","conf","name","e","started_as_module","cwd","needPrefix","name_prefix","data","setSync","MODULE_CONF_PREFIX_TAR","source","installed_at","Date","now","module_path","printOut","PREFIX_MSG_MOD","package_json_path","module_conf","getSync","printError","pkg","apps","pm2","concat","app","next","app_name","renderApplicationName","length","_operate","unsetSync","tmp_folder","MODULE_BASEFOLDER","JSON","parse","readFileSync","base_folder","dirname","module_folder_name","basename","pkg_name","version","target_fullpath","cmd","tar","sto","ste","log","toString","trim","package_name","folder","target_folder","resolve","current_path","res","module_data","file","content_type","id","uri","pm2_configuration","registry","post","multipart","body","statusCode","msg"],"mappings":"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","sourcesContent":["\nvar Configuration = require('../../Configuration.js');\nvar cst = require('../../../constants.js');\nvar Common = require('../../Common');\nvar forEachLimit  = require('async/forEachLimit');\nconst sexec = require('../../tools/sexec.js')\n\nvar path = require('path');\nvar fs = require('fs');\nvar os = require('os');\nvar spawn = require('child_process').spawn;\nvar exec = require('child_process').exec;\nvar execSync = require('child_process').execSync;\n\nmodule.exports = {\n  install,\n  uninstall,\n  start,\n  publish,\n  package\n}\n\n/**\n * Module management to manage tarball packages\n *\n * pm2 install http.tar.gz\n * pm2 uninstall http\n *\n * - the first and only folder in the tarball must be called module (tar zcvf http module/)\n * - a package.json must be present with attribute \"name\", \"version\" and \"pm2\" to declare apps to run\n */\n\nfunction install(PM2, module_filepath, opts, cb) {\n  // Remote file retrieval\n  if (module_filepath.includes('http') === true) {\n    var target_file = module_filepath.split('/').pop()\n    var target_filepath = path.join(os.tmpdir(), target_file)\n\n    opts.install_url = module_filepath\n\n    return retrieveRemote(module_filepath, target_filepath, (err) => {\n      if (err) {\n        Common.errMod(err)\n        process.exit(1)\n      }\n      installLocal(PM2, target_filepath, opts, cb)\n    })\n  }\n\n  // Local install\n  installLocal(PM2, module_filepath, opts, cb)\n}\n\nfunction retrieveRemote(url, dest, cb) {\n  Common.logMod(`Retrieving remote package ${url}...`)\n\n  var wget = spawn('wget', [url, '-O', dest, '-q'], {\n    stdio : 'inherit',\n    env: process.env,\n\t\tshell : true\n  })\n\n  wget.on('error', (err) => {\n    console.error(err.stack || err)\n  })\n\n  wget.on('close', (code) => {\n    if (code !== 0)\n      return cb(new Error('Could not download'))\n    return cb(null)\n  })\n}\n\nfunction installLocal(PM2, module_filepath, opts, cb) {\n  Common.logMod(`Installing package ${module_filepath}`)\n\n  // Get module name by unpacking the module/package.json only and read the name attribute\n  getModuleName(module_filepath, function(err, module_name) {\n    if (err) return cb(err)\n\n    Common.logMod(`Module name is ${module_name}`)\n\n    Common.logMod(`Depackaging module...`)\n\n    var install_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n\n    require('mkdirp').sync(install_path)\n\n    var install_instance = spawn('tar', ['zxf', module_filepath, '-C', install_path, '--strip-components 1'], {\n      stdio : 'inherit',\n      env: process.env,\n\t\t  shell : true\n    })\n\n    install_instance.on('close', function(code) {\n      Common.logMod(`Module depackaged in ${install_path}`)\n      if (code == 0)\n        return runInstall(PM2, install_path, module_name, opts, cb)\n      return PM2.exitCli(1)\n    });\n\n    install_instance.on('error', function (err) {\n      console.error(err.stack || err);\n    });\n  })\n}\n\nfunction deleteModulePath(module_name) {\n  var sanitized = module_name.replace(/\\./g, '')\n  execSync(`rm -r ${path.join(cst.DEFAULT_MODULE_PATH, module_name)}`, { silent: true })\n}\n\nfunction runInstall(PM2, target_path, module_name, opts, cb) {\n  var config_file = path.join(target_path, 'package.json')\n  var conf\n\n  try {\n    conf = require(config_file)\n    module_name = conf.name\n  } catch(e) {\n    Common.errMod(new Error('Cannot find package.json file with name attribute at least'));\n  }\n\n  // Force with the name in the package.json\n  opts.started_as_module = true\n  opts.cwd = target_path\n\n  if (needPrefix(conf))\n    opts.name_prefix = module_name\n\n  if (opts.install) {\n    Common.logMod(`Running YARN install...`)\n\n    sexec(`cd ${target_path} ; yarn install`, {silent: false}, function(code) {\n      // Start apps under \"apps\" or \"pm2\" attribute\n      Common.logMod(`Starting ${target_path}`)\n      PM2.start(conf, opts, function(err, data) {\n        if (err) return cb(err)\n\n        Configuration.setSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`, {\n          source: 'tarball',\n          install_url: opts.install_url,\n          installed_at: Date.now()\n        })\n\n        Common.logMod(`Module INSTALLED and STARTED`)\n        return cb(null, 'Module installed & Started')\n      })\n    })\n  }\n  else {\n    PM2.start(conf, opts, function(err, data) {\n      if (err) return cb(err)\n\n      Configuration.setSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`, {\n        source: 'tarball',\n        install_url: opts.install_url,\n        installed_at: Date.now()\n      })\n\n      Common.logMod(`Module INSTALLED and STARTED`)\n      return cb(null, 'Module installed & Started')\n    })\n  }\n}\n\nfunction start(PM2, module_name, cb) {\n  var module_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Starting TAR module ' + module_name);\n  var package_json_path = path.join(module_path, 'package.json');\n  var module_conf = Configuration.getSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`)\n\n  try {\n    var conf = require(package_json_path)\n  } catch(e) {\n    Common.printError(`Could not find package.json as ${package_json_path}`)\n    return cb()\n  }\n\n  var opts = {};\n\n  opts.started_as_module = true\n  opts.cwd = module_path\n\n  if (module_conf.install_url)\n    opts.install_url = module_conf.install_url\n\n  if (needPrefix(conf))\n    opts.name_prefix = module_name\n\n  PM2.start(conf, opts, function(err, data) {\n    if (err) {\n      Common.printError(`Could not start ${module_name} ${module_path}`)\n      return cb()\n    }\n\n    Common.printOut(`${cst.PREFIX_MSG_MOD} Module ${module_name} STARTED`)\n    return cb();\n  })\n}\n\n/**\n * Retrieve from module package.json the name of each application\n * delete process and delete folder\n */\nfunction uninstall(PM2, module_name, cb) {\n  var module_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n\n  Common.logMod(`Removing ${module_name} from auto startup`)\n\n  try {\n    var pkg = require(path.join(module_path, 'package.json'))\n  } catch(e) {\n    Common.errMod('Could not retrieve module package.json');\n    return cb(e)\n  }\n\n  var apps = pkg.apps || pkg.pm2\n  apps = [].concat(apps);\n\n  /**\n   * Some time a module can have multiple processes\n   */\n  forEachLimit(apps, 1, (app, next) => {\n    var app_name\n\n    if (!app.name) {\n      Common.renderApplicationName(app)\n    }\n\n    if (apps.length > 1)\n      app_name = `${module_name}:${app.name}`\n    else if (apps.length == 1 && pkg.name != apps[0].name)\n      app_name = `${module_name}:${app.name}`\n    else\n      app_name = app.name\n\n    PM2._operate('deleteProcessId', app_name, () => {\n      deleteModulePath(module_name)\n      next()\n    })\n  }, () => {\n    Configuration.unsetSync(`${cst.MODULE_CONF_PREFIX_TAR}:${module_name}`)\n    cb(null)\n  })\n}\n\n\n/**\n * Uncompress only module/package.json and retrieve the \"name\" attribute in the package.json\n */\nfunction getModuleName(module_filepath, cb) {\n  var tmp_folder = path.join(os.tmpdir(), cst.MODULE_BASEFOLDER)\n\n  var install_instance = spawn('tar', ['zxf', module_filepath, '-C', os.tmpdir(), `${cst.MODULE_BASEFOLDER}/package.json`], {\n    stdio : 'inherit',\n    env: process.env,\n\t\tshell : true\n  })\n\n  install_instance.on('close', function(code) {\n    try {\n      var pkg = JSON.parse(fs.readFileSync(path.join(tmp_folder, `package.json`)))\n      return cb(null, pkg.name)\n    } catch(e) {\n      return cb(e)\n    }\n  });\n}\n\nfunction package(module_path, target_path, cb) {\n  var base_folder = path.dirname(module_path)\n  var module_folder_name = path.basename(module_path)\n  var pkg = require(path.join(module_path, 'package.json'))\n  var pkg_name = `${module_folder_name}-v${pkg.version.replace(/\\./g, '-')}.tar.gz`\n  var target_fullpath = path.join(target_path, pkg_name)\n\n  var cmd = `tar zcf ${target_fullpath} -C ${base_folder} --transform 's,${module_folder_name},module,' ${module_folder_name}`\n\n  Common.logMod(`Gziping ${module_path} to ${target_fullpath}`)\n\n  var tar = exec(cmd, (err, sto, ste) => {\n    if (err) {\n      console.log(sto.toString().trim())\n      console.log(ste.toString().trim())\n    }\n  })\n\n  tar.on('close', function (code) {\n    cb(code == 0 ? null : code, {\n      package_name: pkg_name,\n      path: target_fullpath\n    })\n  })\n}\n\nfunction publish(PM2, folder, cb) {\n  var target_folder = folder ? path.resolve(folder) : process.cwd()\n\n  try {\n    var pkg = JSON.parse(fs.readFileSync(path.join(target_folder, 'package.json')).toString())\n  } catch(e) {\n    Common.errMod(`${process.cwd()} module does not contain any package.json`)\n    process.exit(1)\n  }\n\n  if (!pkg.name) throw new Error('Attribute name should be present')\n  if (!pkg.version) throw new Error('Attribute version should be present')\n  if (!pkg.pm2 && !pkg.apps) throw new Error('Attribute apps should be present')\n\n  var current_path = target_folder\n  var module_name = path.basename(current_path)\n  var target_path = os.tmpdir()\n\n  Common.logMod(`Starting publishing procedure for ${module_name}@${pkg.version}`)\n\n  package(current_path, target_path, (err, res) => {\n    if (err) {\n      Common.errMod('Can\\'t package, exiting')\n      process.exit(1)\n    }\n\n    Common.logMod(`Package [${pkg.name}] created in path ${res.path}`)\n\n    var data = {\n      module_data: {\n        file: res.path,\n        content_type: 'content/gzip'\n      },\n      id: pkg.name,\n      name: pkg.name,\n      version: pkg.version\n    };\n\n    var uri = `${PM2.pm2_configuration.registry}/api/v1/modules`\n    Common.logMod(`Sending Package to remote ${pkg.name} ${uri}`)\n\n    require('needle')\n      .post(uri, data, { multipart: true }, function(err, res, body) {\n        if (err) {\n          Common.errMod(err)\n          process.exit(1)\n        }\n        if (res.statusCode !== 200) {\n          Common.errMod(`${pkg.name}-${pkg.version}: ${res.body.msg}`)\n          process.exit(1)\n        }\n        Common.logMod(`Module ${module_name} published under version ${pkg.version}`)\n        process.exit(0)\n      })\n  })\n}\n\nfunction needPrefix(conf) {\n  if ((conf.apps && conf.apps.length > 1) ||\n      (conf.pm2 && conf.pm2.length > 1) ||\n      (conf.apps.length == 1 && conf.name != conf.apps[0].name))\n    return true\n  return false\n}\n"]},"metadata":{},"sourceType":"script"}