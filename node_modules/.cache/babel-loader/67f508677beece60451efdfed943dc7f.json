{"ast":null,"code":"const path = require('path');\n\nconst fs = require('fs');\n\nconst os = require('os');\n\nconst spawn = require('child_process').spawn;\n\nconst chalk = require('chalk');\n\nconst readline = require('readline');\n\nconst which = require('../../tools/which.js');\n\nconst sexec = require('../../tools/sexec.js');\n\nconst copydirSync = require('../../tools/copydirSync.js');\n\nconst deleteFolderRecursive = require('../../tools/deleteFolderRecursive.js');\n\nvar Configuration = require('../../Configuration.js');\n\nvar cst = require('../../../constants.js');\n\nvar Common = require('../../Common');\n\nvar Utility = require('../../Utility.js');\n\nmodule.exports = {\n  install,\n  uninstall,\n  start,\n  publish,\n  generateSample,\n  localStart,\n  getModuleConf\n};\n/**\n * PM2 Module System.\n * Features:\n * - Installed modules are listed separately from user applications\n * - Always ON, a module is always up along PM2, to stop it, you need to uninstall it\n * - Install a runnable module from NPM/Github/HTTP (require a package.json only)\n * - Some modules add internal PM2 depencencies (like typescript, profiling...)\n * - Internally it uses NPM install (https://docs.npmjs.com/cli/install)\n * - Auto discover script to launch (first it checks the apps field, then bin and finally main attr)\n * - Generate sample module via pm2 module:generate <module_name>\n */\n\nfunction localStart(PM2, opts, cb) {\n  var proc_path = '',\n      cmd = '',\n      conf = {};\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Installing local module in DEVELOPMENT MODE with WATCH auto restart');\n  proc_path = process.cwd();\n  cmd = path.join(proc_path, cst.DEFAULT_MODULE_JSON);\n  Common.extend(opts, {\n    cmd: cmd,\n    development_mode: true,\n    proc_path: proc_path\n  });\n  return StartModule(PM2, opts, function (err, dt) {\n    if (err) return cb(err);\n    Common.printOut(cst.PREFIX_MSG_MOD + 'Module successfully installed and launched');\n    return cb(null, dt);\n  });\n}\n\nfunction generateSample(app_name, cb) {\n  var rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n\n  function samplize(module_name) {\n    var cmd1 = 'git clone https://github.com/pm2-hive/sample-module.git ' + module_name + '; cd ' + module_name + '; rm -rf .git';\n    var cmd2 = 'cd ' + module_name + ' ; sed -i \"s:sample-module:' + module_name + ':g\" package.json';\n    var cmd3 = 'cd ' + module_name + ' ; npm install';\n    Common.printOut(cst.PREFIX_MSG_MOD + 'Getting sample app');\n    sexec(cmd1, function (err) {\n      if (err) Common.printError(cst.PREFIX_MSG_MOD_ERR + err.message);\n      sexec(cmd2, function (err) {\n        console.log('');\n        sexec(cmd3, function (err) {\n          console.log('');\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Module sample created in folder: ', path.join(process.cwd(), module_name));\n          console.log('');\n          Common.printOut('Start module in development mode:');\n          Common.printOut('$ cd ' + module_name + '/');\n          Common.printOut('$ pm2 install . ');\n          console.log('');\n          Common.printOut('Module Log: ');\n          Common.printOut('$ pm2 logs ' + module_name);\n          console.log('');\n          Common.printOut('Uninstall module: ');\n          Common.printOut('$ pm2 uninstall ' + module_name);\n          console.log('');\n          Common.printOut('Force restart: ');\n          Common.printOut('$ pm2 restart ' + module_name);\n          return cb ? cb() : false;\n        });\n      });\n    });\n  }\n\n  if (app_name) return samplize(app_name);\n  rl.question(cst.PREFIX_MSG_MOD + \"Module name: \", function (module_name) {\n    samplize(module_name);\n  });\n}\n\nfunction publish(opts, cb) {\n  var rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n\n  var semver = require('semver');\n\n  var package_file = path.join(process.cwd(), 'package.json');\n\n  var package_json = require(package_file);\n\n  package_json.version = semver.inc(package_json.version, 'minor');\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Incrementing module to: %s@%s', package_json.name, package_json.version);\n  rl.question(\"Write & Publish? [Y/N]\", function (answer) {\n    if (answer != \"Y\") return cb();\n    fs.writeFile(package_file, JSON.stringify(package_json, null, 2), function (err, data) {\n      if (err) return cb(err);\n      Common.printOut(cst.PREFIX_MSG_MOD + 'Publishing module - %s@%s', package_json.name, package_json.version);\n      sexec('npm publish', function (code) {\n        Common.printOut(cst.PREFIX_MSG_MOD + 'Module - %s@%s successfully published', package_json.name, package_json.version);\n        Common.printOut(cst.PREFIX_MSG_MOD + 'Pushing module on Git');\n        sexec('git add . ; git commit -m \"' + package_json.version + '\"; git push origin master', function (code) {\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Installable with pm2 install %s', package_json.name);\n          return cb(null, package_json);\n        });\n      });\n    });\n  });\n}\n\nfunction moduleExistInLocalDB(CLI, module_name, cb) {\n  var modules = Configuration.getSync(cst.MODULE_CONF_PREFIX);\n  if (!modules) return cb(false);\n  var module_name_only = Utility.getCanonicModuleName(module_name);\n  modules = Object.keys(modules);\n  return cb(modules.indexOf(module_name_only) > -1 ? true : false);\n}\n\n;\n\nfunction install(CLI, module_name, opts, cb) {\n  moduleExistInLocalDB(CLI, module_name, function (exists) {\n    if (exists) {\n      Common.logMod('Module already installed. Updating.');\n      Rollback.backup(module_name);\n      return uninstall(CLI, module_name, function () {\n        return continueInstall(CLI, module_name, opts, cb);\n      });\n    }\n\n    return continueInstall(CLI, module_name, opts, cb);\n  });\n} // Builtin Node Switch\n\n\nfunction getNPMCommandLine(module_name, install_path) {\n  if (which('npm')) {\n    return spawn.bind(this, cst.IS_WINDOWS ? 'npm.cmd' : 'npm', ['install', module_name, '--loglevel=error', '--prefix', `\"${install_path}\"`], {\n      stdio: 'inherit',\n      env: process.env,\n      shell: true\n    });\n  } else {\n    return spawn.bind(this, cst.BUILTIN_NODE_PATH, [cst.BUILTIN_NPM_PATH, 'install', module_name, '--loglevel=error', '--prefix', `\"${install_path}\"`], {\n      stdio: 'inherit',\n      env: process.env,\n      shell: true\n    });\n  }\n}\n\nfunction continueInstall(CLI, module_name, opts, cb) {\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Calling ' + chalk.bold.red('[NPM]') + ' to install ' + module_name + ' ...');\n  var canonic_module_name = Utility.getCanonicModuleName(module_name);\n  var install_path = path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name);\n\n  require('mkdirp')(install_path).then(function () {\n    process.chdir(os.homedir());\n    var install_instance = getNPMCommandLine(module_name, install_path)();\n    install_instance.on('close', finalizeInstall);\n    install_instance.on('error', function (err) {\n      console.error(err.stack || err);\n    });\n  });\n\n  function finalizeInstall(code) {\n    if (code != 0) {\n      // If install has failed, revert to previous module version\n      return Rollback.revert(CLI, module_name, function () {\n        return cb(new Error('Installation failed via NPM, module has been restored to prev version'));\n      });\n    }\n\n    Common.printOut(cst.PREFIX_MSG_MOD + 'Module downloaded');\n    var proc_path = path.join(install_path, 'node_modules', canonic_module_name);\n    var package_json_path = path.join(proc_path, 'package.json'); // Append default configuration to module configuration\n\n    try {\n      var conf = JSON.parse(fs.readFileSync(package_json_path).toString()).config;\n\n      if (conf) {\n        Object.keys(conf).forEach(function (key) {\n          Configuration.setSyncIfNotExist(canonic_module_name + ':' + key, conf[key]);\n        });\n      }\n    } catch (e) {\n      Common.printError(e);\n    }\n\n    opts = Common.extend(opts, {\n      cmd: package_json_path,\n      development_mode: false,\n      proc_path: proc_path\n    });\n    Configuration.set(cst.MODULE_CONF_PREFIX + ':' + canonic_module_name, {\n      uid: opts.uid,\n      gid: opts.gid\n    }, function (err, data) {\n      if (err) return cb(err);\n      StartModule(CLI, opts, function (err, dt) {\n        if (err) return cb(err);\n        if (process.env.PM2_PROGRAMMATIC === 'true') return cb(null, dt);\n        CLI.conf(canonic_module_name, function () {\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Module successfully installed and launched');\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Checkout module options: `$ pm2 conf`');\n          return cb(null, dt);\n        });\n      });\n    });\n  }\n}\n\nfunction start(PM2, modules, module_name, cb) {\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Starting NPM module ' + module_name);\n  var install_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n  var proc_path = path.join(install_path, 'node_modules', module_name);\n  var package_json_path = path.join(proc_path, 'package.json');\n  var opts = {}; // Merge with embedded configuration inside module_conf (uid, gid)\n\n  Common.extend(opts, modules[module_name]); // Merge meta data to start module properly\n\n  Common.extend(opts, {\n    // package.json path\n    cmd: package_json_path,\n    // starting mode\n    development_mode: false,\n    // process cwd\n    proc_path: proc_path\n  });\n  StartModule(PM2, opts, function (err, dt) {\n    if (err) console.error(err);\n    return cb();\n  });\n}\n\nfunction uninstall(CLI, module_name, cb) {\n  var module_name_only = Utility.getCanonicModuleName(module_name);\n  var proc_path = path.join(cst.DEFAULT_MODULE_PATH, module_name_only);\n  Configuration.unsetSync(cst.MODULE_CONF_PREFIX + ':' + module_name_only);\n  CLI.deleteModule(module_name_only, function (err, data) {\n    console.log('Deleting', proc_path);\n\n    if (module_name != '.' && proc_path.includes('modules') === true) {\n      deleteFolderRecursive(proc_path);\n    }\n\n    if (err) {\n      Common.printError(err);\n      return cb(err);\n    }\n\n    return cb(null, data);\n  });\n}\n\nfunction getModuleConf(app_name) {\n  if (!app_name) throw new Error('No app_name defined');\n  var module_conf = Configuration.getAllSync();\n  var additional_env = {};\n\n  if (!module_conf[app_name]) {\n    additional_env = {};\n    additional_env[app_name] = {};\n  } else {\n    additional_env = Common.clone(module_conf[app_name]);\n    additional_env[app_name] = JSON.stringify(module_conf[app_name]);\n  }\n\n  return additional_env;\n}\n\nfunction StartModule(CLI, opts, cb) {\n  if (!opts.cmd && !opts.package) throw new Error('module package.json not defined');\n  if (!opts.development_mode) opts.development_mode = false;\n\n  var package_json = require(opts.cmd || opts.package);\n  /**\n   * Script file detection\n   * 1- *apps* field (default pm2 json configuration)\n   * 2- *bin* field\n   * 3- *main* field\n   */\n\n\n  if (!package_json.apps && !package_json.pm2) {\n    package_json.apps = {};\n\n    if (package_json.bin) {\n      var bin = Object.keys(package_json.bin)[0];\n      package_json.apps.script = package_json.bin[bin];\n    } else if (package_json.main) {\n      package_json.apps.script = package_json.main;\n    }\n  }\n\n  Common.extend(opts, {\n    cwd: opts.proc_path,\n    watch: opts.development_mode,\n    force_name: package_json.name,\n    started_as_module: true\n  }); // Start the module\n\n  CLI.start(package_json, opts, function (err, data) {\n    if (err) return cb(err);\n\n    if (opts.safe) {\n      Common.printOut(cst.PREFIX_MSG_MOD + 'Monitoring module behavior for potential issue (5secs...)');\n      var time = typeof opts.safe == 'boolean' ? 3000 : parseInt(opts.safe);\n      return setTimeout(function () {\n        CLI.describe(package_json.name, function (err, apps) {\n          if (err || apps[0].pm2_env.restart_time > 2) {\n            return Rollback.revert(CLI, package_json.name, function () {\n              return cb(new Error('New Module is instable, restored to previous version'));\n            });\n          }\n\n          return cb(null, data);\n        });\n      }, time);\n    }\n\n    return cb(null, data);\n  });\n}\n\n;\nvar Rollback = {\n  revert: function (CLI, module_name, cb) {\n    var canonic_module_name = Utility.getCanonicModuleName(module_name);\n    var backup_path = path.join(require('os').tmpdir(), canonic_module_name);\n    var module_path = path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name);\n\n    try {\n      fs.statSync(backup_path);\n    } catch (e) {\n      return cb(new Error('no backup found'));\n    }\n\n    Common.printOut(cst.PREFIX_MSG_MOD + chalk.bold.red('[[[[[ Module installation failure! ]]]]]'));\n    Common.printOut(cst.PREFIX_MSG_MOD + chalk.bold.red('[RESTORING TO PREVIOUS VERSION]'));\n    CLI.deleteModule(canonic_module_name, function () {\n      // Delete failing module\n      if (module_name.includes('modules') === true) deleteFolderRecursive(module_path); // Restore working version\n\n      copydirSync(backup_path, path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name));\n      var proc_path = path.join(module_path, 'node_modules', canonic_module_name);\n      var package_json_path = path.join(proc_path, 'package.json'); // Start module\n\n      StartModule(CLI, {\n        cmd: package_json_path,\n        development_mode: false,\n        proc_path: proc_path\n      }, cb);\n    });\n  },\n  backup: function (module_name) {\n    // Backup current module\n    var tmpdir = require('os').tmpdir();\n\n    var canonic_module_name = Utility.getCanonicModuleName(module_name);\n    var module_path = path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name);\n    copydirSync(module_path, path.join(tmpdir, canonic_module_name));\n  }\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Modules/NPM.js"],"names":["path","require","fs","os","spawn","chalk","readline","which","sexec","copydirSync","deleteFolderRecursive","Configuration","cst","Common","Utility","module","exports","install","uninstall","start","publish","generateSample","localStart","getModuleConf","PM2","opts","cb","proc_path","cmd","conf","printOut","PREFIX_MSG_MOD","process","cwd","join","DEFAULT_MODULE_JSON","extend","development_mode","StartModule","err","dt","app_name","rl","createInterface","input","stdin","output","stdout","samplize","module_name","cmd1","cmd2","cmd3","printError","PREFIX_MSG_MOD_ERR","message","console","log","question","semver","package_file","package_json","version","inc","name","answer","writeFile","JSON","stringify","data","code","moduleExistInLocalDB","CLI","modules","getSync","MODULE_CONF_PREFIX","module_name_only","getCanonicModuleName","Object","keys","indexOf","exists","logMod","Rollback","backup","continueInstall","getNPMCommandLine","install_path","bind","IS_WINDOWS","stdio","env","shell","BUILTIN_NODE_PATH","BUILTIN_NPM_PATH","bold","red","canonic_module_name","DEFAULT_MODULE_PATH","then","chdir","homedir","install_instance","on","finalizeInstall","error","stack","revert","Error","package_json_path","parse","readFileSync","toString","config","forEach","key","setSyncIfNotExist","e","set","uid","gid","PM2_PROGRAMMATIC","unsetSync","deleteModule","includes","module_conf","getAllSync","additional_env","clone","package","apps","pm2","bin","script","main","watch","force_name","started_as_module","safe","time","parseInt","setTimeout","describe","pm2_env","restart_time","backup_path","tmpdir","module_path","statSync"],"mappings":"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","sourcesContent":["const path          = require('path');\nconst fs            = require('fs');\nconst os            = require('os');\nconst spawn         = require('child_process').spawn;\nconst chalk         = require('chalk');\n\nconst readline = require('readline')\nconst which = require('../../tools/which.js')\nconst sexec = require('../../tools/sexec.js')\nconst copydirSync = require('../../tools/copydirSync.js')\nconst deleteFolderRecursive = require('../../tools/deleteFolderRecursive.js')\n\nvar Configuration = require('../../Configuration.js');\nvar cst           = require('../../../constants.js');\nvar Common        = require('../../Common');\nvar Utility       = require('../../Utility.js');\n\nmodule.exports = {\n  install,\n  uninstall,\n  start,\n  publish,\n  generateSample,\n  localStart,\n  getModuleConf\n}\n\n/**\n * PM2 Module System.\n * Features:\n * - Installed modules are listed separately from user applications\n * - Always ON, a module is always up along PM2, to stop it, you need to uninstall it\n * - Install a runnable module from NPM/Github/HTTP (require a package.json only)\n * - Some modules add internal PM2 depencencies (like typescript, profiling...)\n * - Internally it uses NPM install (https://docs.npmjs.com/cli/install)\n * - Auto discover script to launch (first it checks the apps field, then bin and finally main attr)\n * - Generate sample module via pm2 module:generate <module_name>\n */\n\nfunction localStart(PM2, opts, cb) {\n  var proc_path = '',\n      cmd  = '',\n      conf = {};\n\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Installing local module in DEVELOPMENT MODE with WATCH auto restart');\n  proc_path = process.cwd();\n\n  cmd = path.join(proc_path, cst.DEFAULT_MODULE_JSON);\n\n  Common.extend(opts, {\n    cmd : cmd,\n    development_mode : true,\n    proc_path : proc_path\n  });\n\n  return StartModule(PM2, opts, function(err, dt) {\n    if (err) return cb(err);\n    Common.printOut(cst.PREFIX_MSG_MOD + 'Module successfully installed and launched');\n    return cb(null, dt);\n  });\n}\n\nfunction generateSample(app_name, cb) {\n  var rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n\n  function samplize(module_name) {\n    var cmd1 = 'git clone https://github.com/pm2-hive/sample-module.git ' + module_name + '; cd ' + module_name + '; rm -rf .git';\n    var cmd2 = 'cd ' + module_name + ' ; sed -i \"s:sample-module:'+ module_name  +':g\" package.json';\n    var cmd3 = 'cd ' + module_name + ' ; npm install';\n\n    Common.printOut(cst.PREFIX_MSG_MOD + 'Getting sample app');\n\n    sexec(cmd1, function(err) {\n      if (err) Common.printError(cst.PREFIX_MSG_MOD_ERR + err.message);\n      sexec(cmd2, function(err) {\n        console.log('');\n        sexec(cmd3, function(err) {\n          console.log('');\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Module sample created in folder: ', path.join(process.cwd(), module_name));\n          console.log('');\n          Common.printOut('Start module in development mode:');\n          Common.printOut('$ cd ' + module_name + '/');\n          Common.printOut('$ pm2 install . ');\n          console.log('');\n\n          Common.printOut('Module Log: ');\n          Common.printOut('$ pm2 logs ' + module_name);\n          console.log('');\n          Common.printOut('Uninstall module: ');\n          Common.printOut('$ pm2 uninstall ' + module_name);\n          console.log('');\n          Common.printOut('Force restart: ');\n          Common.printOut('$ pm2 restart ' + module_name);\n          return cb ?  cb() : false;\n        });\n      });\n    });\n  }\n\n  if (app_name) return samplize(app_name);\n\n  rl.question(cst.PREFIX_MSG_MOD + \"Module name: \", function(module_name) {\n    samplize(module_name);\n  });\n}\n\nfunction publish(opts, cb) {\n  var rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n  });\n\n  var semver = require('semver');\n\n  var package_file = path.join(process.cwd(), 'package.json');\n\n  var package_json = require(package_file);\n\n  package_json.version = semver.inc(package_json.version, 'minor');\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Incrementing module to: %s@%s',\n                  package_json.name,\n                  package_json.version);\n\n\n  rl.question(\"Write & Publish? [Y/N]\", function(answer) {\n    if (answer != \"Y\")\n      return cb();\n\n\n    fs.writeFile(package_file, JSON.stringify(package_json, null, 2), function(err, data) {\n      if (err) return cb(err);\n\n      Common.printOut(cst.PREFIX_MSG_MOD + 'Publishing module - %s@%s',\n                      package_json.name,\n                      package_json.version);\n\n      sexec('npm publish', function(code) {\n        Common.printOut(cst.PREFIX_MSG_MOD + 'Module - %s@%s successfully published',\n                        package_json.name,\n                        package_json.version);\n\n        Common.printOut(cst.PREFIX_MSG_MOD + 'Pushing module on Git');\n        sexec('git add . ; git commit -m \"' + package_json.version + '\"; git push origin master', function(code) {\n\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Installable with pm2 install %s', package_json.name);\n          return cb(null, package_json);\n        });\n      });\n    });\n\n  });\n}\n\nfunction moduleExistInLocalDB(CLI, module_name, cb) {\n  var modules = Configuration.getSync(cst.MODULE_CONF_PREFIX);\n  if (!modules) return cb(false);\n  var module_name_only = Utility.getCanonicModuleName(module_name)\n  modules = Object.keys(modules);\n  return cb(modules.indexOf(module_name_only) > -1 ? true : false);\n};\n\nfunction install(CLI, module_name, opts, cb) {\n  moduleExistInLocalDB(CLI, module_name, function (exists) {\n    if (exists) {\n      Common.logMod('Module already installed. Updating.');\n\n      Rollback.backup(module_name);\n\n      return uninstall(CLI, module_name, function () {\n        return continueInstall(CLI, module_name, opts, cb);\n      });\n    }\n    return continueInstall(CLI, module_name, opts, cb);\n  })\n}\n\n// Builtin Node Switch\nfunction getNPMCommandLine(module_name, install_path) {\n  if (which('npm')) {\n    return spawn.bind(this, cst.IS_WINDOWS ? 'npm.cmd' : 'npm', ['install', module_name, '--loglevel=error', '--prefix', `\"${install_path}\"` ], {\n      stdio : 'inherit',\n      env: process.env,\n\t\t  shell : true\n    })\n  }\n  else {\n    return spawn.bind(this, cst.BUILTIN_NODE_PATH, [cst.BUILTIN_NPM_PATH, 'install', module_name, '--loglevel=error', '--prefix', `\"${install_path}\"`], {\n      stdio : 'inherit',\n      env: process.env,\n\t\t  shell : true\n    })\n  }\n}\n\nfunction continueInstall(CLI, module_name, opts, cb) {\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Calling ' + chalk.bold.red('[NPM]') + ' to install ' + module_name + ' ...');\n\n  var canonic_module_name = Utility.getCanonicModuleName(module_name);\n  var install_path = path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name);\n\n  require('mkdirp')(install_path)\n    .then(function() {\n      process.chdir(os.homedir());\n\n      var install_instance = getNPMCommandLine(module_name, install_path)();\n\n      install_instance.on('close', finalizeInstall);\n\n      install_instance.on('error', function (err) {\n        console.error(err.stack || err);\n      });\n    });\n\n  function finalizeInstall(code) {\n    if (code != 0) {\n      // If install has failed, revert to previous module version\n      return Rollback.revert(CLI, module_name, function() {\n        return cb(new Error('Installation failed via NPM, module has been restored to prev version'));\n      });\n    }\n\n    Common.printOut(cst.PREFIX_MSG_MOD + 'Module downloaded');\n\n    var proc_path = path.join(install_path, 'node_modules', canonic_module_name);\n    var package_json_path = path.join(proc_path, 'package.json');\n\n    // Append default configuration to module configuration\n    try {\n      var conf = JSON.parse(fs.readFileSync(package_json_path).toString()).config;\n\n      if (conf) {\n        Object.keys(conf).forEach(function(key) {\n          Configuration.setSyncIfNotExist(canonic_module_name + ':' + key, conf[key]);\n        });\n      }\n    } catch(e) {\n      Common.printError(e);\n    }\n\n    opts = Common.extend(opts, {\n      cmd : package_json_path,\n      development_mode : false,\n      proc_path : proc_path\n    });\n\n    Configuration.set(cst.MODULE_CONF_PREFIX + ':' + canonic_module_name, {\n      uid : opts.uid,\n      gid : opts.gid\n    }, function(err, data) {\n      if (err) return cb(err);\n\n      StartModule(CLI, opts, function(err, dt) {\n        if (err) return cb(err);\n\n        if (process.env.PM2_PROGRAMMATIC === 'true')\n          return cb(null, dt);\n\n        CLI.conf(canonic_module_name, function() {\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Module successfully installed and launched');\n          Common.printOut(cst.PREFIX_MSG_MOD + 'Checkout module options: `$ pm2 conf`');\n          return cb(null, dt);\n        });\n      });\n    });\n  }\n}\n\nfunction start(PM2, modules, module_name, cb) {\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Starting NPM module ' + module_name);\n\n  var install_path = path.join(cst.DEFAULT_MODULE_PATH, module_name);\n  var proc_path = path.join(install_path, 'node_modules', module_name);\n  var package_json_path = path.join(proc_path, 'package.json');\n\n  var opts = {};\n\n  // Merge with embedded configuration inside module_conf (uid, gid)\n  Common.extend(opts, modules[module_name]);\n\n  // Merge meta data to start module properly\n  Common.extend(opts, {\n    // package.json path\n    cmd : package_json_path,\n    // starting mode\n    development_mode : false,\n    // process cwd\n    proc_path : proc_path\n  });\n\n  StartModule(PM2, opts, function(err, dt) {\n    if (err) console.error(err);\n    return cb();\n  })\n}\n\nfunction uninstall(CLI, module_name, cb) {\n  var module_name_only = Utility.getCanonicModuleName(module_name)\n  var proc_path = path.join(cst.DEFAULT_MODULE_PATH, module_name_only);\n  Configuration.unsetSync(cst.MODULE_CONF_PREFIX + ':' + module_name_only);\n\n  CLI.deleteModule(module_name_only, function(err, data) {\n    console.log('Deleting', proc_path)\n    if (module_name != '.' && proc_path.includes('modules') === true) {\n      deleteFolderRecursive(proc_path)\n    }\n\n    if (err) {\n      Common.printError(err);\n      return cb(err);\n    }\n\n    return cb(null, data);\n  });\n}\n\nfunction getModuleConf(app_name) {\n  if (!app_name) throw new Error('No app_name defined');\n\n  var module_conf = Configuration.getAllSync();\n\n  var additional_env = {};\n\n  if (!module_conf[app_name]) {\n    additional_env = {};\n    additional_env[app_name] = {};\n  }\n  else {\n    additional_env = Common.clone(module_conf[app_name]);\n    additional_env[app_name] = JSON.stringify(module_conf[app_name]);\n  }\n  return additional_env;\n}\n\nfunction StartModule(CLI, opts, cb) {\n  if (!opts.cmd && !opts.package) throw new Error('module package.json not defined');\n  if (!opts.development_mode) opts.development_mode = false;\n\n  var package_json = require(opts.cmd || opts.package);\n\n  /**\n   * Script file detection\n   * 1- *apps* field (default pm2 json configuration)\n   * 2- *bin* field\n   * 3- *main* field\n   */\n  if (!package_json.apps && !package_json.pm2) {\n    package_json.apps = {};\n\n    if (package_json.bin) {\n      var bin = Object.keys(package_json.bin)[0];\n      package_json.apps.script = package_json.bin[bin];\n    }\n    else if (package_json.main) {\n      package_json.apps.script = package_json.main;\n    }\n  }\n\n  Common.extend(opts, {\n    cwd               : opts.proc_path,\n    watch             : opts.development_mode,\n    force_name        : package_json.name,\n    started_as_module : true\n  });\n\n  // Start the module\n  CLI.start(package_json, opts, function(err, data) {\n    if (err) return cb(err);\n\n    if (opts.safe) {\n      Common.printOut(cst.PREFIX_MSG_MOD + 'Monitoring module behavior for potential issue (5secs...)');\n\n      var time = typeof(opts.safe) == 'boolean' ? 3000 : parseInt(opts.safe);\n      return setTimeout(function() {\n        CLI.describe(package_json.name, function(err, apps) {\n          if (err || apps[0].pm2_env.restart_time > 2) {\n            return Rollback.revert(CLI, package_json.name, function() {\n              return cb(new Error('New Module is instable, restored to previous version'));\n            });\n          }\n          return cb(null, data);\n        });\n      }, time);\n    }\n\n    return cb(null, data);\n  });\n};\n\n\n\nvar Rollback = {\n  revert : function(CLI, module_name, cb) {\n    var canonic_module_name = Utility.getCanonicModuleName(module_name);\n    var backup_path = path.join(require('os').tmpdir(), canonic_module_name);\n    var module_path = path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name);\n\n    try {\n      fs.statSync(backup_path)\n    } catch(e) {\n      return cb(new Error('no backup found'));\n    }\n\n    Common.printOut(cst.PREFIX_MSG_MOD + chalk.bold.red('[[[[[ Module installation failure! ]]]]]'));\n    Common.printOut(cst.PREFIX_MSG_MOD + chalk.bold.red('[RESTORING TO PREVIOUS VERSION]'));\n\n    CLI.deleteModule(canonic_module_name, function() {\n      // Delete failing module\n\n      if (module_name.includes('modules') === true)\n        deleteFolderRecursive(module_path)\n      // Restore working version\n      copydirSync(backup_path, path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name));\n\n      var proc_path = path.join(module_path, 'node_modules', canonic_module_name);\n      var package_json_path = path.join(proc_path, 'package.json');\n\n      // Start module\n      StartModule(CLI, {\n        cmd : package_json_path,\n        development_mode : false,\n        proc_path : proc_path\n      }, cb);\n    });\n  },\n  backup : function(module_name) {\n    // Backup current module\n    var tmpdir = require('os').tmpdir();\n    var canonic_module_name = Utility.getCanonicModuleName(module_name);\n    var module_path = path.join(cst.DEFAULT_MODULE_PATH, canonic_module_name);\n    copydirSync(module_path, path.join(tmpdir, canonic_module_name));\n  }\n}\n"]},"metadata":{},"sourceType":"script"}