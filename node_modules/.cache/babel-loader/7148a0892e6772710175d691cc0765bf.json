{"ast":null,"code":"/**\n * tng.js - png reader\n * Copyright (c) 2015, Christopher Jeffrey (MIT License).\n * https://github.com/chjj/tng\n */\nvar fs = require('fs'),\n    util = require('util'),\n    path = require('path'),\n    zlib = require('zlib'),\n    assert = require('assert'),\n    cp = require('child_process'),\n    exec = cp.execFileSync;\n/**\n * PNG\n */\n\n\nfunction PNG(file, options) {\n  var buf, chunks, idat, pixels;\n\n  if (!(this instanceof PNG)) {\n    return new PNG(file, options);\n  }\n\n  if (!file) throw new Error('no file');\n  this.options = options || {};\n  this.colors = options.colors || require('blessed/lib/colors');\n  this.optimization = this.options.optimization || 'mem';\n  this.speed = this.options.speed || 1;\n\n  if (Buffer.isBuffer(file)) {\n    this.file = this.options.filename || null;\n    buf = file;\n  } else {\n    this.options.filename = file;\n    this.file = path.resolve(process.cwd(), file);\n    buf = fs.readFileSync(this.file);\n  }\n\n  this.format = buf.readUInt32BE(0) === 0x89504e47 ? 'png' : buf.slice(0, 3).toString('ascii') === 'GIF' ? 'gif' : buf.readUInt16BE(0) === 0xffd8 ? 'jpg' : path.extname(this.file).slice(1).toLowerCase() || 'png';\n\n  if (this.format !== 'png') {\n    try {\n      return this.toPNG(buf);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  chunks = this.parseRaw(buf);\n  idat = this.parseChunks(chunks);\n  pixels = this.parseLines(idat);\n  this.bmp = this.createBitmap(pixels);\n  this.cellmap = this.createCellmap(this.bmp);\n  this.frames = this.compileFrames(this.frames);\n}\n\nPNG.prototype.parseRaw = function (buf) {\n  var chunks = [],\n      index = 0,\n      i = 0,\n      buf,\n      len,\n      type,\n      name,\n      data,\n      crc,\n      check,\n      critical,\n      public_,\n      conforming,\n      copysafe,\n      pos;\n\n  this._debug(this.file);\n\n  if (buf.readUInt32BE(0) !== 0x89504e47 || buf.readUInt32BE(4) !== 0x0d0a1a0a) {\n    throw new Error('bad header');\n  }\n\n  i += 8;\n\n  while (i < buf.length) {\n    try {\n      len = buf.readUInt32BE(i);\n      i += 4;\n      pos = i;\n      type = buf.slice(i, i + 4);\n      name = type.toString('ascii');\n      i += 4;\n      data = buf.slice(i, i + len);\n      i += len;\n      check = this.crc32(buf.slice(pos, i));\n      crc = buf.readInt32BE(i);\n      i += 4;\n      critical = !!(~type[0] & 32);\n      public_ = !!(~type[1] & 32);\n      conforming = !!(~type[2] & 32);\n      copysafe = !!(~type[3] & 32);\n\n      if (crc !== check) {\n        throw new Error(name + ': bad crc');\n      }\n    } catch (e) {\n      if (this.options.debug) throw e;\n      break;\n    }\n\n    chunks.push({\n      index: index++,\n      id: name.toLowerCase(),\n      len: len,\n      pos: pos,\n      end: i,\n      type: type,\n      name: name,\n      data: data,\n      crc: crc,\n      check: check,\n      raw: buf.slice(pos, i),\n      flags: {\n        critical: critical,\n        public_: public_,\n        conforming: conforming,\n        copysafe: copysafe\n      }\n    });\n  }\n\n  return chunks;\n};\n\nPNG.prototype.parseChunks = function (chunks) {\n  var i, chunk, name, data, p, idat, info;\n\n  for (i = 0; i < chunks.length; i++) {\n    chunk = chunks[i];\n    name = chunk.id;\n    data = chunk.data;\n    info = {};\n\n    switch (name) {\n      case 'ihdr':\n        {\n          this.width = info.width = data.readUInt32BE(0);\n          this.height = info.height = data.readUInt32BE(4);\n          this.bitDepth = info.bitDepth = data.readUInt8(8);\n          this.colorType = info.colorType = data.readUInt8(9);\n          this.compression = info.compression = data.readUInt8(10);\n          this.filter = info.filter = data.readUInt8(11);\n          this.interlace = info.interlace = data.readUInt8(12);\n\n          switch (this.bitDepth) {\n            case 1:\n            case 2:\n            case 4:\n            case 8:\n            case 16:\n            case 24:\n            case 32:\n              break;\n\n            default:\n              throw new Error('bad bit depth: ' + this.bitDepth);\n          }\n\n          switch (this.colorType) {\n            case 0:\n            case 2:\n            case 3:\n            case 4:\n            case 6:\n              break;\n\n            default:\n              throw new Error('bad color: ' + this.colorType);\n          }\n\n          switch (this.compression) {\n            case 0:\n              break;\n\n            default:\n              throw new Error('bad compression: ' + this.compression);\n          }\n\n          switch (this.filter) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n              break;\n\n            default:\n              throw new Error('bad filter: ' + this.filter);\n          }\n\n          switch (this.interlace) {\n            case 0:\n            case 1:\n              break;\n\n            default:\n              throw new Error('bad interlace: ' + this.interlace);\n          }\n\n          break;\n        }\n\n      case 'plte':\n        {\n          this.palette = info.palette = [];\n\n          for (p = 0; p < data.length; p += 3) {\n            this.palette.push({\n              r: data[p + 0],\n              g: data[p + 1],\n              b: data[p + 2],\n              a: 255\n            });\n          }\n\n          break;\n        }\n\n      case 'idat':\n        {\n          this.size = this.size || 0;\n          this.size += data.length;\n          this.idat = this.idat || [];\n          this.idat.push(data);\n          info.size = data.length;\n          break;\n        }\n\n      case 'iend':\n        {\n          this.end = true;\n          break;\n        }\n\n      case 'trns':\n        {\n          this.alpha = info.alpha = Array.prototype.slice.call(data);\n\n          if (this.palette) {\n            for (p = 0; p < data.length; p++) {\n              if (!this.palette[p]) break;\n              this.palette[p].a = data[p];\n            }\n          }\n\n          break;\n        }\n      // https://wiki.mozilla.org/APNG_Specification\n\n      case 'actl':\n        {\n          this.actl = info = {};\n          this.frames = [];\n          this.actl.numFrames = data.readUInt32BE(0);\n          this.actl.numPlays = data.readUInt32BE(4);\n          break;\n        }\n\n      case 'fctl':\n        {\n          // IDAT is the first frame depending on the order:\n          // IDAT is a frame: acTL->fcTL->IDAT->[fcTL]->fdAT\n          // IDAT is not a frame: acTL->IDAT->[fcTL]->fdAT\n          if (!this.idat) {\n            this.idat = [];\n            this.frames.push({\n              idat: true,\n              fctl: info,\n              fdat: this.idat\n            });\n          } else {\n            this.frames.push({\n              fctl: info,\n              fdat: []\n            });\n          }\n\n          info.sequenceNumber = data.readUInt32BE(0);\n          info.width = data.readUInt32BE(4);\n          info.height = data.readUInt32BE(8);\n          info.xOffset = data.readUInt32BE(12);\n          info.yOffset = data.readUInt32BE(16);\n          info.delayNum = data.readUInt16BE(20);\n          info.delayDen = data.readUInt16BE(22);\n          info.disposeOp = data.readUInt8(24);\n          info.blendOp = data.readUInt8(25);\n          break;\n        }\n\n      case 'fdat':\n        {\n          info.sequenceNumber = data.readUInt32BE(0);\n          info.data = data.slice(4);\n          this.frames[this.frames.length - 1].fdat.push(info.data);\n          break;\n        }\n    }\n\n    chunk.info = info;\n  }\n\n  this._debug(chunks);\n\n  if (this.frames) {\n    this.frames = this.frames.map(function (frame, i) {\n      frame.fdat = this.decompress(frame.fdat);\n      if (!frame.fdat.length) throw new Error('no data');\n      return frame;\n    }, this);\n  }\n\n  idat = this.decompress(this.idat);\n  if (!idat.length) throw new Error('no data');\n  return idat;\n};\n\nPNG.prototype.parseLines = function (data) {\n  var pixels = [],\n      x,\n      p,\n      prior,\n      line,\n      filter,\n      samples,\n      pendingSamples,\n      ch,\n      shiftStart,\n      i,\n      toShift,\n      sample;\n  this.sampleDepth = this.colorType === 0 ? 1 : this.colorType === 2 ? 3 : this.colorType === 3 ? 1 : this.colorType === 4 ? 2 : this.colorType === 6 ? 4 : 1;\n  this.bitsPerPixel = this.bitDepth * this.sampleDepth;\n  this.bytesPerPixel = Math.ceil(this.bitsPerPixel / 8);\n  this.wastedBits = this.width * this.bitsPerPixel / 8 - (this.width * this.bitsPerPixel / 8 | 0);\n  this.byteWidth = Math.ceil(this.width * (this.bitsPerPixel / 8));\n  this.shiftStart = this.bitDepth + (8 / this.bitDepth - this.bitDepth) - 1 | 0;\n  this.shiftMult = this.bitDepth >= 8 ? 0 : this.bitDepth;\n  this.mask = this.bitDepth === 32 ? 0xffffffff : (1 << this.bitDepth) - 1;\n\n  if (this.interlace === 1) {\n    samples = this.sampleInterlacedLines(data);\n\n    for (i = 0; i < samples.length; i += this.sampleDepth) {\n      pixels.push(samples.slice(i, i + this.sampleDepth));\n    }\n\n    return pixels;\n  }\n\n  for (p = 0; p < data.length; p += this.byteWidth) {\n    prior = line || [];\n    filter = data[p++];\n    line = data.slice(p, p + this.byteWidth);\n    line = this.unfilterLine(filter, line, prior);\n    samples = this.sampleLine(line);\n\n    for (i = 0; i < samples.length; i += this.sampleDepth) {\n      pixels.push(samples.slice(i, i + this.sampleDepth));\n    }\n  }\n\n  return pixels;\n};\n\nPNG.prototype.unfilterLine = function (filter, line, prior) {\n  for (var x = 0; x < line.length; x++) {\n    if (filter === 0) {\n      break;\n    } else if (filter === 1) {\n      line[x] = this.filters.sub(x, line, prior, this.bytesPerPixel);\n    } else if (filter === 2) {\n      line[x] = this.filters.up(x, line, prior, this.bytesPerPixel);\n    } else if (filter === 3) {\n      line[x] = this.filters.average(x, line, prior, this.bytesPerPixel);\n    } else if (filter === 4) {\n      line[x] = this.filters.paeth(x, line, prior, this.bytesPerPixel);\n    }\n  }\n\n  return line;\n};\n\nPNG.prototype.sampleLine = function (line, width) {\n  var samples = [],\n      x = 0,\n      pendingSamples,\n      ch,\n      i,\n      sample,\n      shiftStart,\n      toShift;\n\n  while (x < line.length) {\n    pendingSamples = this.sampleDepth;\n\n    while (pendingSamples--) {\n      ch = line[x];\n\n      if (this.bitDepth === 16) {\n        ch = ch << 8 | line[++x];\n      } else if (this.bitDepth === 24) {\n        ch = ch << 16 | line[++x] << 8 | line[++x];\n      } else if (this.bitDepth === 32) {\n        ch = ch << 24 | line[++x] << 16 | line[++x] << 8 | line[++x];\n      } else if (this.bitDepth > 32) {\n        throw new Error('bitDepth ' + this.bitDepth + ' unsupported.');\n      }\n\n      shiftStart = this.shiftStart;\n      toShift = shiftStart - (x === line.length - 1 ? this.wastedBits : 0);\n\n      for (i = 0; i <= toShift; i++) {\n        sample = ch >> this.shiftMult * shiftStart & this.mask;\n\n        if (this.colorType !== 3) {\n          if (this.bitDepth < 8) {\n            // <= 8 would work too, doesn't matter\n            // sample = sample * (0xff / this.mask) | 0; // would work too\n            sample *= 0xff / this.mask;\n            sample |= 0;\n          } else if (this.bitDepth > 8) {\n            sample = sample / this.mask * 255 | 0;\n          }\n        }\n\n        samples.push(sample);\n        shiftStart--;\n      }\n\n      x++;\n    }\n  } // Needed for deinterlacing?\n\n\n  if (width != null) {\n    samples = samples.slice(0, width * this.sampleDepth);\n  }\n\n  return samples;\n}; // http://www.w3.org/TR/PNG-Filters.html\n\n\nPNG.prototype.filters = {\n  sub: function Sub(x, line, prior, bpp) {\n    if (x < bpp) return line[x];\n    return (line[x] + line[x - bpp]) % 256;\n  },\n  up: function Up(x, line, prior, bpp) {\n    return (line[x] + (prior[x] || 0)) % 256;\n  },\n  average: function Average(x, line, prior, bpp) {\n    if (x < bpp) return Math.floor((prior[x] || 0) / 2); // if (x < bpp) return (prior[x] || 0) >> 1;\n\n    return (line[x] + Math.floor((line[x - bpp] + prior[x]) / 2) // + ((line[x - bpp] + prior[x]) >> 1)\n    ) % 256;\n  },\n  paeth: function Paeth(x, line, prior, bpp) {\n    if (x < bpp) return prior[x] || 0;\n    return (line[x] + this._predictor(line[x - bpp], prior[x] || 0, prior[x - bpp] || 0)) % 256;\n  },\n  _predictor: function PaethPredictor(a, b, c) {\n    // a = left, b = above, c = upper left\n    var p = a + b - c,\n        pa = Math.abs(p - a),\n        pb = Math.abs(p - b),\n        pc = Math.abs(p - c);\n    if (pa <= pb && pa <= pc) return a;\n    if (pb <= pc) return b;\n    return c;\n  }\n};\n/**\n * Adam7 deinterlacing ported to javascript from PyPNG:\n * pypng - Pure Python library for PNG image encoding/decoding\n * Copyright (c) 2009-2015, David Jones (MIT License).\n * https://github.com/drj11/pypng\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation files\n * (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software,\n * and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nPNG.prototype.sampleInterlacedLines = function (raw) {\n  var psize, vpr, samples, source_offset, i, pass, xstart, ystart, xstep, ystep, recon, ppr, row_size, y, filter_type, scanline, flat, offset, k, end_offset, skip, j, k, f;\n  var adam7 = [[0, 0, 8, 8], [4, 0, 8, 8], [0, 4, 4, 8], [2, 0, 4, 4], [0, 2, 2, 4], [1, 0, 2, 2], [0, 1, 1, 2]]; // Fractional bytes per pixel\n\n  psize = this.bitDepth / 8 * this.sampleDepth; // Values per row (of the target image)\n\n  vpr = this.width * this.sampleDepth; // Make a result array, and make it big enough. Interleaving\n  // writes to the output array randomly (well, not quite), so the\n  // entire output array must be in memory.\n\n  samples = new Buffer(vpr * this.height);\n  samples.fill(0);\n  source_offset = 0;\n\n  for (i = 0; i < adam7.length; i++) {\n    pass = adam7[i];\n    xstart = pass[0];\n    ystart = pass[1];\n    xstep = pass[2];\n    ystep = pass[3];\n    if (xstart >= this.width) continue; // The previous (reconstructed) scanline. Empty array at the\n    // beginning of a pass to indicate that there is no previous\n    // line.\n\n    recon = []; // Pixels per row (reduced pass image)\n\n    ppr = Math.ceil((this.width - xstart) / xstep); // Row size in bytes for this pass.\n\n    row_size = Math.ceil(psize * ppr);\n\n    for (y = ystart; y < this.height; y += ystep) {\n      filter_type = raw[source_offset];\n      source_offset += 1;\n      scanline = raw.slice(source_offset, source_offset + row_size);\n      source_offset += row_size;\n      recon = this.unfilterLine(filter_type, scanline, recon); // Convert so that there is one element per pixel value\n\n      flat = this.sampleLine(recon, ppr);\n\n      if (xstep === 1) {\n        assert.equal(xstart, 0);\n        offset = y * vpr;\n\n        for (k = offset, f = 0; k < offset + vpr; k++, f++) {\n          samples[k] = flat[f];\n        }\n      } else {\n        offset = y * vpr + xstart * this.sampleDepth;\n        end_offset = (y + 1) * vpr;\n        skip = this.sampleDepth * xstep;\n\n        for (j = 0; j < this.sampleDepth; j++) {\n          for (k = offset + j, f = j; k < end_offset; k += skip, f += this.sampleDepth) {\n            samples[k] = flat[f];\n          }\n        }\n      }\n    }\n  }\n\n  return samples;\n};\n\nPNG.prototype.createBitmap = function (pixels) {\n  var bmp = [],\n      i;\n\n  if (this.colorType === 0) {\n    pixels = pixels.map(function (sample) {\n      return {\n        r: sample[0],\n        g: sample[0],\n        b: sample[0],\n        a: 255\n      };\n    });\n  } else if (this.colorType === 2) {\n    pixels = pixels.map(function (sample) {\n      return {\n        r: sample[0],\n        g: sample[1],\n        b: sample[2],\n        a: 255\n      };\n    });\n  } else if (this.colorType === 3) {\n    pixels = pixels.map(function (sample) {\n      if (!this.palette[sample[0]]) throw new Error('bad palette index');\n      return this.palette[sample[0]];\n    }, this);\n  } else if (this.colorType === 4) {\n    pixels = pixels.map(function (sample) {\n      return {\n        r: sample[0],\n        g: sample[0],\n        b: sample[0],\n        a: sample[1]\n      };\n    });\n  } else if (this.colorType === 6) {\n    pixels = pixels.map(function (sample) {\n      return {\n        r: sample[0],\n        g: sample[1],\n        b: sample[2],\n        a: sample[3]\n      };\n    });\n  }\n\n  for (i = 0; i < pixels.length; i += this.width) {\n    bmp.push(pixels.slice(i, i + this.width));\n  }\n\n  return bmp;\n};\n\nPNG.prototype.createCellmap = function (bmp, options) {\n  var bmp = bmp || this.bmp,\n      options = options || this.options,\n      cellmap = [],\n      scale = options.scale || 0.20,\n      height = bmp.length,\n      width = bmp[0].length,\n      cmwidth = options.width,\n      cmheight = options.height,\n      line,\n      x,\n      y,\n      xx,\n      yy,\n      scale,\n      xs,\n      ys;\n\n  if (cmwidth) {\n    scale = cmwidth / width;\n  } else if (cmheight) {\n    scale = cmheight / height;\n  }\n\n  if (!cmheight) {\n    cmheight = Math.round(height * scale);\n  }\n\n  if (!cmwidth) {\n    cmwidth = Math.round(width * scale);\n  }\n\n  ys = height / cmheight;\n  xs = width / cmwidth;\n\n  for (y = 0; y < bmp.length; y += ys) {\n    line = [];\n    yy = Math.round(y);\n    if (!bmp[yy]) break;\n\n    for (x = 0; x < bmp[yy].length; x += xs) {\n      xx = Math.round(x);\n      if (!bmp[yy][xx]) break;\n      line.push(bmp[yy][xx]);\n    }\n\n    cellmap.push(line);\n  }\n\n  return cellmap;\n};\n\nPNG.prototype.renderANSI = function (bmp) {\n  var self = this,\n      out = '';\n  bmp.forEach(function (line, y) {\n    line.forEach(function (pixel, x) {\n      var outch = self.getOutch(x, y, line, pixel);\n      out += self.pixelToSGR(pixel, outch);\n    });\n    out += '\\n';\n  });\n  return out;\n};\n\nPNG.prototype.renderContent = function (bmp, el) {\n  var self = this,\n      out = '';\n  bmp.forEach(function (line, y) {\n    line.forEach(function (pixel, x) {\n      var outch = self.getOutch(x, y, line, pixel);\n      out += self.pixelToTags(pixel, outch);\n    });\n    out += '\\n';\n  });\n  el.setContent(out);\n  return out;\n};\n\nPNG.prototype.renderScreen = function (bmp, screen, xi, xl, yi, yl) {\n  var self = this,\n      lines = screen.lines,\n      cellLines,\n      y,\n      yy,\n      x,\n      xx,\n      alpha,\n      attr,\n      ch;\n  cellLines = bmp.reduce(function (cellLines, line, y) {\n    var cellLine = [];\n    line.forEach(function (pixel, x) {\n      var outch = self.getOutch(x, y, line, pixel),\n          cell = self.pixelToCell(pixel, outch);\n      cellLine.push(cell);\n    });\n    cellLines.push(cellLine);\n    return cellLines;\n  }, []);\n\n  for (y = yi; y < yl; y++) {\n    yy = y - yi;\n\n    for (x = xi; x < xl; x++) {\n      xx = x - xi;\n\n      if (lines[y] && lines[y][x] && cellLines[yy] && cellLines[yy][xx]) {\n        alpha = cellLines[yy][xx].pop(); // completely transparent\n\n        if (alpha === 0.0) {\n          continue;\n        } // translucency / blending\n\n\n        if (alpha < 1.0) {\n          attr = cellLines[yy][xx][0];\n          ch = cellLines[yy][xx][1];\n          lines[y][x][0] = this.colors.blend(lines[y][x][0], attr, alpha);\n          if (ch !== ' ') lines[y][x][1] = ch;\n          lines[y].dirty = true;\n          continue;\n        } // completely opaque\n\n\n        lines[y][x] = cellLines[yy][xx];\n        lines[y].dirty = true;\n      }\n    }\n  }\n};\n\nPNG.prototype.renderElement = function (bmp, el) {\n  var xi = el.aleft + el.ileft,\n      xl = el.aleft + el.width - el.iright,\n      yi = el.atop + el.itop,\n      yl = el.atop + el.height - el.ibottom;\n  return this.renderScreen(bmp, el.screen, xi, xl, yi, yl);\n};\n\nPNG.prototype.pixelToSGR = function (pixel, ch) {\n  var bga = 1.0,\n      fga = 0.5,\n      a = pixel.a / 255,\n      bg,\n      fg;\n  bg = this.colors.match(pixel.r * a * bga | 0, pixel.g * a * bga | 0, pixel.b * a * bga | 0);\n\n  if (ch && this.options.ascii) {\n    fg = this.colors.match(pixel.r * a * fga | 0, pixel.g * a * fga | 0, pixel.b * a * fga | 0);\n\n    if (a === 0) {\n      return '\\x1b[38;5;' + fg + 'm' + ch + '\\x1b[m';\n    }\n\n    return '\\x1b[38;5;' + fg + 'm\\x1b[48;5;' + bg + 'm' + ch + '\\x1b[m';\n  }\n\n  if (a === 0) return ' ';\n  return '\\x1b[48;5;' + bg + 'm \\x1b[m';\n};\n\nPNG.prototype.pixelToTags = function (pixel, ch) {\n  var bga = 1.0,\n      fga = 0.5,\n      a = pixel.a / 255,\n      bg,\n      fg;\n  bg = this.colors.RGBtoHex(pixel.r * a * bga | 0, pixel.g * a * bga | 0, pixel.b * a * bga | 0);\n\n  if (ch && this.options.ascii) {\n    fg = this.colors.RGBtoHex(pixel.r * a * fga | 0, pixel.g * a * fga | 0, pixel.b * a * fga | 0);\n\n    if (a === 0) {\n      return '{' + fg + '-fg}' + ch + '{/}';\n    }\n\n    return '{' + fg + '-fg}{' + bg + '-bg}' + ch + '{/}';\n  }\n\n  if (a === 0) return ' ';\n  return '{' + bg + '-bg} {/' + bg + '-bg}';\n};\n\nPNG.prototype.pixelToCell = function (pixel, ch) {\n  var bga = 1.0,\n      fga = 0.5,\n      a = pixel.a / 255,\n      bg,\n      fg;\n  bg = this.colors.match(pixel.r * bga | 0, pixel.g * bga | 0, pixel.b * bga | 0);\n\n  if (ch && this.options.ascii) {\n    fg = this.colors.match(pixel.r * fga | 0, pixel.g * fga | 0, pixel.b * fga | 0);\n  } else {\n    fg = 0x1ff;\n    ch = null;\n  } // if (a === 0) bg = 0x1ff;\n\n\n  return [0 << 18 | fg << 9 | bg << 0, ch || ' ', a];\n}; // Taken from libcaca:\n\n\nPNG.prototype.getOutch = function () {\n  var dchars = '????8@8@#8@8##8#MKXWwz$&%x><\\\\/xo;+=|^-:i\\'.`,  `.        ';\n\n  var luminance = function (pixel) {\n    var a = pixel.a / 255,\n        r = pixel.r * a,\n        g = pixel.g * a,\n        b = pixel.b * a,\n        l = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    return l / 255;\n  };\n\n  return function (x, y, line, pixel) {\n    var lumi = luminance(pixel),\n        outch = dchars[lumi * (dchars.length - 1) | 0];\n    return outch;\n  };\n}();\n\nPNG.prototype.compileFrames = function (frames) {\n  return this.optimization === 'mem' ? this.compileFrames_lomem(frames) : this.compileFrames_locpu(frames);\n};\n\nPNG.prototype.compileFrames_lomem = function (frames) {\n  if (!this.actl) return;\n  return frames.map(function (frame, i) {\n    this.width = frame.fctl.width;\n    this.height = frame.fctl.height;\n    var pixels = frame._pixels || this.parseLines(frame.fdat),\n        bmp = frame._bmp || this.createBitmap(pixels),\n        fc = frame.fctl;\n    return {\n      actl: this.actl,\n      fctl: frame.fctl,\n      delay: fc.delayNum / (fc.delayDen || 100) * 1000 | 0,\n      bmp: bmp\n    };\n  }, this);\n};\n\nPNG.prototype.compileFrames_locpu = function (frames) {\n  if (!this.actl) return;\n  this._curBmp = null;\n  this._lastBmp = null;\n  return frames.map(function (frame, i) {\n    this.width = frame.fctl.width;\n    this.height = frame.fctl.height;\n    var pixels = frame._pixels || this.parseLines(frame.fdat),\n        bmp = frame._bmp || this.createBitmap(pixels),\n        renderBmp = this.renderFrame(bmp, frame, i),\n        cellmap = this.createCellmap(renderBmp),\n        fc = frame.fctl;\n    return {\n      actl: this.actl,\n      fctl: frame.fctl,\n      delay: fc.delayNum / (fc.delayDen || 100) * 1000 | 0,\n      bmp: renderBmp,\n      cellmap: cellmap\n    };\n  }, this);\n};\n\nPNG.prototype.renderFrame = function (bmp, frame, i) {\n  var first = this.frames[0],\n      last = this.frames[i - 1],\n      fc = frame.fctl,\n      xo = fc.xOffset,\n      yo = fc.yOffset,\n      lxo,\n      lyo,\n      x,\n      y,\n      line,\n      p;\n\n  if (!this._curBmp) {\n    this._curBmp = [];\n\n    for (y = 0; y < first.fctl.height; y++) {\n      line = [];\n\n      for (x = 0; x < first.fctl.width; x++) {\n        p = bmp[y][x];\n        line.push({\n          r: p.r,\n          g: p.g,\n          b: p.b,\n          a: p.a\n        });\n      }\n\n      this._curBmp.push(line);\n    }\n  }\n\n  if (last && last.fctl.disposeOp !== 0) {\n    lxo = last.fctl.xOffset;\n    lyo = last.fctl.yOffset;\n\n    for (y = 0; y < last.fctl.height; y++) {\n      for (x = 0; x < last.fctl.width; x++) {\n        if (last.fctl.disposeOp === 0) {// none / keep\n        } else if (last.fctl.disposeOp === 1) {\n          // background / clear\n          this._curBmp[lyo + y][lxo + x] = {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0\n          };\n        } else if (last.fctl.disposeOp === 2) {\n          // previous / restore\n          p = this._lastBmp[y][x];\n          this._curBmp[lyo + y][lxo + x] = {\n            r: p.r,\n            g: p.g,\n            b: p.b,\n            a: p.a\n          };\n        }\n      }\n    }\n  }\n\n  if (frame.fctl.disposeOp === 2) {\n    this._lastBmp = [];\n\n    for (y = 0; y < frame.fctl.height; y++) {\n      line = [];\n\n      for (x = 0; x < frame.fctl.width; x++) {\n        p = this._curBmp[yo + y][xo + x];\n        line.push({\n          r: p.r,\n          g: p.g,\n          b: p.b,\n          a: p.a\n        });\n      }\n\n      this._lastBmp.push(line);\n    }\n  } else {\n    this._lastBmp = null;\n  }\n\n  for (y = 0; y < frame.fctl.height; y++) {\n    for (x = 0; x < frame.fctl.width; x++) {\n      p = bmp[y][x];\n\n      if (fc.blendOp === 0) {\n        // source\n        this._curBmp[yo + y][xo + x] = {\n          r: p.r,\n          g: p.g,\n          b: p.b,\n          a: p.a\n        };\n      } else if (fc.blendOp === 1) {\n        // over\n        if (p.a !== 0) {\n          this._curBmp[yo + y][xo + x] = {\n            r: p.r,\n            g: p.g,\n            b: p.b,\n            a: p.a\n          };\n        }\n      }\n    }\n  }\n\n  return this._curBmp;\n};\n\nPNG.prototype._animate = function (callback) {\n  if (!this.frames) {\n    return callback(this.bmp, this.cellmap);\n  }\n\n  var self = this,\n      numPlays = this.actl.numPlays || Infinity,\n      running = 0,\n      i = -1;\n  this._curBmp = null;\n  this._lastBmp = null;\n\n  var next_lomem = function () {\n    if (!running) return;\n    var frame = self.frames[++i];\n\n    if (!frame) {\n      if (! --numPlays) return callback();\n      i = -1; // XXX may be able to optimize by only setting the self._curBmp once???\n\n      self._curBmp = null;\n      self._lastBmp = null;\n      return setImmediate(next);\n    }\n\n    var bmp = frame.bmp,\n        renderBmp = self.renderFrame(bmp, frame, i),\n        cellmap = self.createCellmap(renderBmp);\n    callback(renderBmp, cellmap);\n    return setTimeout(next, frame.delay / self.speed | 0);\n  };\n\n  var next_locpu = function () {\n    if (!running) return;\n    var frame = self.frames[++i];\n\n    if (!frame) {\n      if (! --numPlays) return callback();\n      i = -1;\n      return setImmediate(next);\n    }\n\n    callback(frame.bmp, frame.cellmap);\n    return setTimeout(next, frame.delay / self.speed | 0);\n  };\n\n  var next = this.optimization === 'mem' ? next_lomem : next_locpu;\n\n  this._control = function (state) {\n    if (state === -1) {\n      i = -1;\n      self._curBmp = null;\n      self._lastBmp = null;\n      running = 0;\n      callback(self.frames[0].bmp, self.frames[0].cellmap || self.createCellmap(self.frames[0].bmp));\n      return;\n    }\n\n    if (state === running) return;\n    running = state;\n    return next();\n  };\n\n  this._control(1);\n};\n\nPNG.prototype.play = function (callback) {\n  if (!this._control || callback) {\n    this.stop();\n    return this._animate(callback);\n  }\n\n  this._control(1);\n};\n\nPNG.prototype.pause = function () {\n  if (!this._control) return;\n\n  this._control(0);\n};\n\nPNG.prototype.stop = function () {\n  if (!this._control) return;\n\n  this._control(-1);\n};\n\nPNG.prototype.toPNG = function (input) {\n  var options = this.options,\n      file = this.file,\n      format = this.format,\n      buf,\n      img,\n      gif,\n      i,\n      control,\n      disposeOp;\n\n  if (format !== 'gif') {\n    buf = exec('convert', [format + ':-', 'png:-'], {\n      stdio: ['pipe', 'pipe', 'ignore'],\n      input: input\n    });\n    img = PNG(buf, options);\n    img.file = file;\n    return img;\n  }\n\n  gif = GIF(input, options);\n  this.width = gif.width;\n  this.height = gif.height;\n  this.frames = [];\n\n  for (i = 0; i < gif.images.length; i++) {\n    img = gif.images[i]; // Convert from gif disposal to png disposal. See:\n    // http://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\n    control = img.control || gif;\n    disposeOp = Math.max(0, (control.disposeMethod || 0) - 1);\n    if (disposeOp > 2) disposeOp = 0;\n    this.frames.push({\n      fctl: {\n        sequenceNumber: i,\n        width: img.width,\n        height: img.height,\n        xOffset: img.left,\n        yOffset: img.top,\n        delayNum: control.delay,\n        delayDen: 100,\n        disposeOp: disposeOp,\n        blendOp: 1\n      },\n      fdat: [],\n      _pixels: [],\n      _bmp: img.bmp\n    });\n  }\n\n  this.bmp = this.frames[0]._bmp;\n  this.cellmap = this.createCellmap(this.bmp);\n\n  if (this.frames.length > 1) {\n    this.actl = {\n      numFrames: gif.images.length,\n      numPlays: gif.numPlays || 0\n    };\n    this.frames = this.compileFrames(this.frames);\n  } else {\n    this.frames = undefined;\n  }\n\n  return this;\n}; // Convert a gif to an apng using imagemagick. Unfortunately imagemagick\n// doesn't support apngs, so we coalesce the gif frames into one image and then\n// slice them into frames.\n\n\nPNG.prototype.gifMagick = function (input) {\n  var options = this.options,\n      file = this.file,\n      format = this.format,\n      buf,\n      fmt,\n      img,\n      frames,\n      frame,\n      width,\n      height,\n      iwidth,\n      twidth,\n      i,\n      lines,\n      line,\n      x,\n      y;\n  buf = exec('convert', [format + ':-', '-coalesce', '+append', 'png:-'], {\n    stdio: ['pipe', 'pipe', 'ignore'],\n    input: input\n  });\n  fmt = '{\"W\":%W,\"H\":%H,\"w\":%w,\"h\":%h,\"d\":%T,\"x\":\"%X\",\"y\":\"%Y\"},';\n  frames = exec('identify', ['-format', fmt, format + ':-'], {\n    encoding: 'utf8',\n    stdio: ['pipe', 'pipe', 'ignore'],\n    input: input\n  });\n  frames = JSON.parse('[' + frames.trim().slice(0, -1) + ']');\n  img = PNG(buf, options);\n  img.file = file;\n  Object.keys(img).forEach(function (key) {\n    this[key] = img[key];\n  }, this);\n  width = frames[0].W;\n  height = frames[0].H;\n  iwidth = 0;\n  twidth = 0;\n  this.width = width;\n  this.height = height;\n  this.frames = [];\n\n  for (i = 0; i < frames.length; i++) {\n    frame = frames[i];\n    frame.x = +frame.x;\n    frame.y = +frame.y;\n    iwidth = twidth;\n    twidth += width;\n    lines = [];\n\n    for (y = frame.y; y < height; y++) {\n      line = [];\n\n      for (x = iwidth + frame.x; x < twidth; x++) {\n        line.push(img.bmp[y][x]);\n      }\n\n      lines.push(line);\n    }\n\n    this.frames.push({\n      fctl: {\n        sequenceNumber: i,\n        width: frame.w,\n        height: frame.h,\n        xOffset: frame.x,\n        yOffset: frame.y,\n        delayNum: frame.d,\n        delayDen: 100,\n        disposeOp: 0,\n        blendOp: 0\n      },\n      fdat: [],\n      _pixels: [],\n      _bmp: lines\n    });\n  }\n\n  this.bmp = this.frames[0]._bmp;\n  this.cellmap = this.createCellmap(this.bmp);\n\n  if (this.frames.length > 1) {\n    this.actl = {\n      numFrames: frames.length,\n      numPlays: 0\n    };\n    this.frames = this.compileFrames(this.frames);\n  } else {\n    this.frames = undefined;\n  }\n\n  return this;\n};\n\nPNG.prototype.decompress = function (buffers) {\n  return zlib.inflateSync(new Buffer(buffers.reduce(function (out, data) {\n    return out.concat(Array.prototype.slice.call(data));\n  }, [])));\n};\n/**\n * node-crc\n * https://github.com/alexgorbatchev/node-crc\n * https://github.com/alexgorbatchev/node-crc/blob/master/LICENSE\n *\n * The MIT License (MIT)\n *\n * Copyright 2014 Alex Gorbatchev\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n\nPNG.prototype.crc32 = function () {\n  var crcTable = [0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7, 0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59, 0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433, 0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65, 0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f, 0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1, 0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b, 0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d, 0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777, 0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9, 0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d];\n  return function crc32(buf) {\n    //var crc = previous === 0 ? 0 : ~~previous ^ -1;\n    var crc = -1;\n\n    for (var i = 0, len = buf.length; i < len; i++) {\n      crc = crcTable[(crc ^ buf[i]) & 0xff] ^ crc >>> 8;\n    }\n\n    return crc ^ -1;\n  };\n}();\n\nPNG.prototype._debug = function () {\n  if (!this.options.log) return;\n  return this.options.log.apply(null, arguments);\n};\n/**\n * GIF\n */\n\n\nfunction GIF(file, options) {\n  var self = this;\n\n  if (!(this instanceof GIF)) {\n    return new GIF(file, options);\n  }\n\n  var info = {},\n      p = 0,\n      buf,\n      i,\n      total,\n      sig,\n      desc,\n      img,\n      ext,\n      label,\n      size;\n  if (!file) throw new Error('no file');\n  options = options || {};\n  this.options = options; // XXX If the gif is not optimized enough\n  // it may OOM the process with too many frames.\n  // TODO: Implement in PNG reader.\n\n  this.pixelLimit = this.options.pixelLimit || 7622550;\n  this.totalPixels = 0;\n\n  if (Buffer.isBuffer(file)) {\n    buf = file;\n    file = null;\n  } else {\n    file = path.resolve(process.cwd(), file);\n    buf = fs.readFileSync(file);\n  }\n\n  sig = buf.slice(0, 6).toString('ascii');\n\n  if (sig !== 'GIF87a' && sig !== 'GIF89a') {\n    throw new Error('bad header: ' + sig);\n  }\n\n  this.width = buf.readUInt16LE(6);\n  this.height = buf.readUInt16LE(8);\n  this.flags = buf.readUInt8(10);\n  this.gct = !!(this.flags & 0x80);\n  this.gctsize = (this.flags & 0x07) + 1;\n  this.bgIndex = buf.readUInt8(11);\n  this.aspect = buf.readUInt8(12);\n  p += 13;\n\n  if (this.gct) {\n    this.colors = [];\n    total = 1 << this.gctsize;\n\n    for (i = 0; i < total; i++, p += 3) {\n      this.colors.push([buf[p], buf[p + 1], buf[p + 2], 255]);\n    }\n  }\n\n  this.images = [];\n  this.extensions = [];\n\n  try {\n    while (p < buf.length) {\n      desc = buf.readUInt8(p);\n      p += 1;\n\n      if (desc === 0x2c) {\n        img = {};\n        img.left = buf.readUInt16LE(p);\n        p += 2;\n        img.top = buf.readUInt16LE(p);\n        p += 2;\n        img.width = buf.readUInt16LE(p);\n        p += 2;\n        img.height = buf.readUInt16LE(p);\n        p += 2;\n        img.flags = buf.readUInt8(p);\n        p += 1;\n        img.lct = !!(img.flags & 0x80);\n        img.ilace = !!(img.flags & 0x40);\n        img.lctsize = (img.flags & 0x07) + 1;\n\n        if (img.lct) {\n          img.lcolors = [];\n          total = 1 << img.lctsize;\n\n          for (i = 0; i < total; i++, p += 3) {\n            img.lcolors.push([buf[p], buf[p + 1], buf[p + 2], 255]);\n          }\n        }\n\n        img.codeSize = buf.readUInt8(p);\n        p += 1;\n        img.size = buf.readUInt8(p);\n        p += 1;\n        img.lzw = [buf.slice(p, p + img.size)];\n        p += img.size;\n\n        while (buf[p] !== 0x00) {\n          // Some gifs screw up their size.\n          // XXX Same for all subblocks?\n          if (buf[p] === 0x3b && p === buf.length - 1) {\n            p--;\n            break;\n          }\n\n          size = buf.readUInt8(p);\n          p += 1;\n          img.lzw.push(buf.slice(p, p + size));\n          p += size;\n        }\n\n        assert.equal(buf.readUInt8(p), 0x00);\n        p += 1;\n\n        if (ext && ext.label === 0xf9) {\n          img.control = ext;\n        }\n\n        this.totalPixels += img.width * img.height;\n        this.images.push(img);\n\n        if (this.totalPixels >= this.pixelLimit) {\n          break;\n        }\n      } else if (desc === 0x21) {\n        // Extensions:\n        // http://www.w3.org/Graphics/GIF/spec-gif89a.txt\n        ext = {};\n        label = buf.readUInt8(p);\n        p += 1;\n        ext.label = label;\n\n        if (label === 0xf9) {\n          size = buf.readUInt8(p);\n          assert.equal(size, 0x04);\n          p += 1;\n          ext.fields = buf.readUInt8(p);\n          ext.disposeMethod = ext.fields >> 2 & 0x07;\n          ext.useTransparent = !!(ext.fields & 0x01);\n          p += 1;\n          ext.delay = buf.readUInt16LE(p);\n          p += 2;\n          ext.transparentColor = buf.readUInt8(p);\n          p += 1;\n\n          while (buf[p] !== 0x00) {\n            size = buf.readUInt8(p);\n            p += 1;\n            p += size;\n          }\n\n          assert.equal(buf.readUInt8(p), 0x00);\n          p += 1;\n          this.delay = ext.delay;\n          this.transparentColor = ext.transparentColor;\n          this.disposeMethod = ext.disposeMethod;\n          this.useTransparent = ext.useTransparent;\n        } else if (label === 0xff) {\n          // https://wiki.whatwg.org/wiki/GIF#Specifications\n          size = buf.readUInt8(p);\n          p += 1;\n          ext.id = buf.slice(p, p + 8).toString('ascii');\n          p += 8;\n          ext.auth = buf.slice(p, p + 3).toString('ascii');\n          p += 3;\n          ext.data = [];\n\n          while (buf[p] !== 0x00) {\n            size = buf.readUInt8(p);\n            p += 1;\n            ext.data.push(buf.slice(p, p + size));\n            p += size;\n          }\n\n          ext.data = new Buffer(ext.data.reduce(function (out, data) {\n            return out.concat(Array.prototype.slice.call(data));\n          }, [])); // AnimExts looping extension (identical to netscape)\n\n          if (ext.id === 'ANIMEXTS' && ext.auth === '1.0') {\n            ext.id = 'NETSCAPE';\n            ext.auth = '2.0';\n            ext.animexts = true;\n          } // Netscape extensions\n\n\n          if (ext.id === 'NETSCAPE' && ext.auth === '2.0') {\n            if (ext.data.readUInt8(0) === 0x01) {\n              // Netscape looping extension\n              // http://graphcomp.com/info/specs/ani_gif.html\n              ext.numPlays = ext.data.readUInt16LE(1);\n              this.numPlays = ext.numPlays;\n            } else if (ext.data.readUInt8(0) === 0x02) {\n              // Netscape buffering extension\n              this.minBuffer = ext.data;\n            }\n          } // Adobe XMP extension\n\n\n          if (ext.id === 'XMP Data' && ext.auth === 'XMP') {\n            ext.xmp = ext.data.toString('utf8');\n            this.xmp = ext.xmp;\n          } // ICC extension\n\n\n          if (ext.id === 'ICCRGBG1' && ext.auth === '012') {\n            // NOTE: Says size is 4 bytes, not 1? Maybe just buffer size?\n            this.icc = ext.data;\n          } // fractint extension\n\n\n          if (ext.id === 'fractint' && /^00[1-7]$/.test(ext.auth)) {\n            // NOTE: Says size is 4 bytes, not 1? Maybe just buffer size?\n            // Size: '!\\377\\013' == [0x00, 0x15, 0xff, 0x0b]\n            this.fractint = ext.data;\n          }\n\n          assert.equal(buf.readUInt8(p), 0x00);\n          p += 1;\n        } else {\n          ext.data = [];\n\n          while (buf[p] !== 0x00) {\n            size = buf.readUInt8(p);\n            p += 1;\n            ext.data.push(buf.slice(p, p + size));\n            p += size;\n          }\n\n          assert.equal(buf.readUInt8(p), 0x00);\n          p += 1;\n        }\n\n        this.extensions.push(ext);\n      } else if (desc === 0x3b) {\n        break;\n      } else if (p === buf.length - 1) {\n        // } else if (desc === 0x00 && p === buf.length - 1) {\n        break;\n      } else {\n        throw new Error('unknown block');\n      }\n    }\n  } catch (e) {\n    if (options.debug) {\n      throw e;\n    }\n  }\n\n  this.images = this.images.map(function (img, imageIndex) {\n    var control = img.control || this;\n    img.lzw = new Buffer(img.lzw.reduce(function (out, data) {\n      return out.concat(Array.prototype.slice.call(data));\n    }, []));\n\n    try {\n      img.data = this.decompress(img.lzw, img.codeSize);\n    } catch (e) {\n      if (options.debug) throw e;\n      return;\n    }\n\n    var interlacing = [[0, 8], [4, 8], [2, 4], [1, 2], [0, 0]];\n    var table = img.lcolors || this.colors,\n        row = 0,\n        col = 0,\n        ilp = 0,\n        p = 0,\n        b,\n        idx,\n        i,\n        y,\n        x,\n        line,\n        pixel;\n    img.samples = []; // Rewritten version of:\n    // https://github.com/lbv/ka-cs-programs/blob/master/lib/gif-reader.js\n\n    for (;;) {\n      b = img.data[p++];\n      if (b == null) break;\n      idx = (row * img.width + col) * 4;\n\n      if (!table[b]) {\n        if (options.debug) throw new Error('bad samples');\n        table[b] = [0, 0, 0, 0];\n      }\n\n      img.samples[idx] = table[b][0];\n      img.samples[idx + 1] = table[b][1];\n      img.samples[idx + 2] = table[b][2];\n      img.samples[idx + 3] = table[b][3];\n\n      if (control.useTransparent && b === control.transparentColor) {\n        img.samples[idx + 3] = 0;\n      }\n\n      if (++col >= img.width) {\n        col = 0;\n\n        if (img.ilace) {\n          row += interlacing[ilp][1];\n\n          if (row >= img.height) {\n            row = interlacing[++ilp][0];\n          }\n        } else {\n          row++;\n        }\n      }\n    }\n\n    img.pixels = [];\n\n    for (i = 0; i < img.samples.length; i += 4) {\n      img.pixels.push(img.samples.slice(i, i + 4));\n    }\n\n    img.bmp = [];\n\n    for (y = 0, p = 0; y < img.height; y++) {\n      line = [];\n\n      for (x = 0; x < img.width; x++) {\n        pixel = img.pixels[p++];\n\n        if (!pixel) {\n          if (options.debug) throw new Error('no pixel');\n          line.push({\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0\n          });\n          continue;\n        }\n\n        line.push({\n          r: pixel[0],\n          g: pixel[1],\n          b: pixel[2],\n          a: pixel[3]\n        });\n      }\n\n      img.bmp.push(line);\n    }\n\n    return img;\n  }, this).filter(Boolean);\n\n  if (!this.images.length) {\n    throw new Error('no image data or bad decompress');\n  }\n} // Rewritten version of:\n// https://github.com/lbv/ka-cs-programs/blob/master/lib/gif-reader.js\n\n\nGIF.prototype.decompress = function (input, codeSize) {\n  var bitDepth = codeSize + 1,\n      CC = 1 << codeSize,\n      EOI = CC + 1,\n      stack = [],\n      table = [],\n      ntable = 0,\n      oldCode = null,\n      buffer = 0,\n      nbuffer = 0,\n      p = 0,\n      buf = [],\n      bits,\n      read,\n      ans,\n      n,\n      code,\n      i,\n      K,\n      b,\n      maxElem;\n\n  for (;;) {\n    if (stack.length === 0) {\n      bits = bitDepth;\n      read = 0;\n      ans = 0;\n\n      while (read < bits) {\n        if (nbuffer === 0) {\n          if (p >= input.length) return buf;\n          buffer = input[p++];\n          nbuffer = 8;\n        }\n\n        n = Math.min(bits - read, nbuffer);\n        ans |= (buffer & (1 << n) - 1) << read;\n        read += n;\n        nbuffer -= n;\n        buffer >>= n;\n      }\n\n      code = ans;\n\n      if (code === EOI) {\n        break;\n      }\n\n      if (code === CC) {\n        table = [];\n\n        for (i = 0; i < CC; ++i) {\n          table[i] = [i, -1, i];\n        }\n\n        bitDepth = codeSize + 1;\n        maxElem = 1 << bitDepth;\n        ntable = CC + 2;\n        oldCode = null;\n        continue;\n      }\n\n      if (oldCode === null) {\n        oldCode = code;\n        buf.push(table[code][0]);\n        continue;\n      }\n\n      if (code < ntable) {\n        for (i = code; i >= 0; i = table[i][1]) {\n          stack.push(table[i][0]);\n        }\n\n        table[ntable++] = [table[code][2], oldCode, table[oldCode][2]];\n      } else {\n        K = table[oldCode][2];\n        table[ntable++] = [K, oldCode, K];\n\n        for (i = code; i >= 0; i = table[i][1]) {\n          stack.push(table[i][0]);\n        }\n      }\n\n      oldCode = code;\n\n      if (ntable === maxElem) {\n        maxElem = 1 << ++bitDepth;\n        if (bitDepth > 12) bitDepth = 12;\n      }\n    }\n\n    b = stack.pop();\n    if (b == null) break;\n    buf.push(b);\n  }\n\n  return buf;\n};\n/**\n * Expose\n */\n\n\nexports = PNG;\nexports.png = PNG;\nexports.gif = GIF;\nmodule.exports = exports;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/vendor/tng.js"],"names":["fs","require","util","path","zlib","assert","cp","exec","execFileSync","PNG","file","options","buf","chunks","idat","pixels","Error","colors","optimization","speed","Buffer","isBuffer","filename","resolve","process","cwd","readFileSync","format","readUInt32BE","slice","toString","readUInt16BE","extname","toLowerCase","toPNG","e","parseRaw","parseChunks","parseLines","bmp","createBitmap","cellmap","createCellmap","frames","compileFrames","prototype","index","i","len","type","name","data","crc","check","critical","public_","conforming","copysafe","pos","_debug","length","crc32","readInt32BE","debug","push","id","end","raw","flags","chunk","p","info","width","height","bitDepth","readUInt8","colorType","compression","filter","interlace","palette","r","g","b","a","size","alpha","Array","call","actl","numFrames","numPlays","fctl","fdat","sequenceNumber","xOffset","yOffset","delayNum","delayDen","disposeOp","blendOp","map","frame","decompress","x","prior","line","samples","pendingSamples","ch","shiftStart","toShift","sample","sampleDepth","bitsPerPixel","bytesPerPixel","Math","ceil","wastedBits","byteWidth","shiftMult","mask","sampleInterlacedLines","unfilterLine","sampleLine","filters","sub","up","average","paeth","Sub","bpp","Up","Average","floor","Paeth","_predictor","PaethPredictor","c","pa","abs","pb","pc","psize","vpr","source_offset","pass","xstart","ystart","xstep","ystep","recon","ppr","row_size","y","filter_type","scanline","flat","offset","k","end_offset","skip","j","f","adam7","fill","equal","scale","cmwidth","cmheight","xx","yy","xs","ys","round","renderANSI","self","out","forEach","pixel","outch","getOutch","pixelToSGR","renderContent","el","pixelToTags","setContent","renderScreen","screen","xi","xl","yi","yl","lines","cellLines","attr","reduce","cellLine","cell","pixelToCell","pop","blend","dirty","renderElement","aleft","ileft","iright","atop","itop","ibottom","bga","fga","bg","fg","match","ascii","RGBtoHex","dchars","luminance","l","lumi","compileFrames_lomem","compileFrames_locpu","_pixels","_bmp","fc","delay","_curBmp","_lastBmp","renderBmp","renderFrame","first","last","xo","yo","lxo","lyo","_animate","callback","Infinity","running","next_lomem","setImmediate","next","setTimeout","next_locpu","_control","state","play","stop","pause","input","img","gif","control","stdio","GIF","images","max","disposeMethod","left","top","undefined","gifMagick","fmt","iwidth","twidth","encoding","JSON","parse","trim","Object","keys","key","W","H","w","h","d","buffers","inflateSync","concat","crcTable","log","apply","arguments","total","sig","desc","ext","label","pixelLimit","totalPixels","readUInt16LE","gct","gctsize","bgIndex","aspect","extensions","lct","ilace","lctsize","lcolors","codeSize","lzw","fields","useTransparent","transparentColor","auth","animexts","minBuffer","xmp","icc","test","fractint","imageIndex","interlacing","table","row","col","ilp","idx","Boolean","CC","EOI","stack","ntable","oldCode","buffer","nbuffer","bits","read","ans","n","code","K","maxElem","min","exports","png","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CADlB;AAAA,IAEIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAFlB;AAAA,IAGIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAHlB;AAAA,IAIII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAJpB;AAAA,IAKIK,EAAE,GAAGL,OAAO,CAAC,eAAD,CALhB;AAAA,IAMIM,IAAI,GAAGD,EAAE,CAACE,YANd;AAQA;AACA;AACA;;;AAEA,SAASC,GAAT,CAAaC,IAAb,EAAmBC,OAAnB,EAA4B;AAC1B,MAAIC,GAAJ,EACIC,MADJ,EAEIC,IAFJ,EAGIC,MAHJ;;AAKA,MAAI,EAAE,gBAAgBN,GAAlB,CAAJ,EAA4B;AAC1B,WAAO,IAAIA,GAAJ,CAAQC,IAAR,EAAcC,OAAd,CAAP;AACD;;AAED,MAAI,CAACD,IAAL,EAAW,MAAM,IAAIM,KAAJ,CAAU,SAAV,CAAN;AAEX,OAAKL,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA,OAAKM,MAAL,GAAcN,OAAO,CAACM,MAAR,IAAkBhB,OAAO,CAAC,oBAAD,CAAvC;AACA,OAAKiB,YAAL,GAAoB,KAAKP,OAAL,CAAaO,YAAb,IAA6B,KAAjD;AACA,OAAKC,KAAL,GAAa,KAAKR,OAAL,CAAaQ,KAAb,IAAsB,CAAnC;;AAEA,MAAIC,MAAM,CAACC,QAAP,CAAgBX,IAAhB,CAAJ,EAA2B;AACzB,SAAKA,IAAL,GAAY,KAAKC,OAAL,CAAaW,QAAb,IAAyB,IAArC;AACAV,IAAAA,GAAG,GAAGF,IAAN;AACD,GAHD,MAGO;AACL,SAAKC,OAAL,CAAaW,QAAb,GAAwBZ,IAAxB;AACA,SAAKA,IAAL,GAAYP,IAAI,CAACoB,OAAL,CAAaC,OAAO,CAACC,GAAR,EAAb,EAA4Bf,IAA5B,CAAZ;AACAE,IAAAA,GAAG,GAAGZ,EAAE,CAAC0B,YAAH,CAAgB,KAAKhB,IAArB,CAAN;AACD;;AAED,OAAKiB,MAAL,GAAcf,GAAG,CAACgB,YAAJ,CAAiB,CAAjB,MAAwB,UAAxB,GAAqC,KAArC,GACVhB,GAAG,CAACiB,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgBC,QAAhB,CAAyB,OAAzB,MAAsC,KAAtC,GAA8C,KAA9C,GACAlB,GAAG,CAACmB,YAAJ,CAAiB,CAAjB,MAAwB,MAAxB,GAAiC,KAAjC,GACA5B,IAAI,CAAC6B,OAAL,CAAa,KAAKtB,IAAlB,EAAwBmB,KAAxB,CAA8B,CAA9B,EAAiCI,WAAjC,MAAkD,KAHtD;;AAKA,MAAI,KAAKN,MAAL,KAAgB,KAApB,EAA2B;AACzB,QAAI;AACF,aAAO,KAAKO,KAAL,CAAWtB,GAAX,CAAP;AACD,KAFD,CAEE,OAAOuB,CAAP,EAAU;AACV,YAAMA,CAAN;AACD;AACF;;AAEDtB,EAAAA,MAAM,GAAG,KAAKuB,QAAL,CAAcxB,GAAd,CAAT;AACAE,EAAAA,IAAI,GAAG,KAAKuB,WAAL,CAAiBxB,MAAjB,CAAP;AACAE,EAAAA,MAAM,GAAG,KAAKuB,UAAL,CAAgBxB,IAAhB,CAAT;AAEA,OAAKyB,GAAL,GAAW,KAAKC,YAAL,CAAkBzB,MAAlB,CAAX;AACA,OAAK0B,OAAL,GAAe,KAAKC,aAAL,CAAmB,KAAKH,GAAxB,CAAf;AACA,OAAKI,MAAL,GAAc,KAAKC,aAAL,CAAmB,KAAKD,MAAxB,CAAd;AACD;;AAEDlC,GAAG,CAACoC,SAAJ,CAAcT,QAAd,GAAyB,UAASxB,GAAT,EAAc;AACrC,MAAIC,MAAM,GAAG,EAAb;AAAA,MACIiC,KAAK,GAAG,CADZ;AAAA,MAEIC,CAAC,GAAG,CAFR;AAAA,MAGInC,GAHJ;AAAA,MAIIoC,GAJJ;AAAA,MAKIC,IALJ;AAAA,MAMIC,IANJ;AAAA,MAOIC,IAPJ;AAAA,MAQIC,GARJ;AAAA,MASIC,KATJ;AAAA,MAUIC,QAVJ;AAAA,MAWIC,OAXJ;AAAA,MAYIC,UAZJ;AAAA,MAaIC,QAbJ;AAAA,MAcIC,GAdJ;;AAgBA,OAAKC,MAAL,CAAY,KAAKjD,IAAjB;;AAEA,MAAIE,GAAG,CAACgB,YAAJ,CAAiB,CAAjB,MAAwB,UAAxB,IACGhB,GAAG,CAACgB,YAAJ,CAAiB,CAAjB,MAAwB,UAD/B,EAC2C;AACzC,UAAM,IAAIZ,KAAJ,CAAU,YAAV,CAAN;AACD;;AAED+B,EAAAA,CAAC,IAAI,CAAL;;AAEA,SAAOA,CAAC,GAAGnC,GAAG,CAACgD,MAAf,EAAuB;AACrB,QAAI;AACFZ,MAAAA,GAAG,GAAGpC,GAAG,CAACgB,YAAJ,CAAiBmB,CAAjB,CAAN;AACAA,MAAAA,CAAC,IAAI,CAAL;AACAW,MAAAA,GAAG,GAAGX,CAAN;AACAE,MAAAA,IAAI,GAAGrC,GAAG,CAACiB,KAAJ,CAAUkB,CAAV,EAAaA,CAAC,GAAG,CAAjB,CAAP;AACAG,MAAAA,IAAI,GAAGD,IAAI,CAACnB,QAAL,CAAc,OAAd,CAAP;AACAiB,MAAAA,CAAC,IAAI,CAAL;AACAI,MAAAA,IAAI,GAAGvC,GAAG,CAACiB,KAAJ,CAAUkB,CAAV,EAAaA,CAAC,GAAGC,GAAjB,CAAP;AACAD,MAAAA,CAAC,IAAIC,GAAL;AACAK,MAAAA,KAAK,GAAG,KAAKQ,KAAL,CAAWjD,GAAG,CAACiB,KAAJ,CAAU6B,GAAV,EAAeX,CAAf,CAAX,CAAR;AACAK,MAAAA,GAAG,GAAGxC,GAAG,CAACkD,WAAJ,CAAgBf,CAAhB,CAAN;AACAA,MAAAA,CAAC,IAAI,CAAL;AACAO,MAAAA,QAAQ,GAAG,CAAC,EAAE,CAACL,IAAI,CAAC,CAAD,CAAL,GAAW,EAAb,CAAZ;AACAM,MAAAA,OAAO,GAAG,CAAC,EAAE,CAACN,IAAI,CAAC,CAAD,CAAL,GAAW,EAAb,CAAX;AACAO,MAAAA,UAAU,GAAG,CAAC,EAAE,CAACP,IAAI,CAAC,CAAD,CAAL,GAAW,EAAb,CAAd;AACAQ,MAAAA,QAAQ,GAAG,CAAC,EAAE,CAACR,IAAI,CAAC,CAAD,CAAL,GAAW,EAAb,CAAZ;;AACA,UAAIG,GAAG,KAAKC,KAAZ,EAAmB;AACjB,cAAM,IAAIrC,KAAJ,CAAUkC,IAAI,GAAG,WAAjB,CAAN;AACD;AACF,KAnBD,CAmBE,OAAOf,CAAP,EAAU;AACV,UAAI,KAAKxB,OAAL,CAAaoD,KAAjB,EAAwB,MAAM5B,CAAN;AACxB;AACD;;AACDtB,IAAAA,MAAM,CAACmD,IAAP,CAAY;AACVlB,MAAAA,KAAK,EAAEA,KAAK,EADF;AAEVmB,MAAAA,EAAE,EAAEf,IAAI,CAACjB,WAAL,EAFM;AAGVe,MAAAA,GAAG,EAAEA,GAHK;AAIVU,MAAAA,GAAG,EAAEA,GAJK;AAKVQ,MAAAA,GAAG,EAAEnB,CALK;AAMVE,MAAAA,IAAI,EAAEA,IANI;AAOVC,MAAAA,IAAI,EAAEA,IAPI;AAQVC,MAAAA,IAAI,EAAEA,IARI;AASVC,MAAAA,GAAG,EAAEA,GATK;AAUVC,MAAAA,KAAK,EAAEA,KAVG;AAWVc,MAAAA,GAAG,EAAEvD,GAAG,CAACiB,KAAJ,CAAU6B,GAAV,EAAeX,CAAf,CAXK;AAYVqB,MAAAA,KAAK,EAAE;AACLd,QAAAA,QAAQ,EAAEA,QADL;AAELC,QAAAA,OAAO,EAAEA,OAFJ;AAGLC,QAAAA,UAAU,EAAEA,UAHP;AAILC,QAAAA,QAAQ,EAAEA;AAJL;AAZG,KAAZ;AAmBD;;AAED,SAAO5C,MAAP;AACD,CAxED;;AA0EAJ,GAAG,CAACoC,SAAJ,CAAcR,WAAd,GAA4B,UAASxB,MAAT,EAAiB;AAC3C,MAAIkC,CAAJ,EACIsB,KADJ,EAEInB,IAFJ,EAGIC,IAHJ,EAIImB,CAJJ,EAKIxD,IALJ,EAMIyD,IANJ;;AAQA,OAAKxB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGlC,MAAM,CAAC+C,MAAvB,EAA+Bb,CAAC,EAAhC,EAAoC;AAClCsB,IAAAA,KAAK,GAAGxD,MAAM,CAACkC,CAAD,CAAd;AACAG,IAAAA,IAAI,GAAGmB,KAAK,CAACJ,EAAb;AACAd,IAAAA,IAAI,GAAGkB,KAAK,CAAClB,IAAb;AACAoB,IAAAA,IAAI,GAAG,EAAP;;AACA,YAAQrB,IAAR;AACE,WAAK,MAAL;AAAa;AACX,eAAKsB,KAAL,GAAaD,IAAI,CAACC,KAAL,GAAarB,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAA1B;AACA,eAAK6C,MAAL,GAAcF,IAAI,CAACE,MAAL,GAActB,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAA5B;AACA,eAAK8C,QAAL,GAAgBH,IAAI,CAACG,QAAL,GAAgBvB,IAAI,CAACwB,SAAL,CAAe,CAAf,CAAhC;AACA,eAAKC,SAAL,GAAiBL,IAAI,CAACK,SAAL,GAAiBzB,IAAI,CAACwB,SAAL,CAAe,CAAf,CAAlC;AACA,eAAKE,WAAL,GAAmBN,IAAI,CAACM,WAAL,GAAmB1B,IAAI,CAACwB,SAAL,CAAe,EAAf,CAAtC;AACA,eAAKG,MAAL,GAAcP,IAAI,CAACO,MAAL,GAAc3B,IAAI,CAACwB,SAAL,CAAe,EAAf,CAA5B;AACA,eAAKI,SAAL,GAAiBR,IAAI,CAACQ,SAAL,GAAiB5B,IAAI,CAACwB,SAAL,CAAe,EAAf,CAAlC;;AACA,kBAAQ,KAAKD,QAAb;AACE,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,EAAL;AAAS,iBAAK,EAAL;AAAS,iBAAK,EAAL;AAAS;;AAC3D;AAAS,oBAAM,IAAI1D,KAAJ,CAAU,oBAAoB,KAAK0D,QAAnC,CAAN;AAFX;;AAIA,kBAAQ,KAAKE,SAAb;AACE,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ;;AACxC;AAAS,oBAAM,IAAI5D,KAAJ,CAAU,gBAAgB,KAAK4D,SAA/B,CAAN;AAFX;;AAIA,kBAAQ,KAAKC,WAAb;AACE,iBAAK,CAAL;AAAQ;;AACR;AAAS,oBAAM,IAAI7D,KAAJ,CAAU,sBAAsB,KAAK6D,WAArC,CAAN;AAFX;;AAIA,kBAAQ,KAAKC,MAAb;AACE,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ;;AACxC;AAAS,oBAAM,IAAI9D,KAAJ,CAAU,iBAAiB,KAAK8D,MAAhC,CAAN;AAFX;;AAIA,kBAAQ,KAAKC,SAAb;AACE,iBAAK,CAAL;AAAQ,iBAAK,CAAL;AAAQ;;AAChB;AAAS,oBAAM,IAAI/D,KAAJ,CAAU,oBAAoB,KAAK+D,SAAnC,CAAN;AAFX;;AAIA;AACD;;AACD,WAAK,MAAL;AAAa;AACX,eAAKC,OAAL,GAAeT,IAAI,CAACS,OAAL,GAAe,EAA9B;;AACA,eAAKV,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGnB,IAAI,CAACS,MAArB,EAA6BU,CAAC,IAAI,CAAlC,EAAqC;AACnC,iBAAKU,OAAL,CAAahB,IAAb,CAAkB;AAChBiB,cAAAA,CAAC,EAAE9B,IAAI,CAACmB,CAAC,GAAG,CAAL,CADS;AAEhBY,cAAAA,CAAC,EAAE/B,IAAI,CAACmB,CAAC,GAAG,CAAL,CAFS;AAGhBa,cAAAA,CAAC,EAAEhC,IAAI,CAACmB,CAAC,GAAG,CAAL,CAHS;AAIhBc,cAAAA,CAAC,EAAE;AAJa,aAAlB;AAMD;;AACD;AACD;;AACD,WAAK,MAAL;AAAa;AACX,eAAKC,IAAL,GAAY,KAAKA,IAAL,IAAa,CAAzB;AACA,eAAKA,IAAL,IAAalC,IAAI,CAACS,MAAlB;AACA,eAAK9C,IAAL,GAAY,KAAKA,IAAL,IAAa,EAAzB;AACA,eAAKA,IAAL,CAAUkD,IAAV,CAAeb,IAAf;AACAoB,UAAAA,IAAI,CAACc,IAAL,GAAYlC,IAAI,CAACS,MAAjB;AACA;AACD;;AACD,WAAK,MAAL;AAAa;AACX,eAAKM,GAAL,GAAW,IAAX;AACA;AACD;;AACD,WAAK,MAAL;AAAa;AACX,eAAKoB,KAAL,GAAaf,IAAI,CAACe,KAAL,GAAaC,KAAK,CAAC1C,SAAN,CAAgBhB,KAAhB,CAAsB2D,IAAtB,CAA2BrC,IAA3B,CAA1B;;AACA,cAAI,KAAK6B,OAAT,EAAkB;AAChB,iBAAKV,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGnB,IAAI,CAACS,MAArB,EAA6BU,CAAC,EAA9B,EAAkC;AAChC,kBAAI,CAAC,KAAKU,OAAL,CAAaV,CAAb,CAAL,EAAsB;AACtB,mBAAKU,OAAL,CAAaV,CAAb,EAAgBc,CAAhB,GAAoBjC,IAAI,CAACmB,CAAD,CAAxB;AACD;AACF;;AACD;AACD;AACD;;AACA,WAAK,MAAL;AAAa;AACX,eAAKmB,IAAL,GAAYlB,IAAI,GAAG,EAAnB;AACA,eAAK5B,MAAL,GAAc,EAAd;AACA,eAAK8C,IAAL,CAAUC,SAAV,GAAsBvC,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAAtB;AACA,eAAK6D,IAAL,CAAUE,QAAV,GAAqBxC,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAArB;AACA;AACD;;AACD,WAAK,MAAL;AAAa;AACX;AACA;AACA;AACA,cAAI,CAAC,KAAKd,IAAV,EAAgB;AACd,iBAAKA,IAAL,GAAY,EAAZ;AACA,iBAAK6B,MAAL,CAAYqB,IAAZ,CAAiB;AACflD,cAAAA,IAAI,EAAE,IADS;AAEf8E,cAAAA,IAAI,EAAErB,IAFS;AAGfsB,cAAAA,IAAI,EAAE,KAAK/E;AAHI,aAAjB;AAKD,WAPD,MAOO;AACL,iBAAK6B,MAAL,CAAYqB,IAAZ,CAAiB;AACf4B,cAAAA,IAAI,EAAErB,IADS;AAEfsB,cAAAA,IAAI,EAAE;AAFS,aAAjB;AAID;;AACDtB,UAAAA,IAAI,CAACuB,cAAL,GAAsB3C,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAAtB;AACA2C,UAAAA,IAAI,CAACC,KAAL,GAAarB,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAAb;AACA2C,UAAAA,IAAI,CAACE,MAAL,GAActB,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAAd;AACA2C,UAAAA,IAAI,CAACwB,OAAL,GAAe5C,IAAI,CAACvB,YAAL,CAAkB,EAAlB,CAAf;AACA2C,UAAAA,IAAI,CAACyB,OAAL,GAAe7C,IAAI,CAACvB,YAAL,CAAkB,EAAlB,CAAf;AACA2C,UAAAA,IAAI,CAAC0B,QAAL,GAAgB9C,IAAI,CAACpB,YAAL,CAAkB,EAAlB,CAAhB;AACAwC,UAAAA,IAAI,CAAC2B,QAAL,GAAgB/C,IAAI,CAACpB,YAAL,CAAkB,EAAlB,CAAhB;AACAwC,UAAAA,IAAI,CAAC4B,SAAL,GAAiBhD,IAAI,CAACwB,SAAL,CAAe,EAAf,CAAjB;AACAJ,UAAAA,IAAI,CAAC6B,OAAL,GAAejD,IAAI,CAACwB,SAAL,CAAe,EAAf,CAAf;AACA;AACD;;AACD,WAAK,MAAL;AAAa;AACXJ,UAAAA,IAAI,CAACuB,cAAL,GAAsB3C,IAAI,CAACvB,YAAL,CAAkB,CAAlB,CAAtB;AACA2C,UAAAA,IAAI,CAACpB,IAAL,GAAYA,IAAI,CAACtB,KAAL,CAAW,CAAX,CAAZ;AACA,eAAKc,MAAL,CAAY,KAAKA,MAAL,CAAYiB,MAAZ,GAAqB,CAAjC,EAAoCiC,IAApC,CAAyC7B,IAAzC,CAA8CO,IAAI,CAACpB,IAAnD;AACA;AACD;AA1GH;;AA4GAkB,IAAAA,KAAK,CAACE,IAAN,GAAaA,IAAb;AACD;;AAED,OAAKZ,MAAL,CAAY9C,MAAZ;;AAEA,MAAI,KAAK8B,MAAT,EAAiB;AACf,SAAKA,MAAL,GAAc,KAAKA,MAAL,CAAY0D,GAAZ,CAAgB,UAASC,KAAT,EAAgBvD,CAAhB,EAAmB;AAC/CuD,MAAAA,KAAK,CAACT,IAAN,GAAa,KAAKU,UAAL,CAAgBD,KAAK,CAACT,IAAtB,CAAb;AACA,UAAI,CAACS,KAAK,CAACT,IAAN,CAAWjC,MAAhB,EAAwB,MAAM,IAAI5C,KAAJ,CAAU,SAAV,CAAN;AACxB,aAAOsF,KAAP;AACD,KAJa,EAIX,IAJW,CAAd;AAKD;;AAEDxF,EAAAA,IAAI,GAAG,KAAKyF,UAAL,CAAgB,KAAKzF,IAArB,CAAP;AACA,MAAI,CAACA,IAAI,CAAC8C,MAAV,EAAkB,MAAM,IAAI5C,KAAJ,CAAU,SAAV,CAAN;AAElB,SAAOF,IAAP;AACD,CA3ID;;AA6IAL,GAAG,CAACoC,SAAJ,CAAcP,UAAd,GAA2B,UAASa,IAAT,EAAe;AACxC,MAAIpC,MAAM,GAAG,EAAb;AAAA,MACIyF,CADJ;AAAA,MAEIlC,CAFJ;AAAA,MAGImC,KAHJ;AAAA,MAIIC,IAJJ;AAAA,MAKI5B,MALJ;AAAA,MAMI6B,OANJ;AAAA,MAOIC,cAPJ;AAAA,MAQIC,EARJ;AAAA,MASIC,UATJ;AAAA,MAUI/D,CAVJ;AAAA,MAWIgE,OAXJ;AAAA,MAYIC,MAZJ;AAcA,OAAKC,WAAL,GACE,KAAKrC,SAAL,KAAmB,CAAnB,GAAuB,CAAvB,GACE,KAAKA,SAAL,KAAmB,CAAnB,GAAuB,CAAvB,GACA,KAAKA,SAAL,KAAmB,CAAnB,GAAuB,CAAvB,GACA,KAAKA,SAAL,KAAmB,CAAnB,GAAuB,CAAvB,GACA,KAAKA,SAAL,KAAmB,CAAnB,GAAuB,CAAvB,GACA,CANJ;AAOA,OAAKsC,YAAL,GAAoB,KAAKxC,QAAL,GAAgB,KAAKuC,WAAzC;AACA,OAAKE,aAAL,GAAqBC,IAAI,CAACC,IAAL,CAAU,KAAKH,YAAL,GAAoB,CAA9B,CAArB;AACA,OAAKI,UAAL,GAAoB,KAAK9C,KAAL,GAAa,KAAK0C,YAAnB,GAAmC,CAApC,IAA2C,KAAK1C,KAAL,GAAa,KAAK0C,YAAlB,GAAiC,CAAlC,GAAuC,CAAjF,CAAlB;AACA,OAAKK,SAAL,GAAiBH,IAAI,CAACC,IAAL,CAAU,KAAK7C,KAAL,IAAc,KAAK0C,YAAL,GAAoB,CAAlC,CAAV,CAAjB;AAEA,OAAKJ,UAAL,GAAoB,KAAKpC,QAAL,IAAiB,IAAI,KAAKA,QAAT,GAAoB,KAAKA,QAA1C,CAAD,GAAwD,CAAzD,GAA8D,CAAhF;AACA,OAAK8C,SAAL,GAAiB,KAAK9C,QAAL,IAAiB,CAAjB,GAAqB,CAArB,GAAyB,KAAKA,QAA/C;AACA,OAAK+C,IAAL,GAAY,KAAK/C,QAAL,KAAkB,EAAlB,GAAuB,UAAvB,GAAoC,CAAC,KAAK,KAAKA,QAAX,IAAuB,CAAvE;;AAEA,MAAI,KAAKK,SAAL,KAAmB,CAAvB,EAA0B;AACxB4B,IAAAA,OAAO,GAAG,KAAKe,qBAAL,CAA2BvE,IAA3B,CAAV;;AACA,SAAKJ,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4D,OAAO,CAAC/C,MAAxB,EAAgCb,CAAC,IAAI,KAAKkE,WAA1C,EAAuD;AACrDlG,MAAAA,MAAM,CAACiD,IAAP,CAAY2C,OAAO,CAAC9E,KAAR,CAAckB,CAAd,EAAiBA,CAAC,GAAG,KAAKkE,WAA1B,CAAZ;AACD;;AACD,WAAOlG,MAAP;AACD;;AAED,OAAKuD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGnB,IAAI,CAACS,MAArB,EAA6BU,CAAC,IAAI,KAAKiD,SAAvC,EAAkD;AAChDd,IAAAA,KAAK,GAAGC,IAAI,IAAI,EAAhB;AACA5B,IAAAA,MAAM,GAAG3B,IAAI,CAACmB,CAAC,EAAF,CAAb;AACAoC,IAAAA,IAAI,GAAGvD,IAAI,CAACtB,KAAL,CAAWyC,CAAX,EAAcA,CAAC,GAAG,KAAKiD,SAAvB,CAAP;AACAb,IAAAA,IAAI,GAAG,KAAKiB,YAAL,CAAkB7C,MAAlB,EAA0B4B,IAA1B,EAAgCD,KAAhC,CAAP;AACAE,IAAAA,OAAO,GAAG,KAAKiB,UAAL,CAAgBlB,IAAhB,CAAV;;AACA,SAAK3D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG4D,OAAO,CAAC/C,MAAxB,EAAgCb,CAAC,IAAI,KAAKkE,WAA1C,EAAuD;AACrDlG,MAAAA,MAAM,CAACiD,IAAP,CAAY2C,OAAO,CAAC9E,KAAR,CAAckB,CAAd,EAAiBA,CAAC,GAAG,KAAKkE,WAA1B,CAAZ;AACD;AACF;;AAED,SAAOlG,MAAP;AACD,CAnDD;;AAqDAN,GAAG,CAACoC,SAAJ,CAAc8E,YAAd,GAA6B,UAAS7C,MAAT,EAAiB4B,IAAjB,EAAuBD,KAAvB,EAA8B;AACzD,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,IAAI,CAAC9C,MAAzB,EAAiC4C,CAAC,EAAlC,EAAsC;AACpC,QAAI1B,MAAM,KAAK,CAAf,EAAkB;AAChB;AACD,KAFD,MAEO,IAAIA,MAAM,KAAK,CAAf,EAAkB;AACvB4B,MAAAA,IAAI,CAACF,CAAD,CAAJ,GAAU,KAAKqB,OAAL,CAAaC,GAAb,CAAiBtB,CAAjB,EAAoBE,IAApB,EAA0BD,KAA1B,EAAiC,KAAKU,aAAtC,CAAV;AACD,KAFM,MAEA,IAAIrC,MAAM,KAAK,CAAf,EAAkB;AACvB4B,MAAAA,IAAI,CAACF,CAAD,CAAJ,GAAU,KAAKqB,OAAL,CAAaE,EAAb,CAAgBvB,CAAhB,EAAmBE,IAAnB,EAAyBD,KAAzB,EAAgC,KAAKU,aAArC,CAAV;AACD,KAFM,MAEA,IAAIrC,MAAM,KAAK,CAAf,EAAkB;AACvB4B,MAAAA,IAAI,CAACF,CAAD,CAAJ,GAAU,KAAKqB,OAAL,CAAaG,OAAb,CAAqBxB,CAArB,EAAwBE,IAAxB,EAA8BD,KAA9B,EAAqC,KAAKU,aAA1C,CAAV;AACD,KAFM,MAEA,IAAIrC,MAAM,KAAK,CAAf,EAAkB;AACvB4B,MAAAA,IAAI,CAACF,CAAD,CAAJ,GAAU,KAAKqB,OAAL,CAAaI,KAAb,CAAmBzB,CAAnB,EAAsBE,IAAtB,EAA4BD,KAA5B,EAAmC,KAAKU,aAAxC,CAAV;AACD;AACF;;AACD,SAAOT,IAAP;AACD,CAfD;;AAiBAjG,GAAG,CAACoC,SAAJ,CAAc+E,UAAd,GAA2B,UAASlB,IAAT,EAAelC,KAAf,EAAsB;AAC/C,MAAImC,OAAO,GAAG,EAAd;AAAA,MACIH,CAAC,GAAG,CADR;AAAA,MAEII,cAFJ;AAAA,MAGIC,EAHJ;AAAA,MAII9D,CAJJ;AAAA,MAKIiE,MALJ;AAAA,MAMIF,UANJ;AAAA,MAOIC,OAPJ;;AASA,SAAOP,CAAC,GAAGE,IAAI,CAAC9C,MAAhB,EAAwB;AACtBgD,IAAAA,cAAc,GAAG,KAAKK,WAAtB;;AACA,WAAOL,cAAc,EAArB,EAAyB;AACvBC,MAAAA,EAAE,GAAGH,IAAI,CAACF,CAAD,CAAT;;AACA,UAAI,KAAK9B,QAAL,KAAkB,EAAtB,EAA0B;AACxBmC,QAAAA,EAAE,GAAIA,EAAE,IAAI,CAAP,GAAYH,IAAI,CAAC,EAAEF,CAAH,CAArB;AACD,OAFD,MAEO,IAAI,KAAK9B,QAAL,KAAkB,EAAtB,EAA0B;AAC/BmC,QAAAA,EAAE,GAAIA,EAAE,IAAI,EAAP,GAAcH,IAAI,CAAC,EAAEF,CAAH,CAAJ,IAAa,CAA3B,GAAgCE,IAAI,CAAC,EAAEF,CAAH,CAAzC;AACD,OAFM,MAEA,IAAI,KAAK9B,QAAL,KAAkB,EAAtB,EAA0B;AAC/BmC,QAAAA,EAAE,GAAIA,EAAE,IAAI,EAAP,GAAcH,IAAI,CAAC,EAAEF,CAAH,CAAJ,IAAa,EAA3B,GAAkCE,IAAI,CAAC,EAAEF,CAAH,CAAJ,IAAa,CAA/C,GAAoDE,IAAI,CAAC,EAAEF,CAAH,CAA7D;AACD,OAFM,MAEA,IAAI,KAAK9B,QAAL,GAAgB,EAApB,EAAwB;AAC7B,cAAM,IAAI1D,KAAJ,CAAU,cAAc,KAAK0D,QAAnB,GAA8B,eAAxC,CAAN;AACD;;AACDoC,MAAAA,UAAU,GAAG,KAAKA,UAAlB;AACAC,MAAAA,OAAO,GAAGD,UAAU,IAAIN,CAAC,KAAKE,IAAI,CAAC9C,MAAL,GAAc,CAApB,GAAwB,KAAK0D,UAA7B,GAA0C,CAA9C,CAApB;;AACA,WAAKvE,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIgE,OAAjB,EAA0BhE,CAAC,EAA3B,EAA+B;AAC7BiE,QAAAA,MAAM,GAAIH,EAAE,IAAK,KAAKW,SAAL,GAAiBV,UAAzB,GAAwC,KAAKW,IAAtD;;AACA,YAAI,KAAK7C,SAAL,KAAmB,CAAvB,EAA0B;AACxB,cAAI,KAAKF,QAAL,GAAgB,CAApB,EAAuB;AAAE;AACvB;AACAsC,YAAAA,MAAM,IAAI,OAAO,KAAKS,IAAtB;AACAT,YAAAA,MAAM,IAAI,CAAV;AACD,WAJD,MAIO,IAAI,KAAKtC,QAAL,GAAgB,CAApB,EAAuB;AAC5BsC,YAAAA,MAAM,GAAIA,MAAM,GAAG,KAAKS,IAAf,GAAuB,GAAvB,GAA6B,CAAtC;AACD;AACF;;AACDd,QAAAA,OAAO,CAAC3C,IAAR,CAAagD,MAAb;AACAF,QAAAA,UAAU;AACX;;AACDN,MAAAA,CAAC;AACF;AACF,GAzC8C,CA2C/C;;;AACA,MAAIhC,KAAK,IAAI,IAAb,EAAmB;AACjBmC,IAAAA,OAAO,GAAGA,OAAO,CAAC9E,KAAR,CAAc,CAAd,EAAiB2C,KAAK,GAAG,KAAKyC,WAA9B,CAAV;AACD;;AAED,SAAON,OAAP;AACD,CAjDD,C,CAmDA;;;AACAlG,GAAG,CAACoC,SAAJ,CAAcgF,OAAd,GAAwB;AACtBC,EAAAA,GAAG,EAAE,SAASI,GAAT,CAAa1B,CAAb,EAAgBE,IAAhB,EAAsBD,KAAtB,EAA6B0B,GAA7B,EAAkC;AACrC,QAAI3B,CAAC,GAAG2B,GAAR,EAAa,OAAOzB,IAAI,CAACF,CAAD,CAAX;AACb,WAAO,CAACE,IAAI,CAACF,CAAD,CAAJ,GAAUE,IAAI,CAACF,CAAC,GAAG2B,GAAL,CAAf,IAA4B,GAAnC;AACD,GAJqB;AAKtBJ,EAAAA,EAAE,EAAE,SAASK,EAAT,CAAY5B,CAAZ,EAAeE,IAAf,EAAqBD,KAArB,EAA4B0B,GAA5B,EAAiC;AACnC,WAAO,CAACzB,IAAI,CAACF,CAAD,CAAJ,IAAWC,KAAK,CAACD,CAAD,CAAL,IAAY,CAAvB,CAAD,IAA8B,GAArC;AACD,GAPqB;AAQtBwB,EAAAA,OAAO,EAAE,SAASK,OAAT,CAAiB7B,CAAjB,EAAoBE,IAApB,EAA0BD,KAA1B,EAAiC0B,GAAjC,EAAsC;AAC7C,QAAI3B,CAAC,GAAG2B,GAAR,EAAa,OAAOf,IAAI,CAACkB,KAAL,CAAW,CAAC7B,KAAK,CAACD,CAAD,CAAL,IAAY,CAAb,IAAkB,CAA7B,CAAP,CADgC,CAE7C;;AACA,WAAO,CAACE,IAAI,CAACF,CAAD,CAAJ,GACJY,IAAI,CAACkB,KAAL,CAAW,CAAC5B,IAAI,CAACF,CAAC,GAAG2B,GAAL,CAAJ,GAAgB1B,KAAK,CAACD,CAAD,CAAtB,IAA6B,CAAxC,CADG,CAEL;AAFK,QAGH,GAHJ;AAID,GAfqB;AAgBtByB,EAAAA,KAAK,EAAE,SAASM,KAAT,CAAe/B,CAAf,EAAkBE,IAAlB,EAAwBD,KAAxB,EAA+B0B,GAA/B,EAAoC;AACzC,QAAI3B,CAAC,GAAG2B,GAAR,EAAa,OAAO1B,KAAK,CAACD,CAAD,CAAL,IAAY,CAAnB;AACb,WAAO,CAACE,IAAI,CAACF,CAAD,CAAJ,GAAU,KAAKgC,UAAL,CAChB9B,IAAI,CAACF,CAAC,GAAG2B,GAAL,CADY,EACD1B,KAAK,CAACD,CAAD,CAAL,IAAY,CADX,EACcC,KAAK,CAACD,CAAC,GAAG2B,GAAL,CAAL,IAAkB,CADhC,CAAX,IAEF,GAFL;AAGD,GArBqB;AAsBtBK,EAAAA,UAAU,EAAE,SAASC,cAAT,CAAwBrD,CAAxB,EAA2BD,CAA3B,EAA8BuD,CAA9B,EAAiC;AAC3C;AACA,QAAIpE,CAAC,GAAGc,CAAC,GAAGD,CAAJ,GAAQuD,CAAhB;AAAA,QACIC,EAAE,GAAGvB,IAAI,CAACwB,GAAL,CAAStE,CAAC,GAAGc,CAAb,CADT;AAAA,QAEIyD,EAAE,GAAGzB,IAAI,CAACwB,GAAL,CAAStE,CAAC,GAAGa,CAAb,CAFT;AAAA,QAGI2D,EAAE,GAAG1B,IAAI,CAACwB,GAAL,CAAStE,CAAC,GAAGoE,CAAb,CAHT;AAIA,QAAIC,EAAE,IAAIE,EAAN,IAAYF,EAAE,IAAIG,EAAtB,EAA0B,OAAO1D,CAAP;AAC1B,QAAIyD,EAAE,IAAIC,EAAV,EAAc,OAAO3D,CAAP;AACd,WAAOuD,CAAP;AACD;AA/BqB,CAAxB;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAjI,GAAG,CAACoC,SAAJ,CAAc6E,qBAAd,GAAsC,UAASvD,GAAT,EAAc;AAClD,MAAI4E,KAAJ,EACIC,GADJ,EAEIrC,OAFJ,EAGIsC,aAHJ,EAIIlG,CAJJ,EAKImG,IALJ,EAMIC,MANJ,EAOIC,MAPJ,EAQIC,KARJ,EASIC,KATJ,EAUIC,KAVJ,EAWIC,GAXJ,EAYIC,QAZJ,EAaIC,CAbJ,EAcIC,WAdJ,EAeIC,QAfJ,EAgBIC,IAhBJ,EAiBIC,MAjBJ,EAkBIC,CAlBJ,EAmBIC,UAnBJ,EAoBIC,IApBJ,EAqBIC,CArBJ,EAsBIH,CAtBJ,EAuBII,CAvBJ;AAyBA,MAAIC,KAAK,GAAG,CACV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADU,EAEV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAFU,EAGV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHU,EAIV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJU,EAKV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALU,EAMV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CANU,EAOV,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAPU,CAAZ,CA1BkD,CAoClD;;AACArB,EAAAA,KAAK,GAAI,KAAKrE,QAAL,GAAgB,CAAjB,GAAsB,KAAKuC,WAAnC,CArCkD,CAuClD;;AACA+B,EAAAA,GAAG,GAAG,KAAKxE,KAAL,GAAa,KAAKyC,WAAxB,CAxCkD,CA0ClD;AACA;AACA;;AACAN,EAAAA,OAAO,GAAG,IAAIvF,MAAJ,CAAW4H,GAAG,GAAG,KAAKvE,MAAtB,CAAV;AACAkC,EAAAA,OAAO,CAAC0D,IAAR,CAAa,CAAb;AAEApB,EAAAA,aAAa,GAAG,CAAhB;;AAEA,OAAKlG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGqH,KAAK,CAACxG,MAAtB,EAA8Bb,CAAC,EAA/B,EAAmC;AACjCmG,IAAAA,IAAI,GAAGkB,KAAK,CAACrH,CAAD,CAAZ;AACAoG,IAAAA,MAAM,GAAGD,IAAI,CAAC,CAAD,CAAb;AACAE,IAAAA,MAAM,GAAGF,IAAI,CAAC,CAAD,CAAb;AACAG,IAAAA,KAAK,GAAGH,IAAI,CAAC,CAAD,CAAZ;AACAI,IAAAA,KAAK,GAAGJ,IAAI,CAAC,CAAD,CAAZ;AACA,QAAIC,MAAM,IAAI,KAAK3E,KAAnB,EAA0B,SANO,CAOjC;AACA;AACA;;AACA+E,IAAAA,KAAK,GAAG,EAAR,CAViC,CAWjC;;AACAC,IAAAA,GAAG,GAAGpC,IAAI,CAACC,IAAL,CAAU,CAAC,KAAK7C,KAAL,GAAa2E,MAAd,IAAwBE,KAAlC,CAAN,CAZiC,CAajC;;AACAI,IAAAA,QAAQ,GAAGrC,IAAI,CAACC,IAAL,CAAU0B,KAAK,GAAGS,GAAlB,CAAX;;AACA,SAAKE,CAAC,GAAGN,MAAT,EAAiBM,CAAC,GAAG,KAAKjF,MAA1B,EAAkCiF,CAAC,IAAIJ,KAAvC,EAA8C;AAC5CK,MAAAA,WAAW,GAAGxF,GAAG,CAAC8E,aAAD,CAAjB;AACAA,MAAAA,aAAa,IAAI,CAAjB;AACAW,MAAAA,QAAQ,GAAGzF,GAAG,CAACtC,KAAJ,CAAUoH,aAAV,EAAyBA,aAAa,GAAGQ,QAAzC,CAAX;AACAR,MAAAA,aAAa,IAAIQ,QAAjB;AACAF,MAAAA,KAAK,GAAG,KAAK5B,YAAL,CAAkBgC,WAAlB,EAA+BC,QAA/B,EAAyCL,KAAzC,CAAR,CAL4C,CAM5C;;AACAM,MAAAA,IAAI,GAAG,KAAKjC,UAAL,CAAgB2B,KAAhB,EAAuBC,GAAvB,CAAP;;AACA,UAAIH,KAAK,KAAK,CAAd,EAAiB;AACfhJ,QAAAA,MAAM,CAACiK,KAAP,CAAanB,MAAb,EAAqB,CAArB;AACAW,QAAAA,MAAM,GAAGJ,CAAC,GAAGV,GAAb;;AACA,aAAKe,CAAC,GAAGD,MAAJ,EAAYK,CAAC,GAAG,CAArB,EAAwBJ,CAAC,GAAGD,MAAM,GAAGd,GAArC,EAA0Ce,CAAC,IAAII,CAAC,EAAhD,EAAoD;AAClDxD,UAAAA,OAAO,CAACoD,CAAD,CAAP,GAAaF,IAAI,CAACM,CAAD,CAAjB;AACD;AACF,OAND,MAMO;AACLL,QAAAA,MAAM,GAAGJ,CAAC,GAAGV,GAAJ,GAAUG,MAAM,GAAG,KAAKlC,WAAjC;AACA+C,QAAAA,UAAU,GAAG,CAACN,CAAC,GAAG,CAAL,IAAUV,GAAvB;AACAiB,QAAAA,IAAI,GAAG,KAAKhD,WAAL,GAAmBoC,KAA1B;;AACA,aAAKa,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,KAAKjD,WAArB,EAAkCiD,CAAC,EAAnC,EAAuC;AACrC,eAAKH,CAAC,GAAGD,MAAM,GAAGI,CAAb,EAAgBC,CAAC,GAAGD,CAAzB,EAA4BH,CAAC,GAAGC,UAAhC,EAA4CD,CAAC,IAAIE,IAAL,EAAWE,CAAC,IAAI,KAAKlD,WAAjE,EAA8E;AAC5EN,YAAAA,OAAO,CAACoD,CAAD,CAAP,GAAaF,IAAI,CAACM,CAAD,CAAjB;AACD;AACF;AACF;AACF;AACF;;AAED,SAAOxD,OAAP;AACD,CA7FD;;AA+FAlG,GAAG,CAACoC,SAAJ,CAAcL,YAAd,GAA6B,UAASzB,MAAT,EAAiB;AAC5C,MAAIwB,GAAG,GAAG,EAAV;AAAA,MACIQ,CADJ;;AAGA,MAAI,KAAK6B,SAAL,KAAmB,CAAvB,EAA0B;AACxB7D,IAAAA,MAAM,GAAGA,MAAM,CAACsF,GAAP,CAAW,UAASW,MAAT,EAAiB;AACnC,aAAO;AAAE/B,QAAAA,CAAC,EAAE+B,MAAM,CAAC,CAAD,CAAX;AAAgB9B,QAAAA,CAAC,EAAE8B,MAAM,CAAC,CAAD,CAAzB;AAA8B7B,QAAAA,CAAC,EAAE6B,MAAM,CAAC,CAAD,CAAvC;AAA4C5B,QAAAA,CAAC,EAAE;AAA/C,OAAP;AACD,KAFQ,CAAT;AAGD,GAJD,MAIO,IAAI,KAAKR,SAAL,KAAmB,CAAvB,EAA0B;AAC/B7D,IAAAA,MAAM,GAAGA,MAAM,CAACsF,GAAP,CAAW,UAASW,MAAT,EAAiB;AACnC,aAAO;AAAE/B,QAAAA,CAAC,EAAE+B,MAAM,CAAC,CAAD,CAAX;AAAgB9B,QAAAA,CAAC,EAAE8B,MAAM,CAAC,CAAD,CAAzB;AAA8B7B,QAAAA,CAAC,EAAE6B,MAAM,CAAC,CAAD,CAAvC;AAA4C5B,QAAAA,CAAC,EAAE;AAA/C,OAAP;AACD,KAFQ,CAAT;AAGD,GAJM,MAIA,IAAI,KAAKR,SAAL,KAAmB,CAAvB,EAA0B;AAC/B7D,IAAAA,MAAM,GAAGA,MAAM,CAACsF,GAAP,CAAW,UAASW,MAAT,EAAiB;AACnC,UAAI,CAAC,KAAKhC,OAAL,CAAagC,MAAM,CAAC,CAAD,CAAnB,CAAL,EAA8B,MAAM,IAAIhG,KAAJ,CAAU,mBAAV,CAAN;AAC9B,aAAO,KAAKgE,OAAL,CAAagC,MAAM,CAAC,CAAD,CAAnB,CAAP;AACD,KAHQ,EAGN,IAHM,CAAT;AAID,GALM,MAKA,IAAI,KAAKpC,SAAL,KAAmB,CAAvB,EAA0B;AAC/B7D,IAAAA,MAAM,GAAGA,MAAM,CAACsF,GAAP,CAAW,UAASW,MAAT,EAAiB;AACnC,aAAO;AAAE/B,QAAAA,CAAC,EAAE+B,MAAM,CAAC,CAAD,CAAX;AAAgB9B,QAAAA,CAAC,EAAE8B,MAAM,CAAC,CAAD,CAAzB;AAA8B7B,QAAAA,CAAC,EAAE6B,MAAM,CAAC,CAAD,CAAvC;AAA4C5B,QAAAA,CAAC,EAAE4B,MAAM,CAAC,CAAD;AAArD,OAAP;AACD,KAFQ,CAAT;AAGD,GAJM,MAIA,IAAI,KAAKpC,SAAL,KAAmB,CAAvB,EAA0B;AAC/B7D,IAAAA,MAAM,GAAGA,MAAM,CAACsF,GAAP,CAAW,UAASW,MAAT,EAAiB;AACnC,aAAO;AAAE/B,QAAAA,CAAC,EAAE+B,MAAM,CAAC,CAAD,CAAX;AAAgB9B,QAAAA,CAAC,EAAE8B,MAAM,CAAC,CAAD,CAAzB;AAA8B7B,QAAAA,CAAC,EAAE6B,MAAM,CAAC,CAAD,CAAvC;AAA4C5B,QAAAA,CAAC,EAAE4B,MAAM,CAAC,CAAD;AAArD,OAAP;AACD,KAFQ,CAAT;AAGD;;AAED,OAAKjE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGhC,MAAM,CAAC6C,MAAvB,EAA+Bb,CAAC,IAAI,KAAKyB,KAAzC,EAAgD;AAC9CjC,IAAAA,GAAG,CAACyB,IAAJ,CAASjD,MAAM,CAACc,KAAP,CAAakB,CAAb,EAAgBA,CAAC,GAAG,KAAKyB,KAAzB,CAAT;AACD;;AAED,SAAOjC,GAAP;AACD,CAhCD;;AAkCA9B,GAAG,CAACoC,SAAJ,CAAcH,aAAd,GAA8B,UAASH,GAAT,EAAc5B,OAAd,EAAuB;AACnD,MAAI4B,GAAG,GAAGA,GAAG,IAAI,KAAKA,GAAtB;AAAA,MACI5B,OAAO,GAAGA,OAAO,IAAI,KAAKA,OAD9B;AAAA,MAEI8B,OAAO,GAAG,EAFd;AAAA,MAGI8H,KAAK,GAAG5J,OAAO,CAAC4J,KAAR,IAAiB,IAH7B;AAAA,MAII9F,MAAM,GAAGlC,GAAG,CAACqB,MAJjB;AAAA,MAKIY,KAAK,GAAGjC,GAAG,CAAC,CAAD,CAAH,CAAOqB,MALnB;AAAA,MAMI4G,OAAO,GAAG7J,OAAO,CAAC6D,KANtB;AAAA,MAOIiG,QAAQ,GAAG9J,OAAO,CAAC8D,MAPvB;AAAA,MAQIiC,IARJ;AAAA,MASIF,CATJ;AAAA,MAUIkD,CAVJ;AAAA,MAWIgB,EAXJ;AAAA,MAYIC,EAZJ;AAAA,MAaIJ,KAbJ;AAAA,MAcIK,EAdJ;AAAA,MAeIC,EAfJ;;AAiBA,MAAIL,OAAJ,EAAa;AACXD,IAAAA,KAAK,GAAGC,OAAO,GAAGhG,KAAlB;AACD,GAFD,MAEO,IAAIiG,QAAJ,EAAc;AACnBF,IAAAA,KAAK,GAAGE,QAAQ,GAAGhG,MAAnB;AACD;;AAED,MAAI,CAACgG,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAGrD,IAAI,CAAC0D,KAAL,CAAWrG,MAAM,GAAG8F,KAApB,CAAX;AACD;;AAED,MAAI,CAACC,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAGpD,IAAI,CAAC0D,KAAL,CAAWtG,KAAK,GAAG+F,KAAnB,CAAV;AACD;;AAEDM,EAAAA,EAAE,GAAGpG,MAAM,GAAGgG,QAAd;AACAG,EAAAA,EAAE,GAAGpG,KAAK,GAAGgG,OAAb;;AAEA,OAAKd,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGnH,GAAG,CAACqB,MAApB,EAA4B8F,CAAC,IAAImB,EAAjC,EAAqC;AACnCnE,IAAAA,IAAI,GAAG,EAAP;AACAiE,IAAAA,EAAE,GAAGvD,IAAI,CAAC0D,KAAL,CAAWpB,CAAX,CAAL;AACA,QAAI,CAACnH,GAAG,CAACoI,EAAD,CAAR,EAAc;;AACd,SAAKnE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGjE,GAAG,CAACoI,EAAD,CAAH,CAAQ/G,MAAxB,EAAgC4C,CAAC,IAAIoE,EAArC,EAAyC;AACvCF,MAAAA,EAAE,GAAGtD,IAAI,CAAC0D,KAAL,CAAWtE,CAAX,CAAL;AACA,UAAI,CAACjE,GAAG,CAACoI,EAAD,CAAH,CAAQD,EAAR,CAAL,EAAkB;AAClBhE,MAAAA,IAAI,CAAC1C,IAAL,CAAUzB,GAAG,CAACoI,EAAD,CAAH,CAAQD,EAAR,CAAV;AACD;;AACDjI,IAAAA,OAAO,CAACuB,IAAR,CAAa0C,IAAb;AACD;;AAED,SAAOjE,OAAP;AACD,CAhDD;;AAkDAhC,GAAG,CAACoC,SAAJ,CAAckI,UAAd,GAA2B,UAASxI,GAAT,EAAc;AACvC,MAAIyI,IAAI,GAAG,IAAX;AAAA,MACIC,GAAG,GAAG,EADV;AAGA1I,EAAAA,GAAG,CAAC2I,OAAJ,CAAY,UAASxE,IAAT,EAAegD,CAAf,EAAkB;AAC5BhD,IAAAA,IAAI,CAACwE,OAAL,CAAa,UAASC,KAAT,EAAgB3E,CAAhB,EAAmB;AAC9B,UAAI4E,KAAK,GAAGJ,IAAI,CAACK,QAAL,CAAc7E,CAAd,EAAiBkD,CAAjB,EAAoBhD,IAApB,EAA0ByE,KAA1B,CAAZ;AACAF,MAAAA,GAAG,IAAID,IAAI,CAACM,UAAL,CAAgBH,KAAhB,EAAuBC,KAAvB,CAAP;AACD,KAHD;AAIAH,IAAAA,GAAG,IAAI,IAAP;AACD,GAND;AAQA,SAAOA,GAAP;AACD,CAbD;;AAeAxK,GAAG,CAACoC,SAAJ,CAAc0I,aAAd,GAA8B,UAAShJ,GAAT,EAAciJ,EAAd,EAAkB;AAC9C,MAAIR,IAAI,GAAG,IAAX;AAAA,MACIC,GAAG,GAAG,EADV;AAGA1I,EAAAA,GAAG,CAAC2I,OAAJ,CAAY,UAASxE,IAAT,EAAegD,CAAf,EAAkB;AAC5BhD,IAAAA,IAAI,CAACwE,OAAL,CAAa,UAASC,KAAT,EAAgB3E,CAAhB,EAAmB;AAC9B,UAAI4E,KAAK,GAAGJ,IAAI,CAACK,QAAL,CAAc7E,CAAd,EAAiBkD,CAAjB,EAAoBhD,IAApB,EAA0ByE,KAA1B,CAAZ;AACAF,MAAAA,GAAG,IAAID,IAAI,CAACS,WAAL,CAAiBN,KAAjB,EAAwBC,KAAxB,CAAP;AACD,KAHD;AAIAH,IAAAA,GAAG,IAAI,IAAP;AACD,GAND;AAQAO,EAAAA,EAAE,CAACE,UAAH,CAAcT,GAAd;AAEA,SAAOA,GAAP;AACD,CAfD;;AAiBAxK,GAAG,CAACoC,SAAJ,CAAc8I,YAAd,GAA6B,UAASpJ,GAAT,EAAcqJ,MAAd,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC;AACjE,MAAIhB,IAAI,GAAG,IAAX;AAAA,MACIiB,KAAK,GAAGL,MAAM,CAACK,KADnB;AAAA,MAEIC,SAFJ;AAAA,MAGIxC,CAHJ;AAAA,MAIIiB,EAJJ;AAAA,MAKInE,CALJ;AAAA,MAMIkE,EANJ;AAAA,MAOIpF,KAPJ;AAAA,MAQI6G,IARJ;AAAA,MASItF,EATJ;AAWAqF,EAAAA,SAAS,GAAG3J,GAAG,CAAC6J,MAAJ,CAAW,UAASF,SAAT,EAAoBxF,IAApB,EAA0BgD,CAA1B,EAA6B;AAClD,QAAI2C,QAAQ,GAAG,EAAf;AACA3F,IAAAA,IAAI,CAACwE,OAAL,CAAa,UAASC,KAAT,EAAgB3E,CAAhB,EAAmB;AAC9B,UAAI4E,KAAK,GAAGJ,IAAI,CAACK,QAAL,CAAc7E,CAAd,EAAiBkD,CAAjB,EAAoBhD,IAApB,EAA0ByE,KAA1B,CAAZ;AAAA,UACImB,IAAI,GAAGtB,IAAI,CAACuB,WAAL,CAAiBpB,KAAjB,EAAwBC,KAAxB,CADX;AAEAiB,MAAAA,QAAQ,CAACrI,IAAT,CAAcsI,IAAd;AACD,KAJD;AAKAJ,IAAAA,SAAS,CAAClI,IAAV,CAAeqI,QAAf;AACA,WAAOH,SAAP;AACD,GATW,EAST,EATS,CAAZ;;AAWA,OAAKxC,CAAC,GAAGqC,EAAT,EAAarC,CAAC,GAAGsC,EAAjB,EAAqBtC,CAAC,EAAtB,EAA0B;AACxBiB,IAAAA,EAAE,GAAGjB,CAAC,GAAGqC,EAAT;;AACA,SAAKvF,CAAC,GAAGqF,EAAT,EAAarF,CAAC,GAAGsF,EAAjB,EAAqBtF,CAAC,EAAtB,EAA0B;AACxBkE,MAAAA,EAAE,GAAGlE,CAAC,GAAGqF,EAAT;;AACA,UAAII,KAAK,CAACvC,CAAD,CAAL,IAAYuC,KAAK,CAACvC,CAAD,CAAL,CAASlD,CAAT,CAAZ,IAA2B0F,SAAS,CAACvB,EAAD,CAApC,IAA4CuB,SAAS,CAACvB,EAAD,CAAT,CAAcD,EAAd,CAAhD,EAAmE;AACjEpF,QAAAA,KAAK,GAAG4G,SAAS,CAACvB,EAAD,CAAT,CAAcD,EAAd,EAAkB8B,GAAlB,EAAR,CADiE,CAEjE;;AACA,YAAIlH,KAAK,KAAK,GAAd,EAAmB;AACjB;AACD,SALgE,CAMjE;;;AACA,YAAIA,KAAK,GAAG,GAAZ,EAAiB;AACf6G,UAAAA,IAAI,GAAGD,SAAS,CAACvB,EAAD,CAAT,CAAcD,EAAd,EAAkB,CAAlB,CAAP;AACA7D,UAAAA,EAAE,GAAGqF,SAAS,CAACvB,EAAD,CAAT,CAAcD,EAAd,EAAkB,CAAlB,CAAL;AACAuB,UAAAA,KAAK,CAACvC,CAAD,CAAL,CAASlD,CAAT,EAAY,CAAZ,IAAiB,KAAKvF,MAAL,CAAYwL,KAAZ,CAAkBR,KAAK,CAACvC,CAAD,CAAL,CAASlD,CAAT,EAAY,CAAZ,CAAlB,EAAkC2F,IAAlC,EAAwC7G,KAAxC,CAAjB;AACA,cAAIuB,EAAE,KAAK,GAAX,EAAgBoF,KAAK,CAACvC,CAAD,CAAL,CAASlD,CAAT,EAAY,CAAZ,IAAiBK,EAAjB;AAChBoF,UAAAA,KAAK,CAACvC,CAAD,CAAL,CAASgD,KAAT,GAAiB,IAAjB;AACA;AACD,SAdgE,CAejE;;;AACAT,QAAAA,KAAK,CAACvC,CAAD,CAAL,CAASlD,CAAT,IAAc0F,SAAS,CAACvB,EAAD,CAAT,CAAcD,EAAd,CAAd;AACAuB,QAAAA,KAAK,CAACvC,CAAD,CAAL,CAASgD,KAAT,GAAiB,IAAjB;AACD;AACF;AACF;AACF,CAhDD;;AAkDAjM,GAAG,CAACoC,SAAJ,CAAc8J,aAAd,GAA8B,UAASpK,GAAT,EAAciJ,EAAd,EAAkB;AAC9C,MAAIK,EAAE,GAAGL,EAAE,CAACoB,KAAH,GAAWpB,EAAE,CAACqB,KAAvB;AAAA,MACIf,EAAE,GAAGN,EAAE,CAACoB,KAAH,GAAWpB,EAAE,CAAChH,KAAd,GAAsBgH,EAAE,CAACsB,MADlC;AAAA,MAEIf,EAAE,GAAGP,EAAE,CAACuB,IAAH,GAAUvB,EAAE,CAACwB,IAFtB;AAAA,MAGIhB,EAAE,GAAGR,EAAE,CAACuB,IAAH,GAAUvB,EAAE,CAAC/G,MAAb,GAAsB+G,EAAE,CAACyB,OAHlC;AAKA,SAAO,KAAKtB,YAAL,CAAkBpJ,GAAlB,EAAuBiJ,EAAE,CAACI,MAA1B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,CAAP;AACD,CAPD;;AASAvL,GAAG,CAACoC,SAAJ,CAAcyI,UAAd,GAA2B,UAASH,KAAT,EAAgBtE,EAAhB,EAAoB;AAC7C,MAAIqG,GAAG,GAAG,GAAV;AAAA,MACIC,GAAG,GAAG,GADV;AAAA,MAEI/H,CAAC,GAAG+F,KAAK,CAAC/F,CAAN,GAAU,GAFlB;AAAA,MAGIgI,EAHJ;AAAA,MAIIC,EAJJ;AAMAD,EAAAA,EAAE,GAAG,KAAKnM,MAAL,CAAYqM,KAAZ,CACHnC,KAAK,CAAClG,CAAN,GAAUG,CAAV,GAAc8H,GAAd,GAAoB,CADjB,EAEH/B,KAAK,CAACjG,CAAN,GAAUE,CAAV,GAAc8H,GAAd,GAAoB,CAFjB,EAGH/B,KAAK,CAAChG,CAAN,GAAUC,CAAV,GAAc8H,GAAd,GAAoB,CAHjB,CAAL;;AAKA,MAAIrG,EAAE,IAAI,KAAKlG,OAAL,CAAa4M,KAAvB,EAA8B;AAC5BF,IAAAA,EAAE,GAAG,KAAKpM,MAAL,CAAYqM,KAAZ,CACHnC,KAAK,CAAClG,CAAN,GAAUG,CAAV,GAAc+H,GAAd,GAAoB,CADjB,EAEHhC,KAAK,CAACjG,CAAN,GAAUE,CAAV,GAAc+H,GAAd,GAAoB,CAFjB,EAGHhC,KAAK,CAAChG,CAAN,GAAUC,CAAV,GAAc+H,GAAd,GAAoB,CAHjB,CAAL;;AAIA,QAAI/H,CAAC,KAAK,CAAV,EAAa;AACX,aAAO,eAAeiI,EAAf,GAAoB,GAApB,GAA0BxG,EAA1B,GAA+B,QAAtC;AACD;;AACD,WAAO,eAAewG,EAAf,GAAoB,aAApB,GAAoCD,EAApC,GAAyC,GAAzC,GAA+CvG,EAA/C,GAAoD,QAA3D;AACD;;AAED,MAAIzB,CAAC,KAAK,CAAV,EAAa,OAAO,GAAP;AAEb,SAAO,eAAegI,EAAf,GAAoB,UAA3B;AACD,CA1BD;;AA4BA3M,GAAG,CAACoC,SAAJ,CAAc4I,WAAd,GAA4B,UAASN,KAAT,EAAgBtE,EAAhB,EAAoB;AAC9C,MAAIqG,GAAG,GAAG,GAAV;AAAA,MACIC,GAAG,GAAG,GADV;AAAA,MAEI/H,CAAC,GAAG+F,KAAK,CAAC/F,CAAN,GAAU,GAFlB;AAAA,MAGIgI,EAHJ;AAAA,MAIIC,EAJJ;AAMAD,EAAAA,EAAE,GAAG,KAAKnM,MAAL,CAAYuM,QAAZ,CACHrC,KAAK,CAAClG,CAAN,GAAUG,CAAV,GAAc8H,GAAd,GAAoB,CADjB,EAEH/B,KAAK,CAACjG,CAAN,GAAUE,CAAV,GAAc8H,GAAd,GAAoB,CAFjB,EAGH/B,KAAK,CAAChG,CAAN,GAAUC,CAAV,GAAc8H,GAAd,GAAoB,CAHjB,CAAL;;AAKA,MAAIrG,EAAE,IAAI,KAAKlG,OAAL,CAAa4M,KAAvB,EAA8B;AAC5BF,IAAAA,EAAE,GAAG,KAAKpM,MAAL,CAAYuM,QAAZ,CACHrC,KAAK,CAAClG,CAAN,GAAUG,CAAV,GAAc+H,GAAd,GAAoB,CADjB,EAEHhC,KAAK,CAACjG,CAAN,GAAUE,CAAV,GAAc+H,GAAd,GAAoB,CAFjB,EAGHhC,KAAK,CAAChG,CAAN,GAAUC,CAAV,GAAc+H,GAAd,GAAoB,CAHjB,CAAL;;AAIA,QAAI/H,CAAC,KAAK,CAAV,EAAa;AACX,aAAO,MAAMiI,EAAN,GAAW,MAAX,GAAoBxG,EAApB,GAAyB,KAAhC;AACD;;AACD,WAAO,MAAMwG,EAAN,GAAW,OAAX,GAAqBD,EAArB,GAA0B,MAA1B,GAAmCvG,EAAnC,GAAwC,KAA/C;AACD;;AAED,MAAIzB,CAAC,KAAK,CAAV,EAAa,OAAO,GAAP;AAEb,SAAO,MAAMgI,EAAN,GAAW,SAAX,GAAuBA,EAAvB,GAA4B,MAAnC;AACD,CA1BD;;AA4BA3M,GAAG,CAACoC,SAAJ,CAAc0J,WAAd,GAA4B,UAASpB,KAAT,EAAgBtE,EAAhB,EAAoB;AAC9C,MAAIqG,GAAG,GAAG,GAAV;AAAA,MACIC,GAAG,GAAG,GADV;AAAA,MAEI/H,CAAC,GAAG+F,KAAK,CAAC/F,CAAN,GAAU,GAFlB;AAAA,MAGIgI,EAHJ;AAAA,MAIIC,EAJJ;AAMAD,EAAAA,EAAE,GAAG,KAAKnM,MAAL,CAAYqM,KAAZ,CACHnC,KAAK,CAAClG,CAAN,GAAUiI,GAAV,GAAgB,CADb,EAEH/B,KAAK,CAACjG,CAAN,GAAUgI,GAAV,GAAgB,CAFb,EAGH/B,KAAK,CAAChG,CAAN,GAAU+H,GAAV,GAAgB,CAHb,CAAL;;AAKA,MAAIrG,EAAE,IAAI,KAAKlG,OAAL,CAAa4M,KAAvB,EAA8B;AAC5BF,IAAAA,EAAE,GAAG,KAAKpM,MAAL,CAAYqM,KAAZ,CACHnC,KAAK,CAAClG,CAAN,GAAUkI,GAAV,GAAgB,CADb,EAEHhC,KAAK,CAACjG,CAAN,GAAUiI,GAAV,GAAgB,CAFb,EAGHhC,KAAK,CAAChG,CAAN,GAAUgI,GAAV,GAAgB,CAHb,CAAL;AAID,GALD,MAKO;AACLE,IAAAA,EAAE,GAAG,KAAL;AACAxG,IAAAA,EAAE,GAAG,IAAL;AACD,GApB6C,CAsB9C;;;AAEA,SAAO,CAAE,KAAK,EAAN,GAAawG,EAAE,IAAI,CAAnB,GAAyBD,EAAE,IAAI,CAAhC,EAAoCvG,EAAE,IAAI,GAA1C,EAA+CzB,CAA/C,CAAP;AACD,CAzBD,C,CA2BA;;;AACA3E,GAAG,CAACoC,SAAJ,CAAcwI,QAAd,GAA0B,YAAW;AACnC,MAAIoC,MAAM,GAAG,4DAAb;;AAEA,MAAIC,SAAS,GAAG,UAASvC,KAAT,EAAgB;AAC9B,QAAI/F,CAAC,GAAG+F,KAAK,CAAC/F,CAAN,GAAU,GAAlB;AAAA,QACIH,CAAC,GAAGkG,KAAK,CAAClG,CAAN,GAAUG,CADlB;AAAA,QAEIF,CAAC,GAAGiG,KAAK,CAACjG,CAAN,GAAUE,CAFlB;AAAA,QAGID,CAAC,GAAGgG,KAAK,CAAChG,CAAN,GAAUC,CAHlB;AAAA,QAIIuI,CAAC,GAAG,SAAS1I,CAAT,GAAa,SAASC,CAAtB,GAA0B,SAASC,CAJ3C;AAMA,WAAOwI,CAAC,GAAG,GAAX;AACD,GARD;;AAUA,SAAO,UAASnH,CAAT,EAAYkD,CAAZ,EAAehD,IAAf,EAAqByE,KAArB,EAA4B;AACjC,QAAIyC,IAAI,GAAGF,SAAS,CAACvC,KAAD,CAApB;AAAA,QACIC,KAAK,GAAGqC,MAAM,CAACG,IAAI,IAAIH,MAAM,CAAC7J,MAAP,GAAgB,CAApB,CAAJ,GAA6B,CAA9B,CADlB;AAGA,WAAOwH,KAAP;AACD,GALD;AAMD,CAnBwB,EAAzB;;AAqBA3K,GAAG,CAACoC,SAAJ,CAAcD,aAAd,GAA8B,UAASD,MAAT,EAAiB;AAC7C,SAAO,KAAKzB,YAAL,KAAsB,KAAtB,GACH,KAAK2M,mBAAL,CAAyBlL,MAAzB,CADG,GAEH,KAAKmL,mBAAL,CAAyBnL,MAAzB,CAFJ;AAGD,CAJD;;AAMAlC,GAAG,CAACoC,SAAJ,CAAcgL,mBAAd,GAAoC,UAASlL,MAAT,EAAiB;AACnD,MAAI,CAAC,KAAK8C,IAAV,EAAgB;AAChB,SAAO9C,MAAM,CAAC0D,GAAP,CAAW,UAASC,KAAT,EAAgBvD,CAAhB,EAAmB;AACnC,SAAKyB,KAAL,GAAa8B,KAAK,CAACV,IAAN,CAAWpB,KAAxB;AACA,SAAKC,MAAL,GAAc6B,KAAK,CAACV,IAAN,CAAWnB,MAAzB;AAEA,QAAI1D,MAAM,GAAGuF,KAAK,CAACyH,OAAN,IAAiB,KAAKzL,UAAL,CAAgBgE,KAAK,CAACT,IAAtB,CAA9B;AAAA,QACItD,GAAG,GAAG+D,KAAK,CAAC0H,IAAN,IAAc,KAAKxL,YAAL,CAAkBzB,MAAlB,CADxB;AAAA,QAEIkN,EAAE,GAAG3H,KAAK,CAACV,IAFf;AAIA,WAAO;AACLH,MAAAA,IAAI,EAAE,KAAKA,IADN;AAELG,MAAAA,IAAI,EAAEU,KAAK,CAACV,IAFP;AAGLsI,MAAAA,KAAK,EAAGD,EAAE,CAAChI,QAAH,IAAegI,EAAE,CAAC/H,QAAH,IAAe,GAA9B,CAAD,GAAuC,IAAvC,GAA8C,CAHhD;AAIL3D,MAAAA,GAAG,EAAEA;AAJA,KAAP;AAMD,GAdM,EAcJ,IAdI,CAAP;AAeD,CAjBD;;AAmBA9B,GAAG,CAACoC,SAAJ,CAAciL,mBAAd,GAAoC,UAASnL,MAAT,EAAiB;AACnD,MAAI,CAAC,KAAK8C,IAAV,EAAgB;AAEhB,OAAK0I,OAAL,GAAe,IAAf;AACA,OAAKC,QAAL,GAAgB,IAAhB;AAEA,SAAOzL,MAAM,CAAC0D,GAAP,CAAW,UAASC,KAAT,EAAgBvD,CAAhB,EAAmB;AACnC,SAAKyB,KAAL,GAAa8B,KAAK,CAACV,IAAN,CAAWpB,KAAxB;AACA,SAAKC,MAAL,GAAc6B,KAAK,CAACV,IAAN,CAAWnB,MAAzB;AAEA,QAAI1D,MAAM,GAAGuF,KAAK,CAACyH,OAAN,IAAiB,KAAKzL,UAAL,CAAgBgE,KAAK,CAACT,IAAtB,CAA9B;AAAA,QACItD,GAAG,GAAG+D,KAAK,CAAC0H,IAAN,IAAc,KAAKxL,YAAL,CAAkBzB,MAAlB,CADxB;AAAA,QAEIsN,SAAS,GAAG,KAAKC,WAAL,CAAiB/L,GAAjB,EAAsB+D,KAAtB,EAA6BvD,CAA7B,CAFhB;AAAA,QAGIN,OAAO,GAAG,KAAKC,aAAL,CAAmB2L,SAAnB,CAHd;AAAA,QAIIJ,EAAE,GAAG3H,KAAK,CAACV,IAJf;AAMA,WAAO;AACLH,MAAAA,IAAI,EAAE,KAAKA,IADN;AAELG,MAAAA,IAAI,EAAEU,KAAK,CAACV,IAFP;AAGLsI,MAAAA,KAAK,EAAGD,EAAE,CAAChI,QAAH,IAAegI,EAAE,CAAC/H,QAAH,IAAe,GAA9B,CAAD,GAAuC,IAAvC,GAA8C,CAHhD;AAIL3D,MAAAA,GAAG,EAAE8L,SAJA;AAKL5L,MAAAA,OAAO,EAAEA;AALJ,KAAP;AAOD,GAjBM,EAiBJ,IAjBI,CAAP;AAkBD,CAxBD;;AA0BAhC,GAAG,CAACoC,SAAJ,CAAcyL,WAAd,GAA4B,UAAS/L,GAAT,EAAc+D,KAAd,EAAqBvD,CAArB,EAAwB;AAClD,MAAIwL,KAAK,GAAG,KAAK5L,MAAL,CAAY,CAAZ,CAAZ;AAAA,MACI6L,IAAI,GAAG,KAAK7L,MAAL,CAAYI,CAAC,GAAG,CAAhB,CADX;AAAA,MAEIkL,EAAE,GAAG3H,KAAK,CAACV,IAFf;AAAA,MAGI6I,EAAE,GAAGR,EAAE,CAAClI,OAHZ;AAAA,MAII2I,EAAE,GAAGT,EAAE,CAACjI,OAJZ;AAAA,MAKI2I,GALJ;AAAA,MAMIC,GANJ;AAAA,MAOIpI,CAPJ;AAAA,MAQIkD,CARJ;AAAA,MASIhD,IATJ;AAAA,MAUIpC,CAVJ;;AAYA,MAAI,CAAC,KAAK6J,OAAV,EAAmB;AACjB,SAAKA,OAAL,GAAe,EAAf;;AACA,SAAKzE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6E,KAAK,CAAC3I,IAAN,CAAWnB,MAA3B,EAAmCiF,CAAC,EAApC,EAAwC;AACtChD,MAAAA,IAAI,GAAG,EAAP;;AACA,WAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+H,KAAK,CAAC3I,IAAN,CAAWpB,KAA3B,EAAkCgC,CAAC,EAAnC,EAAuC;AACrClC,QAAAA,CAAC,GAAG/B,GAAG,CAACmH,CAAD,CAAH,CAAOlD,CAAP,CAAJ;AACAE,QAAAA,IAAI,CAAC1C,IAAL,CAAU;AAAEiB,UAAAA,CAAC,EAAEX,CAAC,CAACW,CAAP;AAAUC,UAAAA,CAAC,EAAEZ,CAAC,CAACY,CAAf;AAAkBC,UAAAA,CAAC,EAAEb,CAAC,CAACa,CAAvB;AAA0BC,UAAAA,CAAC,EAAEd,CAAC,CAACc;AAA/B,SAAV;AACD;;AACD,WAAK+I,OAAL,CAAanK,IAAb,CAAkB0C,IAAlB;AACD;AACF;;AAED,MAAI8H,IAAI,IAAIA,IAAI,CAAC5I,IAAL,CAAUO,SAAV,KAAwB,CAApC,EAAuC;AACrCwI,IAAAA,GAAG,GAAGH,IAAI,CAAC5I,IAAL,CAAUG,OAAhB;AACA6I,IAAAA,GAAG,GAAGJ,IAAI,CAAC5I,IAAL,CAAUI,OAAhB;;AACA,SAAK0D,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8E,IAAI,CAAC5I,IAAL,CAAUnB,MAA1B,EAAkCiF,CAAC,EAAnC,EAAuC;AACrC,WAAKlD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgI,IAAI,CAAC5I,IAAL,CAAUpB,KAA1B,EAAiCgC,CAAC,EAAlC,EAAsC;AACpC,YAAIgI,IAAI,CAAC5I,IAAL,CAAUO,SAAV,KAAwB,CAA5B,EAA+B,CAC7B;AACD,SAFD,MAEO,IAAIqI,IAAI,CAAC5I,IAAL,CAAUO,SAAV,KAAwB,CAA5B,EAA+B;AACpC;AACA,eAAKgI,OAAL,CAAaS,GAAG,GAAGlF,CAAnB,EAAsBiF,GAAG,GAAGnI,CAA5B,IAAiC;AAAEvB,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE,CAAX;AAAcC,YAAAA,CAAC,EAAE,CAAjB;AAAoBC,YAAAA,CAAC,EAAE;AAAvB,WAAjC;AACD,SAHM,MAGA,IAAIoJ,IAAI,CAAC5I,IAAL,CAAUO,SAAV,KAAwB,CAA5B,EAA+B;AACpC;AACA7B,UAAAA,CAAC,GAAG,KAAK8J,QAAL,CAAc1E,CAAd,EAAiBlD,CAAjB,CAAJ;AACA,eAAK2H,OAAL,CAAaS,GAAG,GAAGlF,CAAnB,EAAsBiF,GAAG,GAAGnI,CAA5B,IAAiC;AAAEvB,YAAAA,CAAC,EAAEX,CAAC,CAACW,CAAP;AAAUC,YAAAA,CAAC,EAAEZ,CAAC,CAACY,CAAf;AAAkBC,YAAAA,CAAC,EAAEb,CAAC,CAACa,CAAvB;AAA0BC,YAAAA,CAAC,EAAEd,CAAC,CAACc;AAA/B,WAAjC;AACD;AACF;AACF;AACF;;AAED,MAAIkB,KAAK,CAACV,IAAN,CAAWO,SAAX,KAAyB,CAA7B,EAAgC;AAC9B,SAAKiI,QAAL,GAAgB,EAAhB;;AACA,SAAK1E,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpD,KAAK,CAACV,IAAN,CAAWnB,MAA3B,EAAmCiF,CAAC,EAApC,EAAwC;AACtChD,MAAAA,IAAI,GAAG,EAAP;;AACA,WAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,KAAK,CAACV,IAAN,CAAWpB,KAA3B,EAAkCgC,CAAC,EAAnC,EAAuC;AACrClC,QAAAA,CAAC,GAAG,KAAK6J,OAAL,CAAaO,EAAE,GAAGhF,CAAlB,EAAqB+E,EAAE,GAAGjI,CAA1B,CAAJ;AACAE,QAAAA,IAAI,CAAC1C,IAAL,CAAU;AAAEiB,UAAAA,CAAC,EAAEX,CAAC,CAACW,CAAP;AAAUC,UAAAA,CAAC,EAAEZ,CAAC,CAACY,CAAf;AAAkBC,UAAAA,CAAC,EAAEb,CAAC,CAACa,CAAvB;AAA0BC,UAAAA,CAAC,EAAEd,CAAC,CAACc;AAA/B,SAAV;AACD;;AACD,WAAKgJ,QAAL,CAAcpK,IAAd,CAAmB0C,IAAnB;AACD;AACF,GAVD,MAUO;AACL,SAAK0H,QAAL,GAAgB,IAAhB;AACD;;AAED,OAAK1E,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpD,KAAK,CAACV,IAAN,CAAWnB,MAA3B,EAAmCiF,CAAC,EAApC,EAAwC;AACtC,SAAKlD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,KAAK,CAACV,IAAN,CAAWpB,KAA3B,EAAkCgC,CAAC,EAAnC,EAAuC;AACrClC,MAAAA,CAAC,GAAG/B,GAAG,CAACmH,CAAD,CAAH,CAAOlD,CAAP,CAAJ;;AACA,UAAIyH,EAAE,CAAC7H,OAAH,KAAe,CAAnB,EAAsB;AACpB;AACA,aAAK+H,OAAL,CAAaO,EAAE,GAAGhF,CAAlB,EAAqB+E,EAAE,GAAGjI,CAA1B,IAA+B;AAAEvB,UAAAA,CAAC,EAAEX,CAAC,CAACW,CAAP;AAAUC,UAAAA,CAAC,EAAEZ,CAAC,CAACY,CAAf;AAAkBC,UAAAA,CAAC,EAAEb,CAAC,CAACa,CAAvB;AAA0BC,UAAAA,CAAC,EAAEd,CAAC,CAACc;AAA/B,SAA/B;AACD,OAHD,MAGO,IAAI6I,EAAE,CAAC7H,OAAH,KAAe,CAAnB,EAAsB;AAC3B;AACA,YAAI9B,CAAC,CAACc,CAAF,KAAQ,CAAZ,EAAe;AACb,eAAK+I,OAAL,CAAaO,EAAE,GAAGhF,CAAlB,EAAqB+E,EAAE,GAAGjI,CAA1B,IAA+B;AAAEvB,YAAAA,CAAC,EAAEX,CAAC,CAACW,CAAP;AAAUC,YAAAA,CAAC,EAAEZ,CAAC,CAACY,CAAf;AAAkBC,YAAAA,CAAC,EAAEb,CAAC,CAACa,CAAvB;AAA0BC,YAAAA,CAAC,EAAEd,CAAC,CAACc;AAA/B,WAA/B;AACD;AACF;AACF;AACF;;AAED,SAAO,KAAK+I,OAAZ;AACD,CA1ED;;AA4EA1N,GAAG,CAACoC,SAAJ,CAAcgM,QAAd,GAAyB,UAASC,QAAT,EAAmB;AAC1C,MAAI,CAAC,KAAKnM,MAAV,EAAkB;AAChB,WAAOmM,QAAQ,CAAC,KAAKvM,GAAN,EAAW,KAAKE,OAAhB,CAAf;AACD;;AAED,MAAIuI,IAAI,GAAG,IAAX;AAAA,MACIrF,QAAQ,GAAG,KAAKF,IAAL,CAAUE,QAAV,IAAsBoJ,QADrC;AAAA,MAEIC,OAAO,GAAG,CAFd;AAAA,MAGIjM,CAAC,GAAG,CAAC,CAHT;AAKA,OAAKoL,OAAL,GAAe,IAAf;AACA,OAAKC,QAAL,GAAgB,IAAhB;;AAEA,MAAIa,UAAU,GAAG,YAAW;AAC1B,QAAI,CAACD,OAAL,EAAc;AAEd,QAAI1I,KAAK,GAAG0E,IAAI,CAACrI,MAAL,CAAY,EAAEI,CAAd,CAAZ;;AACA,QAAI,CAACuD,KAAL,EAAY;AACV,UAAI,CAAC,GAAEX,QAAP,EAAiB,OAAOmJ,QAAQ,EAAf;AACjB/L,MAAAA,CAAC,GAAG,CAAC,CAAL,CAFU,CAGV;;AACAiI,MAAAA,IAAI,CAACmD,OAAL,GAAe,IAAf;AACAnD,MAAAA,IAAI,CAACoD,QAAL,GAAgB,IAAhB;AACA,aAAOc,YAAY,CAACC,IAAD,CAAnB;AACD;;AAED,QAAI5M,GAAG,GAAG+D,KAAK,CAAC/D,GAAhB;AAAA,QACI8L,SAAS,GAAGrD,IAAI,CAACsD,WAAL,CAAiB/L,GAAjB,EAAsB+D,KAAtB,EAA6BvD,CAA7B,CADhB;AAAA,QAEIN,OAAO,GAAGuI,IAAI,CAACtI,aAAL,CAAmB2L,SAAnB,CAFd;AAIAS,IAAAA,QAAQ,CAACT,SAAD,EAAY5L,OAAZ,CAAR;AACA,WAAO2M,UAAU,CAACD,IAAD,EAAO7I,KAAK,CAAC4H,KAAN,GAAclD,IAAI,CAAC7J,KAAnB,GAA2B,CAAlC,CAAjB;AACD,GAnBD;;AAqBA,MAAIkO,UAAU,GAAG,YAAW;AAC1B,QAAI,CAACL,OAAL,EAAc;AACd,QAAI1I,KAAK,GAAG0E,IAAI,CAACrI,MAAL,CAAY,EAAEI,CAAd,CAAZ;;AACA,QAAI,CAACuD,KAAL,EAAY;AACV,UAAI,CAAC,GAAEX,QAAP,EAAiB,OAAOmJ,QAAQ,EAAf;AACjB/L,MAAAA,CAAC,GAAG,CAAC,CAAL;AACA,aAAOmM,YAAY,CAACC,IAAD,CAAnB;AACD;;AACDL,IAAAA,QAAQ,CAACxI,KAAK,CAAC/D,GAAP,EAAY+D,KAAK,CAAC7D,OAAlB,CAAR;AACA,WAAO2M,UAAU,CAACD,IAAD,EAAO7I,KAAK,CAAC4H,KAAN,GAAclD,IAAI,CAAC7J,KAAnB,GAA2B,CAAlC,CAAjB;AACD,GAVD;;AAYA,MAAIgO,IAAI,GAAG,KAAKjO,YAAL,KAAsB,KAAtB,GACP+N,UADO,GAEPI,UAFJ;;AAIA,OAAKC,QAAL,GAAgB,UAASC,KAAT,EAAgB;AAC9B,QAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBxM,MAAAA,CAAC,GAAG,CAAC,CAAL;AACAiI,MAAAA,IAAI,CAACmD,OAAL,GAAe,IAAf;AACAnD,MAAAA,IAAI,CAACoD,QAAL,GAAgB,IAAhB;AACAY,MAAAA,OAAO,GAAG,CAAV;AACAF,MAAAA,QAAQ,CAAC9D,IAAI,CAACrI,MAAL,CAAY,CAAZ,EAAeJ,GAAhB,EACNyI,IAAI,CAACrI,MAAL,CAAY,CAAZ,EAAeF,OAAf,IAA0BuI,IAAI,CAACtI,aAAL,CAAmBsI,IAAI,CAACrI,MAAL,CAAY,CAAZ,EAAeJ,GAAlC,CADpB,CAAR;AAEA;AACD;;AACD,QAAIgN,KAAK,KAAKP,OAAd,EAAuB;AACvBA,IAAAA,OAAO,GAAGO,KAAV;AACA,WAAOJ,IAAI,EAAX;AACD,GAbD;;AAeA,OAAKG,QAAL,CAAc,CAAd;AACD,CAlED;;AAoEA7O,GAAG,CAACoC,SAAJ,CAAc2M,IAAd,GAAqB,UAASV,QAAT,EAAmB;AACtC,MAAI,CAAC,KAAKQ,QAAN,IAAkBR,QAAtB,EAAgC;AAC9B,SAAKW,IAAL;AACA,WAAO,KAAKZ,QAAL,CAAcC,QAAd,CAAP;AACD;;AACD,OAAKQ,QAAL,CAAc,CAAd;AACD,CAND;;AAQA7O,GAAG,CAACoC,SAAJ,CAAc6M,KAAd,GAAsB,YAAW;AAC/B,MAAI,CAAC,KAAKJ,QAAV,EAAoB;;AACpB,OAAKA,QAAL,CAAc,CAAd;AACD,CAHD;;AAKA7O,GAAG,CAACoC,SAAJ,CAAc4M,IAAd,GAAqB,YAAW;AAC9B,MAAI,CAAC,KAAKH,QAAV,EAAoB;;AACpB,OAAKA,QAAL,CAAc,CAAC,CAAf;AACD,CAHD;;AAKA7O,GAAG,CAACoC,SAAJ,CAAcX,KAAd,GAAsB,UAASyN,KAAT,EAAgB;AACpC,MAAIhP,OAAO,GAAG,KAAKA,OAAnB;AAAA,MACID,IAAI,GAAG,KAAKA,IADhB;AAAA,MAEIiB,MAAM,GAAG,KAAKA,MAFlB;AAAA,MAGIf,GAHJ;AAAA,MAIIgP,GAJJ;AAAA,MAKIC,GALJ;AAAA,MAMI9M,CANJ;AAAA,MAOI+M,OAPJ;AAAA,MAQI3J,SARJ;;AAUA,MAAIxE,MAAM,KAAK,KAAf,EAAsB;AACpBf,IAAAA,GAAG,GAAGL,IAAI,CAAC,SAAD,EAAY,CAACoB,MAAM,GAAG,IAAV,EAAgB,OAAhB,CAAZ,EACR;AAAEoO,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAAT;AAAqCJ,MAAAA,KAAK,EAAEA;AAA5C,KADQ,CAAV;AAEAC,IAAAA,GAAG,GAAGnP,GAAG,CAACG,GAAD,EAAMD,OAAN,CAAT;AACAiP,IAAAA,GAAG,CAAClP,IAAJ,GAAWA,IAAX;AACA,WAAOkP,GAAP;AACD;;AAEDC,EAAAA,GAAG,GAAGG,GAAG,CAACL,KAAD,EAAQhP,OAAR,CAAT;AAEA,OAAK6D,KAAL,GAAaqL,GAAG,CAACrL,KAAjB;AACA,OAAKC,MAAL,GAAcoL,GAAG,CAACpL,MAAlB;AACA,OAAK9B,MAAL,GAAc,EAAd;;AAEA,OAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG8M,GAAG,CAACI,MAAJ,CAAWrM,MAA3B,EAAmCb,CAAC,EAApC,EAAwC;AACtC6M,IAAAA,GAAG,GAAGC,GAAG,CAACI,MAAJ,CAAWlN,CAAX,CAAN,CADsC,CAEtC;AACA;;AACA+M,IAAAA,OAAO,GAAGF,GAAG,CAACE,OAAJ,IAAeD,GAAzB;AACA1J,IAAAA,SAAS,GAAGiB,IAAI,CAAC8I,GAAL,CAAS,CAAT,EAAY,CAACJ,OAAO,CAACK,aAAR,IAAyB,CAA1B,IAA+B,CAA3C,CAAZ;AACA,QAAIhK,SAAS,GAAG,CAAhB,EAAmBA,SAAS,GAAG,CAAZ;AACnB,SAAKxD,MAAL,CAAYqB,IAAZ,CAAiB;AACf4B,MAAAA,IAAI,EAAE;AACJE,QAAAA,cAAc,EAAE/C,CADZ;AAEJyB,QAAAA,KAAK,EAAEoL,GAAG,CAACpL,KAFP;AAGJC,QAAAA,MAAM,EAAEmL,GAAG,CAACnL,MAHR;AAIJsB,QAAAA,OAAO,EAAE6J,GAAG,CAACQ,IAJT;AAKJpK,QAAAA,OAAO,EAAE4J,GAAG,CAACS,GALT;AAMJpK,QAAAA,QAAQ,EAAE6J,OAAO,CAAC5B,KANd;AAOJhI,QAAAA,QAAQ,EAAE,GAPN;AAQJC,QAAAA,SAAS,EAAEA,SARP;AASJC,QAAAA,OAAO,EAAE;AATL,OADS;AAYfP,MAAAA,IAAI,EAAE,EAZS;AAafkI,MAAAA,OAAO,EAAE,EAbM;AAcfC,MAAAA,IAAI,EAAE4B,GAAG,CAACrN;AAdK,KAAjB;AAgBD;;AAED,OAAKA,GAAL,GAAW,KAAKI,MAAL,CAAY,CAAZ,EAAeqL,IAA1B;AACA,OAAKvL,OAAL,GAAe,KAAKC,aAAL,CAAmB,KAAKH,GAAxB,CAAf;;AAEA,MAAI,KAAKI,MAAL,CAAYiB,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,SAAK6B,IAAL,GAAY;AAAEC,MAAAA,SAAS,EAAEmK,GAAG,CAACI,MAAJ,CAAWrM,MAAxB;AAAgC+B,MAAAA,QAAQ,EAAEkK,GAAG,CAAClK,QAAJ,IAAgB;AAA1D,KAAZ;AACA,SAAKhD,MAAL,GAAc,KAAKC,aAAL,CAAmB,KAAKD,MAAxB,CAAd;AACD,GAHD,MAGO;AACL,SAAKA,MAAL,GAAc2N,SAAd;AACD;;AAED,SAAO,IAAP;AACD,CA7DD,C,CA+DA;AACA;AACA;;;AACA7P,GAAG,CAACoC,SAAJ,CAAc0N,SAAd,GAA0B,UAASZ,KAAT,EAAgB;AACxC,MAAIhP,OAAO,GAAG,KAAKA,OAAnB;AAAA,MACID,IAAI,GAAG,KAAKA,IADhB;AAAA,MAEIiB,MAAM,GAAG,KAAKA,MAFlB;AAAA,MAGIf,GAHJ;AAAA,MAII4P,GAJJ;AAAA,MAKIZ,GALJ;AAAA,MAMIjN,MANJ;AAAA,MAOI2D,KAPJ;AAAA,MAQI9B,KARJ;AAAA,MASIC,MATJ;AAAA,MAUIgM,MAVJ;AAAA,MAWIC,MAXJ;AAAA,MAYI3N,CAZJ;AAAA,MAaIkJ,KAbJ;AAAA,MAcIvF,IAdJ;AAAA,MAeIF,CAfJ;AAAA,MAgBIkD,CAhBJ;AAkBA9I,EAAAA,GAAG,GAAGL,IAAI,CAAC,SAAD,EACR,CAACoB,MAAM,GAAG,IAAV,EAAgB,WAAhB,EAA6B,SAA7B,EAAwC,OAAxC,CADQ,EAER;AAAEoO,IAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAAT;AAAqCJ,IAAAA,KAAK,EAAEA;AAA5C,GAFQ,CAAV;AAIAa,EAAAA,GAAG,GAAG,yDAAN;AACA7N,EAAAA,MAAM,GAAGpC,IAAI,CAAC,UAAD,EAAa,CAAC,SAAD,EAAYiQ,GAAZ,EAAiB7O,MAAM,GAAG,IAA1B,CAAb,EACX;AAAEgP,IAAAA,QAAQ,EAAE,MAAZ;AAAoBZ,IAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAA3B;AAAuDJ,IAAAA,KAAK,EAAEA;AAA9D,GADW,CAAb;AAEAhN,EAAAA,MAAM,GAAGiO,IAAI,CAACC,KAAL,CAAW,MAAMlO,MAAM,CAACmO,IAAP,GAAcjP,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAN,GAAmC,GAA9C,CAAT;AAEA+N,EAAAA,GAAG,GAAGnP,GAAG,CAACG,GAAD,EAAMD,OAAN,CAAT;AACAiP,EAAAA,GAAG,CAAClP,IAAJ,GAAWA,IAAX;AACAqQ,EAAAA,MAAM,CAACC,IAAP,CAAYpB,GAAZ,EAAiB1E,OAAjB,CAAyB,UAAS+F,GAAT,EAAc;AACrC,SAAKA,GAAL,IAAYrB,GAAG,CAACqB,GAAD,CAAf;AACD,GAFD,EAEG,IAFH;AAIAzM,EAAAA,KAAK,GAAG7B,MAAM,CAAC,CAAD,CAAN,CAAUuO,CAAlB;AACAzM,EAAAA,MAAM,GAAG9B,MAAM,CAAC,CAAD,CAAN,CAAUwO,CAAnB;AACAV,EAAAA,MAAM,GAAG,CAAT;AACAC,EAAAA,MAAM,GAAG,CAAT;AAEA,OAAKlM,KAAL,GAAaA,KAAb;AACA,OAAKC,MAAL,GAAcA,MAAd;AAEA,OAAK9B,MAAL,GAAc,EAAd;;AAEA,OAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGJ,MAAM,CAACiB,MAAvB,EAA+Bb,CAAC,EAAhC,EAAoC;AAClCuD,IAAAA,KAAK,GAAG3D,MAAM,CAACI,CAAD,CAAd;AACAuD,IAAAA,KAAK,CAACE,CAAN,GAAU,CAACF,KAAK,CAACE,CAAjB;AACAF,IAAAA,KAAK,CAACoD,CAAN,GAAU,CAACpD,KAAK,CAACoD,CAAjB;AAEA+G,IAAAA,MAAM,GAAGC,MAAT;AACAA,IAAAA,MAAM,IAAIlM,KAAV;AAEAyH,IAAAA,KAAK,GAAG,EAAR;;AACA,SAAKvC,CAAC,GAAGpD,KAAK,CAACoD,CAAf,EAAkBA,CAAC,GAAGjF,MAAtB,EAA8BiF,CAAC,EAA/B,EAAmC;AACjChD,MAAAA,IAAI,GAAG,EAAP;;AACA,WAAKF,CAAC,GAAGiK,MAAM,GAAGnK,KAAK,CAACE,CAAxB,EAA2BA,CAAC,GAAGkK,MAA/B,EAAuClK,CAAC,EAAxC,EAA4C;AAC1CE,QAAAA,IAAI,CAAC1C,IAAL,CAAU4L,GAAG,CAACrN,GAAJ,CAAQmH,CAAR,EAAWlD,CAAX,CAAV;AACD;;AACDyF,MAAAA,KAAK,CAACjI,IAAN,CAAW0C,IAAX;AACD;;AAED,SAAK/D,MAAL,CAAYqB,IAAZ,CAAiB;AACf4B,MAAAA,IAAI,EAAE;AACJE,QAAAA,cAAc,EAAE/C,CADZ;AAEJyB,QAAAA,KAAK,EAAE8B,KAAK,CAAC8K,CAFT;AAGJ3M,QAAAA,MAAM,EAAE6B,KAAK,CAAC+K,CAHV;AAIJtL,QAAAA,OAAO,EAAEO,KAAK,CAACE,CAJX;AAKJR,QAAAA,OAAO,EAAEM,KAAK,CAACoD,CALX;AAMJzD,QAAAA,QAAQ,EAAEK,KAAK,CAACgL,CANZ;AAOJpL,QAAAA,QAAQ,EAAE,GAPN;AAQJC,QAAAA,SAAS,EAAE,CARP;AASJC,QAAAA,OAAO,EAAE;AATL,OADS;AAYfP,MAAAA,IAAI,EAAE,EAZS;AAafkI,MAAAA,OAAO,EAAE,EAbM;AAcfC,MAAAA,IAAI,EAAE/B;AAdS,KAAjB;AAgBD;;AAED,OAAK1J,GAAL,GAAW,KAAKI,MAAL,CAAY,CAAZ,EAAeqL,IAA1B;AACA,OAAKvL,OAAL,GAAe,KAAKC,aAAL,CAAmB,KAAKH,GAAxB,CAAf;;AAEA,MAAI,KAAKI,MAAL,CAAYiB,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,SAAK6B,IAAL,GAAY;AAAEC,MAAAA,SAAS,EAAE/C,MAAM,CAACiB,MAApB;AAA4B+B,MAAAA,QAAQ,EAAE;AAAtC,KAAZ;AACA,SAAKhD,MAAL,GAAc,KAAKC,aAAL,CAAmB,KAAKD,MAAxB,CAAd;AACD,GAHD,MAGO;AACL,SAAKA,MAAL,GAAc2N,SAAd;AACD;;AAED,SAAO,IAAP;AACD,CA1FD;;AA4FA7P,GAAG,CAACoC,SAAJ,CAAc0D,UAAd,GAA2B,UAASgL,OAAT,EAAkB;AAC3C,SAAOnR,IAAI,CAACoR,WAAL,CAAiB,IAAIpQ,MAAJ,CAAWmQ,OAAO,CAACnF,MAAR,CAAe,UAASnB,GAAT,EAAc9H,IAAd,EAAoB;AACpE,WAAO8H,GAAG,CAACwG,MAAJ,CAAWlM,KAAK,CAAC1C,SAAN,CAAgBhB,KAAhB,CAAsB2D,IAAtB,CAA2BrC,IAA3B,CAAX,CAAP;AACD,GAFkC,EAEhC,EAFgC,CAAX,CAAjB,CAAP;AAGD,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA1C,GAAG,CAACoC,SAAJ,CAAcgB,KAAd,GAAuB,YAAW;AAChC,MAAI6N,QAAQ,GAAG,CACb,UADa,EACD,UADC,EACW,UADX,EACuB,UADvB,EACmC,UADnC,EAC+C,UAD/C,EAEb,UAFa,EAED,UAFC,EAEW,UAFX,EAEuB,UAFvB,EAEmC,UAFnC,EAE+C,UAF/C,EAGb,UAHa,EAGD,UAHC,EAGW,UAHX,EAGuB,UAHvB,EAGmC,UAHnC,EAG+C,UAH/C,EAIb,UAJa,EAID,UAJC,EAIW,UAJX,EAIuB,UAJvB,EAImC,UAJnC,EAI+C,UAJ/C,EAKb,UALa,EAKD,UALC,EAKW,UALX,EAKuB,UALvB,EAKmC,UALnC,EAK+C,UAL/C,EAMb,UANa,EAMD,UANC,EAMW,UANX,EAMuB,UANvB,EAMmC,UANnC,EAM+C,UAN/C,EAOb,UAPa,EAOD,UAPC,EAOW,UAPX,EAOuB,UAPvB,EAOmC,UAPnC,EAO+C,UAP/C,EAQb,UARa,EAQD,UARC,EAQW,UARX,EAQuB,UARvB,EAQmC,UARnC,EAQ+C,UAR/C,EASb,UATa,EASD,UATC,EASW,UATX,EASuB,UATvB,EASmC,UATnC,EAS+C,UAT/C,EAUb,UAVa,EAUD,UAVC,EAUW,UAVX,EAUuB,UAVvB,EAUmC,UAVnC,EAU+C,UAV/C,EAWb,UAXa,EAWD,UAXC,EAWW,UAXX,EAWuB,UAXvB,EAWmC,UAXnC,EAW+C,UAX/C,EAYb,UAZa,EAYD,UAZC,EAYW,UAZX,EAYuB,UAZvB,EAYmC,UAZnC,EAY+C,UAZ/C,EAab,UAba,EAaD,UAbC,EAaW,UAbX,EAauB,UAbvB,EAamC,UAbnC,EAa+C,UAb/C,EAcb,UAda,EAcD,UAdC,EAcW,UAdX,EAcuB,UAdvB,EAcmC,UAdnC,EAc+C,UAd/C,EAeb,UAfa,EAeD,UAfC,EAeW,UAfX,EAeuB,UAfvB,EAemC,UAfnC,EAe+C,UAf/C,EAgBb,UAhBa,EAgBD,UAhBC,EAgBW,UAhBX,EAgBuB,UAhBvB,EAgBmC,UAhBnC,EAgB+C,UAhB/C,EAiBb,UAjBa,EAiBD,UAjBC,EAiBW,UAjBX,EAiBuB,UAjBvB,EAiBmC,UAjBnC,EAiB+C,UAjB/C,EAkBb,UAlBa,EAkBD,UAlBC,EAkBW,UAlBX,EAkBuB,UAlBvB,EAkBmC,UAlBnC,EAkB+C,UAlB/C,EAmBb,UAnBa,EAmBD,UAnBC,EAmBW,UAnBX,EAmBuB,UAnBvB,EAmBmC,UAnBnC,EAmB+C,UAnB/C,EAoBb,UApBa,EAoBD,UApBC,EAoBW,UApBX,EAoBuB,UApBvB,EAoBmC,UApBnC,EAoB+C,UApB/C,EAqBb,UArBa,EAqBD,UArBC,EAqBW,UArBX,EAqBuB,UArBvB,EAqBmC,UArBnC,EAqB+C,UArB/C,EAsBb,UAtBa,EAsBD,UAtBC,EAsBW,UAtBX,EAsBuB,UAtBvB,EAsBmC,UAtBnC,EAsB+C,UAtB/C,EAuBb,UAvBa,EAuBD,UAvBC,EAuBW,UAvBX,EAuBuB,UAvBvB,EAuBmC,UAvBnC,EAuB+C,UAvB/C,EAwBb,UAxBa,EAwBD,UAxBC,EAwBW,UAxBX,EAwBuB,UAxBvB,EAwBmC,UAxBnC,EAwB+C,UAxB/C,EAyBb,UAzBa,EAyBD,UAzBC,EAyBW,UAzBX,EAyBuB,UAzBvB,EAyBmC,UAzBnC,EAyB+C,UAzB/C,EA0Bb,UA1Ba,EA0BD,UA1BC,EA0BW,UA1BX,EA0BuB,UA1BvB,EA0BmC,UA1BnC,EA0B+C,UA1B/C,EA2Bb,UA3Ba,EA2BD,UA3BC,EA2BW,UA3BX,EA2BuB,UA3BvB,EA2BmC,UA3BnC,EA2B+C,UA3B/C,EA4Bb,UA5Ba,EA4BD,UA5BC,EA4BW,UA5BX,EA4BuB,UA5BvB,EA4BmC,UA5BnC,EA4B+C,UA5B/C,EA6Bb,UA7Ba,EA6BD,UA7BC,EA6BW,UA7BX,EA6BuB,UA7BvB,EA6BmC,UA7BnC,EA6B+C,UA7B/C,EA8Bb,UA9Ba,EA8BD,UA9BC,EA8BW,UA9BX,EA8BuB,UA9BvB,EA8BmC,UA9BnC,EA8B+C,UA9B/C,EA+Bb,UA/Ba,EA+BD,UA/BC,EA+BW,UA/BX,EA+BuB,UA/BvB,EA+BmC,UA/BnC,EA+B+C,UA/B/C,EAgCb,UAhCa,EAgCD,UAhCC,EAgCW,UAhCX,EAgCuB,UAhCvB,EAgCmC,UAhCnC,EAgC+C,UAhC/C,EAiCb,UAjCa,EAiCD,UAjCC,EAiCW,UAjCX,EAiCuB,UAjCvB,EAiCmC,UAjCnC,EAiC+C,UAjC/C,EAkCb,UAlCa,EAkCD,UAlCC,EAkCW,UAlCX,EAkCuB,UAlCvB,EAkCmC,UAlCnC,EAkC+C,UAlC/C,EAmCb,UAnCa,EAmCD,UAnCC,EAmCW,UAnCX,EAmCuB,UAnCvB,EAmCmC,UAnCnC,EAmC+C,UAnC/C,EAoCb,UApCa,EAoCD,UApCC,EAoCW,UApCX,EAoCuB,UApCvB,EAoCmC,UApCnC,EAoC+C,UApC/C,EAqCb,UArCa,EAqCD,UArCC,EAqCW,UArCX,EAqCuB,UArCvB,EAqCmC,UArCnC,EAqC+C,UArC/C,EAsCb,UAtCa,EAsCD,UAtCC,EAsCW,UAtCX,EAsCuB,UAtCvB,EAsCmC,UAtCnC,EAsC+C,UAtC/C,EAuCb,UAvCa,EAuCD,UAvCC,EAuCW,UAvCX,EAuCuB,UAvCvB,EAuCmC,UAvCnC,EAuC+C,UAvC/C,EAwCb,UAxCa,EAwCD,UAxCC,EAwCW,UAxCX,EAwCuB,UAxCvB,EAwCmC,UAxCnC,EAwC+C,UAxC/C,EAyCb,UAzCa,EAyCD,UAzCC,EAyCW,UAzCX,EAyCuB,UAzCvB,EAyCmC,UAzCnC,EAyC+C,UAzC/C,EA0Cb,UA1Ca,EA0CD,UA1CC,EA0CW,UA1CX,EA0CuB,UA1CvB,EA0CmC,UA1CnC,EA0C+C,UA1C/C,EA2Cb,UA3Ca,EA2CD,UA3CC,EA2CW,UA3CX,EA2CuB,UA3CvB,CAAf;AA8CA,SAAO,SAAS7N,KAAT,CAAejD,GAAf,EAAoB;AACzB;AACA,QAAIwC,GAAG,GAAG,CAAC,CAAX;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGpC,GAAG,CAACgD,MAA1B,EAAkCb,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9CK,MAAAA,GAAG,GAAGsO,QAAQ,CAAC,CAACtO,GAAG,GAAGxC,GAAG,CAACmC,CAAD,CAAV,IAAiB,IAAlB,CAAR,GAAmCK,GAAG,KAAK,CAAjD;AACD;;AACD,WAAOA,GAAG,GAAG,CAAC,CAAd;AACD,GAPD;AAQD,CAvDqB,EAAtB;;AAyDA3C,GAAG,CAACoC,SAAJ,CAAcc,MAAd,GAAuB,YAAW;AAChC,MAAI,CAAC,KAAKhD,OAAL,CAAagR,GAAlB,EAAuB;AACvB,SAAO,KAAKhR,OAAL,CAAagR,GAAb,CAAiBC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,CAAP;AACD,CAHD;AAKA;AACA;AACA;;;AAEA,SAAS7B,GAAT,CAAatP,IAAb,EAAmBC,OAAnB,EAA4B;AAC1B,MAAIqK,IAAI,GAAG,IAAX;;AAEA,MAAI,EAAE,gBAAgBgF,GAAlB,CAAJ,EAA4B;AAC1B,WAAO,IAAIA,GAAJ,CAAQtP,IAAR,EAAcC,OAAd,CAAP;AACD;;AAED,MAAI4D,IAAI,GAAG,EAAX;AAAA,MACID,CAAC,GAAG,CADR;AAAA,MAEI1D,GAFJ;AAAA,MAGImC,CAHJ;AAAA,MAII+O,KAJJ;AAAA,MAKIC,GALJ;AAAA,MAMIC,IANJ;AAAA,MAOIpC,GAPJ;AAAA,MAQIqC,GARJ;AAAA,MASIC,KATJ;AAAA,MAUI7M,IAVJ;AAYA,MAAI,CAAC3E,IAAL,EAAW,MAAM,IAAIM,KAAJ,CAAU,SAAV,CAAN;AAEXL,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,OAAKA,OAAL,GAAeA,OAAf,CAvB0B,CAyB1B;AACA;AACA;;AACA,OAAKwR,UAAL,GAAkB,KAAKxR,OAAL,CAAawR,UAAb,IAA2B,OAA7C;AACA,OAAKC,WAAL,GAAmB,CAAnB;;AAEA,MAAIhR,MAAM,CAACC,QAAP,CAAgBX,IAAhB,CAAJ,EAA2B;AACzBE,IAAAA,GAAG,GAAGF,IAAN;AACAA,IAAAA,IAAI,GAAG,IAAP;AACD,GAHD,MAGO;AACLA,IAAAA,IAAI,GAAGP,IAAI,CAACoB,OAAL,CAAaC,OAAO,CAACC,GAAR,EAAb,EAA4Bf,IAA5B,CAAP;AACAE,IAAAA,GAAG,GAAGZ,EAAE,CAAC0B,YAAH,CAAgBhB,IAAhB,CAAN;AACD;;AAEDqR,EAAAA,GAAG,GAAGnR,GAAG,CAACiB,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgBC,QAAhB,CAAyB,OAAzB,CAAN;;AACA,MAAIiQ,GAAG,KAAK,QAAR,IAAoBA,GAAG,KAAK,QAAhC,EAA0C;AACxC,UAAM,IAAI/Q,KAAJ,CAAU,iBAAiB+Q,GAA3B,CAAN;AACD;;AAED,OAAKvN,KAAL,GAAa5D,GAAG,CAACyR,YAAJ,CAAiB,CAAjB,CAAb;AACA,OAAK5N,MAAL,GAAc7D,GAAG,CAACyR,YAAJ,CAAiB,CAAjB,CAAd;AAEA,OAAKjO,KAAL,GAAaxD,GAAG,CAAC+D,SAAJ,CAAc,EAAd,CAAb;AACA,OAAK2N,GAAL,GAAW,CAAC,EAAE,KAAKlO,KAAL,GAAa,IAAf,CAAZ;AACA,OAAKmO,OAAL,GAAe,CAAC,KAAKnO,KAAL,GAAa,IAAd,IAAsB,CAArC;AAEA,OAAKoO,OAAL,GAAe5R,GAAG,CAAC+D,SAAJ,CAAc,EAAd,CAAf;AACA,OAAK8N,MAAL,GAAc7R,GAAG,CAAC+D,SAAJ,CAAc,EAAd,CAAd;AACAL,EAAAA,CAAC,IAAI,EAAL;;AAEA,MAAI,KAAKgO,GAAT,EAAc;AACZ,SAAKrR,MAAL,GAAc,EAAd;AACA6Q,IAAAA,KAAK,GAAG,KAAK,KAAKS,OAAlB;;AACA,SAAKxP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+O,KAAhB,EAAuB/O,CAAC,IAAIuB,CAAC,IAAI,CAAjC,EAAoC;AAClC,WAAKrD,MAAL,CAAY+C,IAAZ,CAAiB,CAACpD,GAAG,CAAC0D,CAAD,CAAJ,EAAS1D,GAAG,CAAC0D,CAAC,GAAG,CAAL,CAAZ,EAAqB1D,GAAG,CAAC0D,CAAC,GAAG,CAAL,CAAxB,EAAiC,GAAjC,CAAjB;AACD;AACF;;AAED,OAAK2L,MAAL,GAAc,EAAd;AACA,OAAKyC,UAAL,GAAkB,EAAlB;;AAEA,MAAI;AACF,WAAOpO,CAAC,GAAG1D,GAAG,CAACgD,MAAf,EAAuB;AACrBoO,MAAAA,IAAI,GAAGpR,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAP;AACAA,MAAAA,CAAC,IAAI,CAAL;;AACA,UAAI0N,IAAI,KAAK,IAAb,EAAmB;AACjBpC,QAAAA,GAAG,GAAG,EAAN;AAEAA,QAAAA,GAAG,CAACQ,IAAJ,GAAWxP,GAAG,CAACyR,YAAJ,CAAiB/N,CAAjB,CAAX;AACAA,QAAAA,CAAC,IAAI,CAAL;AACAsL,QAAAA,GAAG,CAACS,GAAJ,GAAUzP,GAAG,CAACyR,YAAJ,CAAiB/N,CAAjB,CAAV;AACAA,QAAAA,CAAC,IAAI,CAAL;AAEAsL,QAAAA,GAAG,CAACpL,KAAJ,GAAY5D,GAAG,CAACyR,YAAJ,CAAiB/N,CAAjB,CAAZ;AACAA,QAAAA,CAAC,IAAI,CAAL;AACAsL,QAAAA,GAAG,CAACnL,MAAJ,GAAa7D,GAAG,CAACyR,YAAJ,CAAiB/N,CAAjB,CAAb;AACAA,QAAAA,CAAC,IAAI,CAAL;AAEAsL,QAAAA,GAAG,CAACxL,KAAJ,GAAYxD,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAZ;AACAA,QAAAA,CAAC,IAAI,CAAL;AAEAsL,QAAAA,GAAG,CAAC+C,GAAJ,GAAU,CAAC,EAAE/C,GAAG,CAACxL,KAAJ,GAAY,IAAd,CAAX;AACAwL,QAAAA,GAAG,CAACgD,KAAJ,GAAY,CAAC,EAAEhD,GAAG,CAACxL,KAAJ,GAAY,IAAd,CAAb;AACAwL,QAAAA,GAAG,CAACiD,OAAJ,GAAc,CAACjD,GAAG,CAACxL,KAAJ,GAAY,IAAb,IAAqB,CAAnC;;AAEA,YAAIwL,GAAG,CAAC+C,GAAR,EAAa;AACX/C,UAAAA,GAAG,CAACkD,OAAJ,GAAc,EAAd;AACAhB,UAAAA,KAAK,GAAG,KAAKlC,GAAG,CAACiD,OAAjB;;AACA,eAAK9P,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG+O,KAAhB,EAAuB/O,CAAC,IAAIuB,CAAC,IAAI,CAAjC,EAAoC;AAClCsL,YAAAA,GAAG,CAACkD,OAAJ,CAAY9O,IAAZ,CAAiB,CAACpD,GAAG,CAAC0D,CAAD,CAAJ,EAAS1D,GAAG,CAAC0D,CAAC,GAAG,CAAL,CAAZ,EAAqB1D,GAAG,CAAC0D,CAAC,GAAG,CAAL,CAAxB,EAAiC,GAAjC,CAAjB;AACD;AACF;;AAEDsL,QAAAA,GAAG,CAACmD,QAAJ,GAAenS,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAf;AACAA,QAAAA,CAAC,IAAI,CAAL;AAEAsL,QAAAA,GAAG,CAACvK,IAAJ,GAAWzE,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAX;AACAA,QAAAA,CAAC,IAAI,CAAL;AAEAsL,QAAAA,GAAG,CAACoD,GAAJ,GAAU,CAACpS,GAAG,CAACiB,KAAJ,CAAUyC,CAAV,EAAaA,CAAC,GAAGsL,GAAG,CAACvK,IAArB,CAAD,CAAV;AACAf,QAAAA,CAAC,IAAIsL,GAAG,CAACvK,IAAT;;AAEA,eAAOzE,GAAG,CAAC0D,CAAD,CAAH,KAAW,IAAlB,EAAwB;AACtB;AACA;AACA,cAAI1D,GAAG,CAAC0D,CAAD,CAAH,KAAW,IAAX,IAAmBA,CAAC,KAAK1D,GAAG,CAACgD,MAAJ,GAAa,CAA1C,EAA6C;AAC3CU,YAAAA,CAAC;AACD;AACD;;AACDe,UAAAA,IAAI,GAAGzE,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAP;AACAA,UAAAA,CAAC,IAAI,CAAL;AACAsL,UAAAA,GAAG,CAACoD,GAAJ,CAAQhP,IAAR,CAAapD,GAAG,CAACiB,KAAJ,CAAUyC,CAAV,EAAaA,CAAC,GAAGe,IAAjB,CAAb;AACAf,UAAAA,CAAC,IAAIe,IAAL;AACD;;AAEDhF,QAAAA,MAAM,CAACiK,KAAP,CAAa1J,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAb,EAA+B,IAA/B;AACAA,QAAAA,CAAC,IAAI,CAAL;;AAEA,YAAI2N,GAAG,IAAIA,GAAG,CAACC,KAAJ,KAAc,IAAzB,EAA+B;AAC7BtC,UAAAA,GAAG,CAACE,OAAJ,GAAcmC,GAAd;AACD;;AAED,aAAKG,WAAL,IAAoBxC,GAAG,CAACpL,KAAJ,GAAYoL,GAAG,CAACnL,MAApC;AAEA,aAAKwL,MAAL,CAAYjM,IAAZ,CAAiB4L,GAAjB;;AAEA,YAAI,KAAKwC,WAAL,IAAoB,KAAKD,UAA7B,EAAyC;AACvC;AACD;AACF,OAhED,MAgEO,IAAIH,IAAI,KAAK,IAAb,EAAmB;AACxB;AACA;AACAC,QAAAA,GAAG,GAAG,EAAN;AACAC,QAAAA,KAAK,GAAGtR,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAR;AACAA,QAAAA,CAAC,IAAI,CAAL;AACA2N,QAAAA,GAAG,CAACC,KAAJ,GAAYA,KAAZ;;AACA,YAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB7M,UAAAA,IAAI,GAAGzE,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAP;AACAjE,UAAAA,MAAM,CAACiK,KAAP,CAAajF,IAAb,EAAmB,IAAnB;AACAf,UAAAA,CAAC,IAAI,CAAL;AACA2N,UAAAA,GAAG,CAACgB,MAAJ,GAAarS,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAb;AACA2N,UAAAA,GAAG,CAAC9B,aAAJ,GAAqB8B,GAAG,CAACgB,MAAJ,IAAc,CAAf,GAAoB,IAAxC;AACAhB,UAAAA,GAAG,CAACiB,cAAJ,GAAqB,CAAC,EAAEjB,GAAG,CAACgB,MAAJ,GAAa,IAAf,CAAtB;AACA3O,UAAAA,CAAC,IAAI,CAAL;AACA2N,UAAAA,GAAG,CAAC/D,KAAJ,GAAYtN,GAAG,CAACyR,YAAJ,CAAiB/N,CAAjB,CAAZ;AACAA,UAAAA,CAAC,IAAI,CAAL;AACA2N,UAAAA,GAAG,CAACkB,gBAAJ,GAAuBvS,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAvB;AACAA,UAAAA,CAAC,IAAI,CAAL;;AACA,iBAAO1D,GAAG,CAAC0D,CAAD,CAAH,KAAW,IAAlB,EAAwB;AACtBe,YAAAA,IAAI,GAAGzE,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAP;AACAA,YAAAA,CAAC,IAAI,CAAL;AACAA,YAAAA,CAAC,IAAIe,IAAL;AACD;;AACDhF,UAAAA,MAAM,CAACiK,KAAP,CAAa1J,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAb,EAA+B,IAA/B;AACAA,UAAAA,CAAC,IAAI,CAAL;AACA,eAAK4J,KAAL,GAAa+D,GAAG,CAAC/D,KAAjB;AACA,eAAKiF,gBAAL,GAAwBlB,GAAG,CAACkB,gBAA5B;AACA,eAAKhD,aAAL,GAAqB8B,GAAG,CAAC9B,aAAzB;AACA,eAAK+C,cAAL,GAAsBjB,GAAG,CAACiB,cAA1B;AACD,SAvBD,MAuBO,IAAIhB,KAAK,KAAK,IAAd,EAAoB;AACzB;AACA7M,UAAAA,IAAI,GAAGzE,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAP;AACAA,UAAAA,CAAC,IAAI,CAAL;AACA2N,UAAAA,GAAG,CAAChO,EAAJ,GAASrD,GAAG,CAACiB,KAAJ,CAAUyC,CAAV,EAAaA,CAAC,GAAG,CAAjB,EAAoBxC,QAApB,CAA6B,OAA7B,CAAT;AACAwC,UAAAA,CAAC,IAAI,CAAL;AACA2N,UAAAA,GAAG,CAACmB,IAAJ,GAAWxS,GAAG,CAACiB,KAAJ,CAAUyC,CAAV,EAAaA,CAAC,GAAG,CAAjB,EAAoBxC,QAApB,CAA6B,OAA7B,CAAX;AACAwC,UAAAA,CAAC,IAAI,CAAL;AACA2N,UAAAA,GAAG,CAAC9O,IAAJ,GAAW,EAAX;;AACA,iBAAOvC,GAAG,CAAC0D,CAAD,CAAH,KAAW,IAAlB,EAAwB;AACtBe,YAAAA,IAAI,GAAGzE,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAP;AACAA,YAAAA,CAAC,IAAI,CAAL;AACA2N,YAAAA,GAAG,CAAC9O,IAAJ,CAASa,IAAT,CAAcpD,GAAG,CAACiB,KAAJ,CAAUyC,CAAV,EAAaA,CAAC,GAAGe,IAAjB,CAAd;AACAf,YAAAA,CAAC,IAAIe,IAAL;AACD;;AACD4M,UAAAA,GAAG,CAAC9O,IAAJ,GAAW,IAAI/B,MAAJ,CAAW6Q,GAAG,CAAC9O,IAAJ,CAASiJ,MAAT,CAAgB,UAASnB,GAAT,EAAc9H,IAAd,EAAoB;AACxD,mBAAO8H,GAAG,CAACwG,MAAJ,CAAWlM,KAAK,CAAC1C,SAAN,CAAgBhB,KAAhB,CAAsB2D,IAAtB,CAA2BrC,IAA3B,CAAX,CAAP;AACD,WAFqB,EAEnB,EAFmB,CAAX,CAAX,CAfyB,CAkBzB;;AACA,cAAI8O,GAAG,CAAChO,EAAJ,KAAW,UAAX,IAAyBgO,GAAG,CAACmB,IAAJ,KAAa,KAA1C,EAAiD;AAC/CnB,YAAAA,GAAG,CAAChO,EAAJ,GAAS,UAAT;AACAgO,YAAAA,GAAG,CAACmB,IAAJ,GAAW,KAAX;AACAnB,YAAAA,GAAG,CAACoB,QAAJ,GAAe,IAAf;AACD,WAvBwB,CAwBzB;;;AACA,cAAIpB,GAAG,CAAChO,EAAJ,KAAW,UAAX,IAAyBgO,GAAG,CAACmB,IAAJ,KAAa,KAA1C,EAAiD;AAC/C,gBAAInB,GAAG,CAAC9O,IAAJ,CAASwB,SAAT,CAAmB,CAAnB,MAA0B,IAA9B,EAAoC;AAClC;AACA;AACAsN,cAAAA,GAAG,CAACtM,QAAJ,GAAesM,GAAG,CAAC9O,IAAJ,CAASkP,YAAT,CAAsB,CAAtB,CAAf;AACA,mBAAK1M,QAAL,GAAgBsM,GAAG,CAACtM,QAApB;AACD,aALD,MAKO,IAAIsM,GAAG,CAAC9O,IAAJ,CAASwB,SAAT,CAAmB,CAAnB,MAA0B,IAA9B,EAAoC;AACzC;AACA,mBAAK2O,SAAL,GAAiBrB,GAAG,CAAC9O,IAArB;AACD;AACF,WAnCwB,CAoCzB;;;AACA,cAAI8O,GAAG,CAAChO,EAAJ,KAAW,UAAX,IAAyBgO,GAAG,CAACmB,IAAJ,KAAa,KAA1C,EAAiD;AAC/CnB,YAAAA,GAAG,CAACsB,GAAJ,GAAUtB,GAAG,CAAC9O,IAAJ,CAASrB,QAAT,CAAkB,MAAlB,CAAV;AACA,iBAAKyR,GAAL,GAAWtB,GAAG,CAACsB,GAAf;AACD,WAxCwB,CAyCzB;;;AACA,cAAItB,GAAG,CAAChO,EAAJ,KAAW,UAAX,IAAyBgO,GAAG,CAACmB,IAAJ,KAAa,KAA1C,EAAiD;AAC/C;AACA,iBAAKI,GAAL,GAAWvB,GAAG,CAAC9O,IAAf;AACD,WA7CwB,CA8CzB;;;AACA,cAAI8O,GAAG,CAAChO,EAAJ,KAAW,UAAX,IAAyB,YAAYwP,IAAZ,CAAiBxB,GAAG,CAACmB,IAArB,CAA7B,EAAyD;AACvD;AACA;AACA,iBAAKM,QAAL,GAAgBzB,GAAG,CAAC9O,IAApB;AACD;;AACD9C,UAAAA,MAAM,CAACiK,KAAP,CAAa1J,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAb,EAA+B,IAA/B;AACAA,UAAAA,CAAC,IAAI,CAAL;AACD,SAtDM,MAsDA;AACL2N,UAAAA,GAAG,CAAC9O,IAAJ,GAAW,EAAX;;AACA,iBAAOvC,GAAG,CAAC0D,CAAD,CAAH,KAAW,IAAlB,EAAwB;AACtBe,YAAAA,IAAI,GAAGzE,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAP;AACAA,YAAAA,CAAC,IAAI,CAAL;AACA2N,YAAAA,GAAG,CAAC9O,IAAJ,CAASa,IAAT,CAAcpD,GAAG,CAACiB,KAAJ,CAAUyC,CAAV,EAAaA,CAAC,GAAGe,IAAjB,CAAd;AACAf,YAAAA,CAAC,IAAIe,IAAL;AACD;;AACDhF,UAAAA,MAAM,CAACiK,KAAP,CAAa1J,GAAG,CAAC+D,SAAJ,CAAcL,CAAd,CAAb,EAA+B,IAA/B;AACAA,UAAAA,CAAC,IAAI,CAAL;AACD;;AACD,aAAKoO,UAAL,CAAgB1O,IAAhB,CAAqBiO,GAArB;AACD,OAhGM,MAgGA,IAAID,IAAI,KAAK,IAAb,EAAmB;AACxB;AACD,OAFM,MAEA,IAAI1N,CAAC,KAAK1D,GAAG,CAACgD,MAAJ,GAAa,CAAvB,EAA0B;AAC/B;AACA;AACD,OAHM,MAGA;AACL,cAAM,IAAI5C,KAAJ,CAAU,eAAV,CAAN;AACD;AACF;AACF,GA7KD,CA6KE,OAAOmB,CAAP,EAAU;AACV,QAAIxB,OAAO,CAACoD,KAAZ,EAAmB;AACjB,YAAM5B,CAAN;AACD;AACF;;AAED,OAAK8N,MAAL,GAAc,KAAKA,MAAL,CAAY5J,GAAZ,CAAgB,UAASuJ,GAAT,EAAc+D,UAAd,EAA0B;AACtD,QAAI7D,OAAO,GAAGF,GAAG,CAACE,OAAJ,IAAe,IAA7B;AAEAF,IAAAA,GAAG,CAACoD,GAAJ,GAAU,IAAI5R,MAAJ,CAAWwO,GAAG,CAACoD,GAAJ,CAAQ5G,MAAR,CAAe,UAASnB,GAAT,EAAc9H,IAAd,EAAoB;AACtD,aAAO8H,GAAG,CAACwG,MAAJ,CAAWlM,KAAK,CAAC1C,SAAN,CAAgBhB,KAAhB,CAAsB2D,IAAtB,CAA2BrC,IAA3B,CAAX,CAAP;AACD,KAFoB,EAElB,EAFkB,CAAX,CAAV;;AAIA,QAAI;AACFyM,MAAAA,GAAG,CAACzM,IAAJ,GAAW,KAAKoD,UAAL,CAAgBqJ,GAAG,CAACoD,GAApB,EAAyBpD,GAAG,CAACmD,QAA7B,CAAX;AACD,KAFD,CAEE,OAAO5Q,CAAP,EAAU;AACV,UAAIxB,OAAO,CAACoD,KAAZ,EAAmB,MAAM5B,CAAN;AACnB;AACD;;AAED,QAAIyR,WAAW,GAAG,CAChB,CAAE,CAAF,EAAK,CAAL,CADgB,EAEhB,CAAE,CAAF,EAAK,CAAL,CAFgB,EAGhB,CAAE,CAAF,EAAK,CAAL,CAHgB,EAIhB,CAAE,CAAF,EAAK,CAAL,CAJgB,EAKhB,CAAE,CAAF,EAAK,CAAL,CALgB,CAAlB;AAQA,QAAIC,KAAK,GAAGjE,GAAG,CAACkD,OAAJ,IAAe,KAAK7R,MAAhC;AAAA,QACI6S,GAAG,GAAG,CADV;AAAA,QAEIC,GAAG,GAAG,CAFV;AAAA,QAGIC,GAAG,GAAG,CAHV;AAAA,QAII1P,CAAC,GAAG,CAJR;AAAA,QAKIa,CALJ;AAAA,QAMI8O,GANJ;AAAA,QAOIlR,CAPJ;AAAA,QAQI2G,CARJ;AAAA,QASIlD,CATJ;AAAA,QAUIE,IAVJ;AAAA,QAWIyE,KAXJ;AAaAyE,IAAAA,GAAG,CAACjJ,OAAJ,GAAc,EAAd,CAnCsD,CAoCtD;AACA;;AACA,aAAS;AACPxB,MAAAA,CAAC,GAAGyK,GAAG,CAACzM,IAAJ,CAASmB,CAAC,EAAV,CAAJ;AACA,UAAIa,CAAC,IAAI,IAAT,EAAe;AACf8O,MAAAA,GAAG,GAAG,CAACH,GAAG,GAAGlE,GAAG,CAACpL,KAAV,GAAkBuP,GAAnB,IAA0B,CAAhC;;AACA,UAAI,CAACF,KAAK,CAAC1O,CAAD,CAAV,EAAe;AACb,YAAIxE,OAAO,CAACoD,KAAZ,EAAmB,MAAM,IAAI/C,KAAJ,CAAU,aAAV,CAAN;AACnB6S,QAAAA,KAAK,CAAC1O,CAAD,CAAL,GAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAX;AACD;;AACDyK,MAAAA,GAAG,CAACjJ,OAAJ,CAAYsN,GAAZ,IAAmBJ,KAAK,CAAC1O,CAAD,CAAL,CAAS,CAAT,CAAnB;AACAyK,MAAAA,GAAG,CAACjJ,OAAJ,CAAYsN,GAAG,GAAG,CAAlB,IAAuBJ,KAAK,CAAC1O,CAAD,CAAL,CAAS,CAAT,CAAvB;AACAyK,MAAAA,GAAG,CAACjJ,OAAJ,CAAYsN,GAAG,GAAG,CAAlB,IAAuBJ,KAAK,CAAC1O,CAAD,CAAL,CAAS,CAAT,CAAvB;AACAyK,MAAAA,GAAG,CAACjJ,OAAJ,CAAYsN,GAAG,GAAG,CAAlB,IAAuBJ,KAAK,CAAC1O,CAAD,CAAL,CAAS,CAAT,CAAvB;;AACA,UAAI2K,OAAO,CAACoD,cAAR,IAA0B/N,CAAC,KAAK2K,OAAO,CAACqD,gBAA5C,EAA8D;AAC5DvD,QAAAA,GAAG,CAACjJ,OAAJ,CAAYsN,GAAG,GAAG,CAAlB,IAAuB,CAAvB;AACD;;AACD,UAAI,EAAEF,GAAF,IAASnE,GAAG,CAACpL,KAAjB,EAAwB;AACtBuP,QAAAA,GAAG,GAAG,CAAN;;AACA,YAAInE,GAAG,CAACgD,KAAR,EAAe;AACbkB,UAAAA,GAAG,IAAIF,WAAW,CAACI,GAAD,CAAX,CAAiB,CAAjB,CAAP;;AACA,cAAIF,GAAG,IAAIlE,GAAG,CAACnL,MAAf,EAAuB;AACrBqP,YAAAA,GAAG,GAAGF,WAAW,CAAC,EAAEI,GAAH,CAAX,CAAmB,CAAnB,CAAN;AACD;AACF,SALD,MAKO;AACLF,UAAAA,GAAG;AACJ;AACF;AACF;;AAEDlE,IAAAA,GAAG,CAAC7O,MAAJ,GAAa,EAAb;;AACA,SAAKgC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG6M,GAAG,CAACjJ,OAAJ,CAAY/C,MAA5B,EAAoCb,CAAC,IAAI,CAAzC,EAA4C;AAC1C6M,MAAAA,GAAG,CAAC7O,MAAJ,CAAWiD,IAAX,CAAgB4L,GAAG,CAACjJ,OAAJ,CAAY9E,KAAZ,CAAkBkB,CAAlB,EAAqBA,CAAC,GAAG,CAAzB,CAAhB;AACD;;AAED6M,IAAAA,GAAG,CAACrN,GAAJ,GAAU,EAAV;;AACA,SAAKmH,CAAC,GAAG,CAAJ,EAAOpF,CAAC,GAAG,CAAhB,EAAmBoF,CAAC,GAAGkG,GAAG,CAACnL,MAA3B,EAAmCiF,CAAC,EAApC,EAAwC;AACtChD,MAAAA,IAAI,GAAG,EAAP;;AACA,WAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoJ,GAAG,CAACpL,KAApB,EAA2BgC,CAAC,EAA5B,EAAgC;AAC9B2E,QAAAA,KAAK,GAAGyE,GAAG,CAAC7O,MAAJ,CAAWuD,CAAC,EAAZ,CAAR;;AACA,YAAI,CAAC6G,KAAL,EAAY;AACV,cAAIxK,OAAO,CAACoD,KAAZ,EAAmB,MAAM,IAAI/C,KAAJ,CAAU,UAAV,CAAN;AACnB0F,UAAAA,IAAI,CAAC1C,IAAL,CAAU;AAAEiB,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE,CAAX;AAAcC,YAAAA,CAAC,EAAE,CAAjB;AAAoBC,YAAAA,CAAC,EAAE;AAAvB,WAAV;AACA;AACD;;AACDsB,QAAAA,IAAI,CAAC1C,IAAL,CAAU;AAAEiB,UAAAA,CAAC,EAAEkG,KAAK,CAAC,CAAD,CAAV;AAAejG,UAAAA,CAAC,EAAEiG,KAAK,CAAC,CAAD,CAAvB;AAA4BhG,UAAAA,CAAC,EAAEgG,KAAK,CAAC,CAAD,CAApC;AAAyC/F,UAAAA,CAAC,EAAE+F,KAAK,CAAC,CAAD;AAAjD,SAAV;AACD;;AACDyE,MAAAA,GAAG,CAACrN,GAAJ,CAAQyB,IAAR,CAAa0C,IAAb;AACD;;AAED,WAAOkJ,GAAP;AACD,GAvFa,EAuFX,IAvFW,EAuFL9K,MAvFK,CAuFEoP,OAvFF,CAAd;;AAyFA,MAAI,CAAC,KAAKjE,MAAL,CAAYrM,MAAjB,EAAyB;AACvB,UAAM,IAAI5C,KAAJ,CAAU,iCAAV,CAAN;AACD;AACF,C,CAED;AACA;;;AACAgP,GAAG,CAACnN,SAAJ,CAAc0D,UAAd,GAA2B,UAASoJ,KAAT,EAAgBoD,QAAhB,EAA0B;AACnD,MAAIrO,QAAQ,GAAGqO,QAAQ,GAAG,CAA1B;AAAA,MACIoB,EAAE,GAAG,KAAKpB,QADd;AAAA,MAEIqB,GAAG,GAAGD,EAAE,GAAG,CAFf;AAAA,MAGIE,KAAK,GAAG,EAHZ;AAAA,MAIIR,KAAK,GAAG,EAJZ;AAAA,MAKIS,MAAM,GAAG,CALb;AAAA,MAMIC,OAAO,GAAG,IANd;AAAA,MAOIC,MAAM,GAAG,CAPb;AAAA,MAQIC,OAAO,GAAG,CARd;AAAA,MASInQ,CAAC,GAAG,CATR;AAAA,MAUI1D,GAAG,GAAG,EAVV;AAAA,MAWI8T,IAXJ;AAAA,MAYIC,IAZJ;AAAA,MAaIC,GAbJ;AAAA,MAcIC,CAdJ;AAAA,MAeIC,IAfJ;AAAA,MAgBI/R,CAhBJ;AAAA,MAiBIgS,CAjBJ;AAAA,MAkBI5P,CAlBJ;AAAA,MAmBI6P,OAnBJ;;AAqBA,WAAS;AACP,QAAIX,KAAK,CAACzQ,MAAN,KAAiB,CAArB,EAAwB;AACtB8Q,MAAAA,IAAI,GAAGhQ,QAAP;AACAiQ,MAAAA,IAAI,GAAG,CAAP;AACAC,MAAAA,GAAG,GAAG,CAAN;;AACA,aAAOD,IAAI,GAAGD,IAAd,EAAoB;AAClB,YAAID,OAAO,KAAK,CAAhB,EAAmB;AACjB,cAAInQ,CAAC,IAAIqL,KAAK,CAAC/L,MAAf,EAAuB,OAAOhD,GAAP;AACvB4T,UAAAA,MAAM,GAAG7E,KAAK,CAACrL,CAAC,EAAF,CAAd;AACAmQ,UAAAA,OAAO,GAAG,CAAV;AACD;;AACDI,QAAAA,CAAC,GAAGzN,IAAI,CAAC6N,GAAL,CAASP,IAAI,GAAGC,IAAhB,EAAsBF,OAAtB,CAAJ;AACAG,QAAAA,GAAG,IAAI,CAACJ,MAAM,GAAI,CAAC,KAAKK,CAAN,IAAW,CAAtB,KAA6BF,IAApC;AACAA,QAAAA,IAAI,IAAIE,CAAR;AACAJ,QAAAA,OAAO,IAAII,CAAX;AACAL,QAAAA,MAAM,KAAKK,CAAX;AACD;;AACDC,MAAAA,IAAI,GAAGF,GAAP;;AAEA,UAAIE,IAAI,KAAKV,GAAb,EAAkB;AAChB;AACD;;AAED,UAAIU,IAAI,KAAKX,EAAb,EAAiB;AACfN,QAAAA,KAAK,GAAG,EAAR;;AACA,aAAK9Q,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGoR,EAAhB,EAAoB,EAAEpR,CAAtB,EAAyB;AACvB8Q,UAAAA,KAAK,CAAC9Q,CAAD,CAAL,GAAW,CAACA,CAAD,EAAI,CAAC,CAAL,EAAQA,CAAR,CAAX;AACD;;AACD2B,QAAAA,QAAQ,GAAGqO,QAAQ,GAAG,CAAtB;AACAiC,QAAAA,OAAO,GAAG,KAAKtQ,QAAf;AACA4P,QAAAA,MAAM,GAAGH,EAAE,GAAG,CAAd;AACAI,QAAAA,OAAO,GAAG,IAAV;AACA;AACD;;AAED,UAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpBA,QAAAA,OAAO,GAAGO,IAAV;AACAlU,QAAAA,GAAG,CAACoD,IAAJ,CAAS6P,KAAK,CAACiB,IAAD,CAAL,CAAY,CAAZ,CAAT;AACA;AACD;;AAED,UAAIA,IAAI,GAAGR,MAAX,EAAmB;AACjB,aAAKvR,CAAC,GAAG+R,IAAT,EAAe/R,CAAC,IAAI,CAApB,EAAuBA,CAAC,GAAG8Q,KAAK,CAAC9Q,CAAD,CAAL,CAAS,CAAT,CAA3B,EAAwC;AACtCsR,UAAAA,KAAK,CAACrQ,IAAN,CAAW6P,KAAK,CAAC9Q,CAAD,CAAL,CAAS,CAAT,CAAX;AACD;;AACD8Q,QAAAA,KAAK,CAACS,MAAM,EAAP,CAAL,GAAkB,CAChBT,KAAK,CAACiB,IAAD,CAAL,CAAY,CAAZ,CADgB,EAEhBP,OAFgB,EAGhBV,KAAK,CAACU,OAAD,CAAL,CAAe,CAAf,CAHgB,CAAlB;AAKD,OATD,MASO;AACLQ,QAAAA,CAAC,GAAGlB,KAAK,CAACU,OAAD,CAAL,CAAe,CAAf,CAAJ;AACAV,QAAAA,KAAK,CAACS,MAAM,EAAP,CAAL,GAAkB,CAACS,CAAD,EAAIR,OAAJ,EAAaQ,CAAb,CAAlB;;AACA,aAAKhS,CAAC,GAAG+R,IAAT,EAAe/R,CAAC,IAAI,CAApB,EAAuBA,CAAC,GAAG8Q,KAAK,CAAC9Q,CAAD,CAAL,CAAS,CAAT,CAA3B,EAAwC;AACtCsR,UAAAA,KAAK,CAACrQ,IAAN,CAAW6P,KAAK,CAAC9Q,CAAD,CAAL,CAAS,CAAT,CAAX;AACD;AACF;;AAEDwR,MAAAA,OAAO,GAAGO,IAAV;;AACA,UAAIR,MAAM,KAAKU,OAAf,EAAwB;AACtBA,QAAAA,OAAO,GAAG,KAAM,EAAEtQ,QAAlB;AACA,YAAIA,QAAQ,GAAG,EAAf,EAAmBA,QAAQ,GAAG,EAAX;AACpB;AACF;;AACDS,IAAAA,CAAC,GAAGkP,KAAK,CAAC7H,GAAN,EAAJ;AACA,QAAIrH,CAAC,IAAI,IAAT,EAAe;AACfvE,IAAAA,GAAG,CAACoD,IAAJ,CAASmB,CAAT;AACD;;AAED,SAAOvE,GAAP;AACD,CA5FD;AA8FA;AACA;AACA;;;AAEAsU,OAAO,GAAGzU,GAAV;AACAyU,OAAO,CAACC,GAAR,GAAc1U,GAAd;AACAyU,OAAO,CAACrF,GAAR,GAAcG,GAAd;AAEAoF,MAAM,CAACF,OAAP,GAAiBA,OAAjB","sourcesContent":["/**\n * tng.js - png reader\n * Copyright (c) 2015, Christopher Jeffrey (MIT License).\n * https://github.com/chjj/tng\n */\n\nvar fs = require('fs')\n  , util = require('util')\n  , path = require('path')\n  , zlib = require('zlib')\n  , assert = require('assert')\n  , cp = require('child_process')\n  , exec = cp.execFileSync;\n\n/**\n * PNG\n */\n\nfunction PNG(file, options) {\n  var buf\n    , chunks\n    , idat\n    , pixels;\n\n  if (!(this instanceof PNG)) {\n    return new PNG(file, options);\n  }\n\n  if (!file) throw new Error('no file');\n\n  this.options = options || {};\n  this.colors = options.colors || require('blessed/lib/colors');\n  this.optimization = this.options.optimization || 'mem';\n  this.speed = this.options.speed || 1;\n\n  if (Buffer.isBuffer(file)) {\n    this.file = this.options.filename || null;\n    buf = file;\n  } else {\n    this.options.filename = file;\n    this.file = path.resolve(process.cwd(), file);\n    buf = fs.readFileSync(this.file);\n  }\n\n  this.format = buf.readUInt32BE(0) === 0x89504e47 ? 'png'\n    : buf.slice(0, 3).toString('ascii') === 'GIF' ? 'gif'\n    : buf.readUInt16BE(0) === 0xffd8 ? 'jpg'\n    : path.extname(this.file).slice(1).toLowerCase() || 'png';\n\n  if (this.format !== 'png') {\n    try {\n      return this.toPNG(buf);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  chunks = this.parseRaw(buf);\n  idat = this.parseChunks(chunks);\n  pixels = this.parseLines(idat);\n\n  this.bmp = this.createBitmap(pixels);\n  this.cellmap = this.createCellmap(this.bmp);\n  this.frames = this.compileFrames(this.frames);\n}\n\nPNG.prototype.parseRaw = function(buf) {\n  var chunks = []\n    , index = 0\n    , i = 0\n    , buf\n    , len\n    , type\n    , name\n    , data\n    , crc\n    , check\n    , critical\n    , public_\n    , conforming\n    , copysafe\n    , pos;\n\n  this._debug(this.file);\n\n  if (buf.readUInt32BE(0) !== 0x89504e47\n      || buf.readUInt32BE(4) !== 0x0d0a1a0a) {\n    throw new Error('bad header');\n  }\n\n  i += 8;\n\n  while (i < buf.length) {\n    try {\n      len = buf.readUInt32BE(i);\n      i += 4;\n      pos = i;\n      type = buf.slice(i, i + 4);\n      name = type.toString('ascii');\n      i += 4;\n      data = buf.slice(i, i + len);\n      i += len;\n      check = this.crc32(buf.slice(pos, i));\n      crc = buf.readInt32BE(i);\n      i += 4;\n      critical = !!(~type[0] & 32);\n      public_ = !!(~type[1] & 32);\n      conforming = !!(~type[2] & 32);\n      copysafe = !!(~type[3] & 32);\n      if (crc !== check) {\n        throw new Error(name + ': bad crc');\n      }\n    } catch (e) {\n      if (this.options.debug) throw e;\n      break;\n    }\n    chunks.push({\n      index: index++,\n      id: name.toLowerCase(),\n      len: len,\n      pos: pos,\n      end: i,\n      type: type,\n      name: name,\n      data: data,\n      crc: crc,\n      check: check,\n      raw: buf.slice(pos, i),\n      flags: {\n        critical: critical,\n        public_: public_,\n        conforming: conforming,\n        copysafe: copysafe\n      }\n    });\n  }\n\n  return chunks;\n};\n\nPNG.prototype.parseChunks = function(chunks) {\n  var i\n    , chunk\n    , name\n    , data\n    , p\n    , idat\n    , info;\n\n  for (i = 0; i < chunks.length; i++) {\n    chunk = chunks[i];\n    name = chunk.id;\n    data = chunk.data;\n    info = {};\n    switch (name) {\n      case 'ihdr': {\n        this.width = info.width = data.readUInt32BE(0);\n        this.height = info.height = data.readUInt32BE(4);\n        this.bitDepth = info.bitDepth = data.readUInt8(8);\n        this.colorType = info.colorType = data.readUInt8(9);\n        this.compression = info.compression = data.readUInt8(10);\n        this.filter = info.filter = data.readUInt8(11);\n        this.interlace = info.interlace = data.readUInt8(12);\n        switch (this.bitDepth) {\n          case 1: case 2: case 4: case 8: case 16: case 24: case 32: break;\n          default: throw new Error('bad bit depth: ' + this.bitDepth);\n        }\n        switch (this.colorType) {\n          case 0: case 2: case 3: case 4: case 6: break;\n          default: throw new Error('bad color: ' + this.colorType);\n        }\n        switch (this.compression) {\n          case 0: break;\n          default: throw new Error('bad compression: ' + this.compression);\n        }\n        switch (this.filter) {\n          case 0: case 1: case 2: case 3: case 4: break;\n          default: throw new Error('bad filter: ' + this.filter);\n        }\n        switch (this.interlace) {\n          case 0: case 1: break;\n          default: throw new Error('bad interlace: ' + this.interlace);\n        }\n        break;\n      }\n      case 'plte': {\n        this.palette = info.palette = [];\n        for (p = 0; p < data.length; p += 3) {\n          this.palette.push({\n            r: data[p + 0],\n            g: data[p + 1],\n            b: data[p + 2],\n            a: 255\n          });\n        }\n        break;\n      }\n      case 'idat': {\n        this.size = this.size || 0;\n        this.size += data.length;\n        this.idat = this.idat || [];\n        this.idat.push(data);\n        info.size = data.length;\n        break;\n      }\n      case 'iend': {\n        this.end = true;\n        break;\n      }\n      case 'trns': {\n        this.alpha = info.alpha = Array.prototype.slice.call(data);\n        if (this.palette) {\n          for (p = 0; p < data.length; p++) {\n            if (!this.palette[p]) break;\n            this.palette[p].a = data[p];\n          }\n        }\n        break;\n      }\n      // https://wiki.mozilla.org/APNG_Specification\n      case 'actl': {\n        this.actl = info = {};\n        this.frames = [];\n        this.actl.numFrames = data.readUInt32BE(0);\n        this.actl.numPlays = data.readUInt32BE(4);\n        break;\n      }\n      case 'fctl': {\n        // IDAT is the first frame depending on the order:\n        // IDAT is a frame: acTL->fcTL->IDAT->[fcTL]->fdAT\n        // IDAT is not a frame: acTL->IDAT->[fcTL]->fdAT\n        if (!this.idat) {\n          this.idat = [];\n          this.frames.push({\n            idat: true,\n            fctl: info,\n            fdat: this.idat\n          });\n        } else {\n          this.frames.push({\n            fctl: info,\n            fdat: []\n          });\n        }\n        info.sequenceNumber = data.readUInt32BE(0);\n        info.width = data.readUInt32BE(4);\n        info.height = data.readUInt32BE(8);\n        info.xOffset = data.readUInt32BE(12);\n        info.yOffset = data.readUInt32BE(16);\n        info.delayNum = data.readUInt16BE(20);\n        info.delayDen = data.readUInt16BE(22);\n        info.disposeOp = data.readUInt8(24);\n        info.blendOp = data.readUInt8(25);\n        break;\n      }\n      case 'fdat': {\n        info.sequenceNumber = data.readUInt32BE(0);\n        info.data = data.slice(4);\n        this.frames[this.frames.length - 1].fdat.push(info.data);\n        break;\n      }\n    }\n    chunk.info = info;\n  }\n\n  this._debug(chunks);\n\n  if (this.frames) {\n    this.frames = this.frames.map(function(frame, i) {\n      frame.fdat = this.decompress(frame.fdat);\n      if (!frame.fdat.length) throw new Error('no data');\n      return frame;\n    }, this);\n  }\n\n  idat = this.decompress(this.idat);\n  if (!idat.length) throw new Error('no data');\n\n  return idat;\n};\n\nPNG.prototype.parseLines = function(data) {\n  var pixels = []\n    , x\n    , p\n    , prior\n    , line\n    , filter\n    , samples\n    , pendingSamples\n    , ch\n    , shiftStart\n    , i\n    , toShift\n    , sample;\n\n  this.sampleDepth =\n    this.colorType === 0 ? 1\n    : this.colorType === 2 ? 3\n    : this.colorType === 3 ? 1\n    : this.colorType === 4 ? 2\n    : this.colorType === 6 ? 4\n    : 1;\n  this.bitsPerPixel = this.bitDepth * this.sampleDepth;\n  this.bytesPerPixel = Math.ceil(this.bitsPerPixel / 8);\n  this.wastedBits = ((this.width * this.bitsPerPixel) / 8) - ((this.width * this.bitsPerPixel / 8) | 0);\n  this.byteWidth = Math.ceil(this.width * (this.bitsPerPixel / 8));\n\n  this.shiftStart = ((this.bitDepth + (8 / this.bitDepth - this.bitDepth)) - 1) | 0;\n  this.shiftMult = this.bitDepth >= 8 ? 0 : this.bitDepth;\n  this.mask = this.bitDepth === 32 ? 0xffffffff : (1 << this.bitDepth) - 1;\n\n  if (this.interlace === 1) {\n    samples = this.sampleInterlacedLines(data);\n    for (i = 0; i < samples.length; i += this.sampleDepth) {\n      pixels.push(samples.slice(i, i + this.sampleDepth));\n    }\n    return pixels;\n  }\n\n  for (p = 0; p < data.length; p += this.byteWidth) {\n    prior = line || [];\n    filter = data[p++];\n    line = data.slice(p, p + this.byteWidth);\n    line = this.unfilterLine(filter, line, prior);\n    samples = this.sampleLine(line);\n    for (i = 0; i < samples.length; i += this.sampleDepth) {\n      pixels.push(samples.slice(i, i + this.sampleDepth));\n    }\n  }\n\n  return pixels;\n};\n\nPNG.prototype.unfilterLine = function(filter, line, prior) {\n  for (var x = 0; x < line.length; x++) {\n    if (filter === 0) {\n      break;\n    } else if (filter === 1) {\n      line[x] = this.filters.sub(x, line, prior, this.bytesPerPixel);\n    } else if (filter === 2) {\n      line[x] = this.filters.up(x, line, prior, this.bytesPerPixel);\n    } else if (filter === 3) {\n      line[x] = this.filters.average(x, line, prior, this.bytesPerPixel);\n    } else if (filter === 4) {\n      line[x] = this.filters.paeth(x, line, prior, this.bytesPerPixel);\n    }\n  }\n  return line;\n};\n\nPNG.prototype.sampleLine = function(line, width) {\n  var samples = []\n    , x = 0\n    , pendingSamples\n    , ch\n    , i\n    , sample\n    , shiftStart\n    , toShift;\n\n  while (x < line.length) {\n    pendingSamples = this.sampleDepth;\n    while (pendingSamples--) {\n      ch = line[x];\n      if (this.bitDepth === 16) {\n        ch = (ch << 8) | line[++x];\n      } else if (this.bitDepth === 24) {\n        ch = (ch << 16) | (line[++x] << 8) | line[++x];\n      } else if (this.bitDepth === 32) {\n        ch = (ch << 24) | (line[++x] << 16) | (line[++x] << 8) | line[++x];\n      } else if (this.bitDepth > 32) {\n        throw new Error('bitDepth ' + this.bitDepth + ' unsupported.');\n      }\n      shiftStart = this.shiftStart;\n      toShift = shiftStart - (x === line.length - 1 ? this.wastedBits : 0);\n      for (i = 0; i <= toShift; i++) {\n        sample = (ch >> (this.shiftMult * shiftStart)) & this.mask;\n        if (this.colorType !== 3) {\n          if (this.bitDepth < 8) { // <= 8 would work too, doesn't matter\n            // sample = sample * (0xff / this.mask) | 0; // would work too\n            sample *= 0xff / this.mask;\n            sample |= 0;\n          } else if (this.bitDepth > 8) {\n            sample = (sample / this.mask) * 255 | 0;\n          }\n        }\n        samples.push(sample);\n        shiftStart--;\n      }\n      x++;\n    }\n  }\n\n  // Needed for deinterlacing?\n  if (width != null) {\n    samples = samples.slice(0, width * this.sampleDepth);\n  }\n\n  return samples;\n};\n\n// http://www.w3.org/TR/PNG-Filters.html\nPNG.prototype.filters = {\n  sub: function Sub(x, line, prior, bpp) {\n    if (x < bpp) return line[x];\n    return (line[x] + line[x - bpp]) % 256;\n  },\n  up: function Up(x, line, prior, bpp) {\n    return (line[x] + (prior[x] || 0)) % 256;\n  },\n  average: function Average(x, line, prior, bpp) {\n    if (x < bpp) return Math.floor((prior[x] || 0) / 2);\n    // if (x < bpp) return (prior[x] || 0) >> 1;\n    return (line[x]\n      + Math.floor((line[x - bpp] + prior[x]) / 2)\n      // + ((line[x - bpp] + prior[x]) >> 1)\n    ) % 256;\n  },\n  paeth: function Paeth(x, line, prior, bpp) {\n    if (x < bpp) return prior[x] || 0;\n    return (line[x] + this._predictor(\n      line[x - bpp], prior[x] || 0, prior[x - bpp] || 0\n    )) % 256;\n  },\n  _predictor: function PaethPredictor(a, b, c) {\n    // a = left, b = above, c = upper left\n    var p = a + b - c\n      , pa = Math.abs(p - a)\n      , pb = Math.abs(p - b)\n      , pc = Math.abs(p - c);\n    if (pa <= pb && pa <= pc) return a;\n    if (pb <= pc) return b;\n    return c;\n  }\n};\n\n/**\n * Adam7 deinterlacing ported to javascript from PyPNG:\n * pypng - Pure Python library for PNG image encoding/decoding\n * Copyright (c) 2009-2015, David Jones (MIT License).\n * https://github.com/drj11/pypng\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation files\n * (the \"Software\"), to deal in the Software without restriction,\n * including without limitation the rights to use, copy, modify, merge,\n * publish, distribute, sublicense, and/or sell copies of the Software,\n * and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nPNG.prototype.sampleInterlacedLines = function(raw) {\n  var psize\n    , vpr\n    , samples\n    , source_offset\n    , i\n    , pass\n    , xstart\n    , ystart\n    , xstep\n    , ystep\n    , recon\n    , ppr\n    , row_size\n    , y\n    , filter_type\n    , scanline\n    , flat\n    , offset\n    , k\n    , end_offset\n    , skip\n    , j\n    , k\n    , f;\n\n  var adam7 = [\n    [0, 0, 8, 8],\n    [4, 0, 8, 8],\n    [0, 4, 4, 8],\n    [2, 0, 4, 4],\n    [0, 2, 2, 4],\n    [1, 0, 2, 2],\n    [0, 1, 1, 2]\n  ];\n\n  // Fractional bytes per pixel\n  psize = (this.bitDepth / 8) * this.sampleDepth;\n\n  // Values per row (of the target image)\n  vpr = this.width * this.sampleDepth;\n\n  // Make a result array, and make it big enough. Interleaving\n  // writes to the output array randomly (well, not quite), so the\n  // entire output array must be in memory.\n  samples = new Buffer(vpr * this.height);\n  samples.fill(0);\n\n  source_offset = 0;\n\n  for (i = 0; i < adam7.length; i++) {\n    pass = adam7[i];\n    xstart = pass[0];\n    ystart = pass[1];\n    xstep = pass[2];\n    ystep = pass[3];\n    if (xstart >= this.width) continue;\n    // The previous (reconstructed) scanline. Empty array at the\n    // beginning of a pass to indicate that there is no previous\n    // line.\n    recon = [];\n    // Pixels per row (reduced pass image)\n    ppr = Math.ceil((this.width - xstart) / xstep);\n    // Row size in bytes for this pass.\n    row_size = Math.ceil(psize * ppr);\n    for (y = ystart; y < this.height; y += ystep) {\n      filter_type = raw[source_offset];\n      source_offset += 1;\n      scanline = raw.slice(source_offset, source_offset + row_size);\n      source_offset += row_size;\n      recon = this.unfilterLine(filter_type, scanline, recon);\n      // Convert so that there is one element per pixel value\n      flat = this.sampleLine(recon, ppr);\n      if (xstep === 1) {\n        assert.equal(xstart, 0);\n        offset = y * vpr;\n        for (k = offset, f = 0; k < offset + vpr; k++, f++) {\n          samples[k] = flat[f];\n        }\n      } else {\n        offset = y * vpr + xstart * this.sampleDepth;\n        end_offset = (y + 1) * vpr;\n        skip = this.sampleDepth * xstep;\n        for (j = 0; j < this.sampleDepth; j++) {\n          for (k = offset + j, f = j; k < end_offset; k += skip, f += this.sampleDepth) {\n            samples[k] = flat[f];\n          }\n        }\n      }\n    }\n  }\n\n  return samples;\n};\n\nPNG.prototype.createBitmap = function(pixels) {\n  var bmp = []\n    , i;\n\n  if (this.colorType === 0) {\n    pixels = pixels.map(function(sample) {\n      return { r: sample[0], g: sample[0], b: sample[0], a: 255 };\n    });\n  } else if (this.colorType === 2) {\n    pixels = pixels.map(function(sample) {\n      return { r: sample[0], g: sample[1], b: sample[2], a: 255 };\n    });\n  } else if (this.colorType === 3) {\n    pixels = pixels.map(function(sample) {\n      if (!this.palette[sample[0]]) throw new Error('bad palette index');\n      return this.palette[sample[0]];\n    }, this);\n  } else if (this.colorType === 4) {\n    pixels = pixels.map(function(sample) {\n      return { r: sample[0], g: sample[0], b: sample[0], a: sample[1] };\n    });\n  } else if (this.colorType === 6) {\n    pixels = pixels.map(function(sample) {\n      return { r: sample[0], g: sample[1], b: sample[2], a: sample[3] };\n    });\n  }\n\n  for (i = 0; i < pixels.length; i += this.width) {\n    bmp.push(pixels.slice(i, i + this.width));\n  }\n\n  return bmp;\n};\n\nPNG.prototype.createCellmap = function(bmp, options) {\n  var bmp = bmp || this.bmp\n    , options = options || this.options\n    , cellmap = []\n    , scale = options.scale || 0.20\n    , height = bmp.length\n    , width = bmp[0].length\n    , cmwidth = options.width\n    , cmheight = options.height\n    , line\n    , x\n    , y\n    , xx\n    , yy\n    , scale\n    , xs\n    , ys;\n\n  if (cmwidth) {\n    scale = cmwidth / width;\n  } else if (cmheight) {\n    scale = cmheight / height;\n  }\n\n  if (!cmheight) {\n    cmheight = Math.round(height * scale);\n  }\n\n  if (!cmwidth) {\n    cmwidth = Math.round(width * scale);\n  }\n\n  ys = height / cmheight;\n  xs = width / cmwidth;\n\n  for (y = 0; y < bmp.length; y += ys) {\n    line = [];\n    yy = Math.round(y);\n    if (!bmp[yy]) break;\n    for (x = 0; x < bmp[yy].length; x += xs) {\n      xx = Math.round(x);\n      if (!bmp[yy][xx]) break;\n      line.push(bmp[yy][xx]);\n    }\n    cellmap.push(line);\n  }\n\n  return cellmap;\n};\n\nPNG.prototype.renderANSI = function(bmp) {\n  var self = this\n    , out = '';\n\n  bmp.forEach(function(line, y) {\n    line.forEach(function(pixel, x) {\n      var outch = self.getOutch(x, y, line, pixel);\n      out += self.pixelToSGR(pixel, outch);\n    });\n    out += '\\n';\n  });\n\n  return out;\n};\n\nPNG.prototype.renderContent = function(bmp, el) {\n  var self = this\n    , out = '';\n\n  bmp.forEach(function(line, y) {\n    line.forEach(function(pixel, x) {\n      var outch = self.getOutch(x, y, line, pixel);\n      out += self.pixelToTags(pixel, outch);\n    });\n    out += '\\n';\n  });\n\n  el.setContent(out);\n\n  return out;\n};\n\nPNG.prototype.renderScreen = function(bmp, screen, xi, xl, yi, yl) {\n  var self = this\n    , lines = screen.lines\n    , cellLines\n    , y\n    , yy\n    , x\n    , xx\n    , alpha\n    , attr\n    , ch;\n\n  cellLines = bmp.reduce(function(cellLines, line, y) {\n    var cellLine = [];\n    line.forEach(function(pixel, x) {\n      var outch = self.getOutch(x, y, line, pixel)\n        , cell = self.pixelToCell(pixel, outch);\n      cellLine.push(cell);\n    });\n    cellLines.push(cellLine);\n    return cellLines;\n  }, []);\n\n  for (y = yi; y < yl; y++) {\n    yy = y - yi;\n    for (x = xi; x < xl; x++) {\n      xx = x - xi;\n      if (lines[y] && lines[y][x] && cellLines[yy] && cellLines[yy][xx]) {\n        alpha = cellLines[yy][xx].pop();\n        // completely transparent\n        if (alpha === 0.0) {\n          continue;\n        }\n        // translucency / blending\n        if (alpha < 1.0) {\n          attr = cellLines[yy][xx][0];\n          ch = cellLines[yy][xx][1];\n          lines[y][x][0] = this.colors.blend(lines[y][x][0], attr, alpha);\n          if (ch !== ' ') lines[y][x][1] = ch;\n          lines[y].dirty = true;\n          continue;\n        }\n        // completely opaque\n        lines[y][x] = cellLines[yy][xx];\n        lines[y].dirty = true;\n      }\n    }\n  }\n};\n\nPNG.prototype.renderElement = function(bmp, el) {\n  var xi = el.aleft + el.ileft\n    , xl = el.aleft + el.width - el.iright\n    , yi = el.atop + el.itop\n    , yl = el.atop + el.height - el.ibottom;\n\n  return this.renderScreen(bmp, el.screen, xi, xl, yi, yl);\n};\n\nPNG.prototype.pixelToSGR = function(pixel, ch) {\n  var bga = 1.0\n    , fga = 0.5\n    , a = pixel.a / 255\n    , bg\n    , fg;\n\n  bg = this.colors.match(\n    pixel.r * a * bga | 0,\n    pixel.g * a * bga | 0,\n    pixel.b * a * bga | 0);\n\n  if (ch && this.options.ascii) {\n    fg = this.colors.match(\n      pixel.r * a * fga | 0,\n      pixel.g * a * fga | 0,\n      pixel.b * a * fga | 0);\n    if (a === 0) {\n      return '\\x1b[38;5;' + fg + 'm' + ch + '\\x1b[m';\n    }\n    return '\\x1b[38;5;' + fg + 'm\\x1b[48;5;' + bg + 'm' + ch + '\\x1b[m';\n  }\n\n  if (a === 0) return ' ';\n\n  return '\\x1b[48;5;' + bg + 'm \\x1b[m';\n};\n\nPNG.prototype.pixelToTags = function(pixel, ch) {\n  var bga = 1.0\n    , fga = 0.5\n    , a = pixel.a / 255\n    , bg\n    , fg;\n\n  bg = this.colors.RGBtoHex(\n    pixel.r * a * bga | 0,\n    pixel.g * a * bga | 0,\n    pixel.b * a * bga | 0);\n\n  if (ch && this.options.ascii) {\n    fg = this.colors.RGBtoHex(\n      pixel.r * a * fga | 0,\n      pixel.g * a * fga | 0,\n      pixel.b * a * fga | 0);\n    if (a === 0) {\n      return '{' + fg + '-fg}' + ch + '{/}';\n    }\n    return '{' + fg + '-fg}{' + bg + '-bg}' + ch + '{/}';\n  }\n\n  if (a === 0) return ' ';\n\n  return '{' + bg + '-bg} {/' + bg + '-bg}';\n};\n\nPNG.prototype.pixelToCell = function(pixel, ch) {\n  var bga = 1.0\n    , fga = 0.5\n    , a = pixel.a / 255\n    , bg\n    , fg;\n\n  bg = this.colors.match(\n    pixel.r * bga | 0,\n    pixel.g * bga | 0,\n    pixel.b * bga | 0);\n\n  if (ch && this.options.ascii) {\n    fg = this.colors.match(\n      pixel.r * fga | 0,\n      pixel.g * fga | 0,\n      pixel.b * fga | 0);\n  } else {\n    fg = 0x1ff;\n    ch = null;\n  }\n\n  // if (a === 0) bg = 0x1ff;\n\n  return [(0 << 18) | (fg << 9) | (bg << 0), ch || ' ', a];\n};\n\n// Taken from libcaca:\nPNG.prototype.getOutch = (function() {\n  var dchars = '????8@8@#8@8##8#MKXWwz$&%x><\\\\/xo;+=|^-:i\\'.`,  `.        ';\n\n  var luminance = function(pixel) {\n    var a = pixel.a / 255\n      , r = pixel.r * a\n      , g = pixel.g * a\n      , b = pixel.b * a\n      , l = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n\n    return l / 255;\n  };\n\n  return function(x, y, line, pixel) {\n    var lumi = luminance(pixel)\n      , outch = dchars[lumi * (dchars.length - 1) | 0];\n\n    return outch;\n  };\n})();\n\nPNG.prototype.compileFrames = function(frames) {\n  return this.optimization === 'mem'\n    ? this.compileFrames_lomem(frames)\n    : this.compileFrames_locpu(frames);\n};\n\nPNG.prototype.compileFrames_lomem = function(frames) {\n  if (!this.actl) return;\n  return frames.map(function(frame, i) {\n    this.width = frame.fctl.width;\n    this.height = frame.fctl.height;\n\n    var pixels = frame._pixels || this.parseLines(frame.fdat)\n      , bmp = frame._bmp || this.createBitmap(pixels)\n      , fc = frame.fctl;\n\n    return {\n      actl: this.actl,\n      fctl: frame.fctl,\n      delay: (fc.delayNum / (fc.delayDen || 100)) * 1000 | 0,\n      bmp: bmp\n    };\n  }, this);\n};\n\nPNG.prototype.compileFrames_locpu = function(frames) {\n  if (!this.actl) return;\n\n  this._curBmp = null;\n  this._lastBmp = null;\n\n  return frames.map(function(frame, i) {\n    this.width = frame.fctl.width;\n    this.height = frame.fctl.height;\n\n    var pixels = frame._pixels || this.parseLines(frame.fdat)\n      , bmp = frame._bmp || this.createBitmap(pixels)\n      , renderBmp = this.renderFrame(bmp, frame, i)\n      , cellmap = this.createCellmap(renderBmp)\n      , fc = frame.fctl;\n\n    return {\n      actl: this.actl,\n      fctl: frame.fctl,\n      delay: (fc.delayNum / (fc.delayDen || 100)) * 1000 | 0,\n      bmp: renderBmp,\n      cellmap: cellmap\n    };\n  }, this);\n};\n\nPNG.prototype.renderFrame = function(bmp, frame, i) {\n  var first = this.frames[0]\n    , last = this.frames[i - 1]\n    , fc = frame.fctl\n    , xo = fc.xOffset\n    , yo = fc.yOffset\n    , lxo\n    , lyo\n    , x\n    , y\n    , line\n    , p;\n\n  if (!this._curBmp) {\n    this._curBmp = [];\n    for (y = 0; y < first.fctl.height; y++) {\n      line = [];\n      for (x = 0; x < first.fctl.width; x++) {\n        p = bmp[y][x];\n        line.push({ r: p.r, g: p.g, b: p.b, a: p.a });\n      }\n      this._curBmp.push(line);\n    }\n  }\n\n  if (last && last.fctl.disposeOp !== 0) {\n    lxo = last.fctl.xOffset;\n    lyo = last.fctl.yOffset;\n    for (y = 0; y < last.fctl.height; y++) {\n      for (x = 0; x < last.fctl.width; x++) {\n        if (last.fctl.disposeOp === 0) {\n          // none / keep\n        } else if (last.fctl.disposeOp === 1) {\n          // background / clear\n          this._curBmp[lyo + y][lxo + x] = { r: 0, g: 0, b: 0, a: 0 };\n        } else if (last.fctl.disposeOp === 2) {\n          // previous / restore\n          p = this._lastBmp[y][x];\n          this._curBmp[lyo + y][lxo + x] = { r: p.r, g: p.g, b: p.b, a: p.a };\n        }\n      }\n    }\n  }\n\n  if (frame.fctl.disposeOp === 2) {\n    this._lastBmp = [];\n    for (y = 0; y < frame.fctl.height; y++) {\n      line = [];\n      for (x = 0; x < frame.fctl.width; x++) {\n        p = this._curBmp[yo + y][xo + x];\n        line.push({ r: p.r, g: p.g, b: p.b, a: p.a });\n      }\n      this._lastBmp.push(line);\n    }\n  } else {\n    this._lastBmp = null;\n  }\n\n  for (y = 0; y < frame.fctl.height; y++) {\n    for (x = 0; x < frame.fctl.width; x++) {\n      p = bmp[y][x];\n      if (fc.blendOp === 0) {\n        // source\n        this._curBmp[yo + y][xo + x] = { r: p.r, g: p.g, b: p.b, a: p.a };\n      } else if (fc.blendOp === 1) {\n        // over\n        if (p.a !== 0) {\n          this._curBmp[yo + y][xo + x] = { r: p.r, g: p.g, b: p.b, a: p.a };\n        }\n      }\n    }\n  }\n\n  return this._curBmp;\n};\n\nPNG.prototype._animate = function(callback) {\n  if (!this.frames) {\n    return callback(this.bmp, this.cellmap);\n  }\n\n  var self = this\n    , numPlays = this.actl.numPlays || Infinity\n    , running = 0\n    , i = -1;\n\n  this._curBmp = null;\n  this._lastBmp = null;\n\n  var next_lomem = function() {\n    if (!running) return;\n\n    var frame = self.frames[++i];\n    if (!frame) {\n      if (!--numPlays) return callback();\n      i = -1;\n      // XXX may be able to optimize by only setting the self._curBmp once???\n      self._curBmp = null;\n      self._lastBmp = null;\n      return setImmediate(next);\n    }\n\n    var bmp = frame.bmp\n      , renderBmp = self.renderFrame(bmp, frame, i)\n      , cellmap = self.createCellmap(renderBmp);\n\n    callback(renderBmp, cellmap);\n    return setTimeout(next, frame.delay / self.speed | 0);\n  };\n\n  var next_locpu = function() {\n    if (!running) return;\n    var frame = self.frames[++i];\n    if (!frame) {\n      if (!--numPlays) return callback();\n      i = -1;\n      return setImmediate(next);\n    }\n    callback(frame.bmp, frame.cellmap);\n    return setTimeout(next, frame.delay / self.speed | 0);\n  };\n\n  var next = this.optimization === 'mem'\n    ? next_lomem\n    : next_locpu;\n\n  this._control = function(state) {\n    if (state === -1) {\n      i = -1;\n      self._curBmp = null;\n      self._lastBmp = null;\n      running = 0;\n      callback(self.frames[0].bmp,\n        self.frames[0].cellmap || self.createCellmap(self.frames[0].bmp));\n      return;\n    }\n    if (state === running) return;\n    running = state;\n    return next();\n  };\n\n  this._control(1);\n};\n\nPNG.prototype.play = function(callback) {\n  if (!this._control || callback) {\n    this.stop();\n    return this._animate(callback);\n  }\n  this._control(1);\n};\n\nPNG.prototype.pause = function() {\n  if (!this._control) return;\n  this._control(0);\n};\n\nPNG.prototype.stop = function() {\n  if (!this._control) return;\n  this._control(-1);\n};\n\nPNG.prototype.toPNG = function(input) {\n  var options = this.options\n    , file = this.file\n    , format = this.format\n    , buf\n    , img\n    , gif\n    , i\n    , control\n    , disposeOp;\n\n  if (format !== 'gif') {\n    buf = exec('convert', [format + ':-', 'png:-'],\n      { stdio: ['pipe', 'pipe', 'ignore'], input: input });\n    img = PNG(buf, options);\n    img.file = file;\n    return img;\n  }\n\n  gif = GIF(input, options);\n\n  this.width = gif.width;\n  this.height = gif.height;\n  this.frames = [];\n\n  for (i = 0; i < gif.images.length; i++) {\n    img = gif.images[i];\n    // Convert from gif disposal to png disposal. See:\n    // http://www.w3.org/Graphics/GIF/spec-gif89a.txt\n    control = img.control || gif;\n    disposeOp = Math.max(0, (control.disposeMethod || 0) - 1);\n    if (disposeOp > 2) disposeOp = 0;\n    this.frames.push({\n      fctl: {\n        sequenceNumber: i,\n        width: img.width,\n        height: img.height,\n        xOffset: img.left,\n        yOffset: img.top,\n        delayNum: control.delay,\n        delayDen: 100,\n        disposeOp: disposeOp,\n        blendOp: 1\n      },\n      fdat: [],\n      _pixels: [],\n      _bmp: img.bmp\n    });\n  }\n\n  this.bmp = this.frames[0]._bmp;\n  this.cellmap = this.createCellmap(this.bmp);\n\n  if (this.frames.length > 1) {\n    this.actl = { numFrames: gif.images.length, numPlays: gif.numPlays || 0 };\n    this.frames = this.compileFrames(this.frames);\n  } else {\n    this.frames = undefined;\n  }\n\n  return this;\n};\n\n// Convert a gif to an apng using imagemagick. Unfortunately imagemagick\n// doesn't support apngs, so we coalesce the gif frames into one image and then\n// slice them into frames.\nPNG.prototype.gifMagick = function(input) {\n  var options = this.options\n    , file = this.file\n    , format = this.format\n    , buf\n    , fmt\n    , img\n    , frames\n    , frame\n    , width\n    , height\n    , iwidth\n    , twidth\n    , i\n    , lines\n    , line\n    , x\n    , y;\n\n  buf = exec('convert',\n    [format + ':-', '-coalesce', '+append', 'png:-'],\n    { stdio: ['pipe', 'pipe', 'ignore'], input: input });\n\n  fmt = '{\"W\":%W,\"H\":%H,\"w\":%w,\"h\":%h,\"d\":%T,\"x\":\"%X\",\"y\":\"%Y\"},'\n  frames = exec('identify', ['-format', fmt, format + ':-'],\n    { encoding: 'utf8', stdio: ['pipe', 'pipe', 'ignore'], input: input });\n  frames = JSON.parse('[' + frames.trim().slice(0, -1) + ']');\n\n  img = PNG(buf, options);\n  img.file = file;\n  Object.keys(img).forEach(function(key) {\n    this[key] = img[key];\n  }, this);\n\n  width = frames[0].W;\n  height = frames[0].H;\n  iwidth = 0;\n  twidth = 0;\n\n  this.width = width;\n  this.height = height;\n\n  this.frames = [];\n\n  for (i = 0; i < frames.length; i++) {\n    frame = frames[i];\n    frame.x = +frame.x;\n    frame.y = +frame.y;\n\n    iwidth = twidth;\n    twidth += width;\n\n    lines = [];\n    for (y = frame.y; y < height; y++) {\n      line = [];\n      for (x = iwidth + frame.x; x < twidth; x++) {\n        line.push(img.bmp[y][x]);\n      }\n      lines.push(line);\n    }\n\n    this.frames.push({\n      fctl: {\n        sequenceNumber: i,\n        width: frame.w,\n        height: frame.h,\n        xOffset: frame.x,\n        yOffset: frame.y,\n        delayNum: frame.d,\n        delayDen: 100,\n        disposeOp: 0,\n        blendOp: 0\n      },\n      fdat: [],\n      _pixels: [],\n      _bmp: lines\n    });\n  }\n\n  this.bmp = this.frames[0]._bmp;\n  this.cellmap = this.createCellmap(this.bmp);\n\n  if (this.frames.length > 1) {\n    this.actl = { numFrames: frames.length, numPlays: 0 };\n    this.frames = this.compileFrames(this.frames);\n  } else {\n    this.frames = undefined;\n  }\n\n  return this;\n};\n\nPNG.prototype.decompress = function(buffers) {\n  return zlib.inflateSync(new Buffer(buffers.reduce(function(out, data) {\n    return out.concat(Array.prototype.slice.call(data));\n  }, [])));\n};\n\n/**\n * node-crc\n * https://github.com/alexgorbatchev/node-crc\n * https://github.com/alexgorbatchev/node-crc/blob/master/LICENSE\n *\n * The MIT License (MIT)\n *\n * Copyright 2014 Alex Gorbatchev\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nPNG.prototype.crc32 = (function() {\n  var crcTable = [\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,\n    0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,\n    0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,\n    0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,\n    0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,\n    0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,\n    0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,\n    0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,\n    0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,\n    0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,\n    0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,\n    0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,\n    0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,\n    0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,\n    0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,\n    0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,\n    0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,\n    0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,\n    0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,\n    0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,\n    0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,\n    0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,\n    0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,\n    0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,\n    0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,\n    0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,\n    0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,\n    0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,\n    0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,\n    0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,\n    0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,\n    0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,\n    0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d\n  ];\n\n  return function crc32(buf) {\n    //var crc = previous === 0 ? 0 : ~~previous ^ -1;\n    var crc = -1;\n    for (var i = 0, len = buf.length; i < len; i++) {\n      crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\n    }\n    return crc ^ -1;\n  };\n})();\n\nPNG.prototype._debug = function() {\n  if (!this.options.log) return;\n  return this.options.log.apply(null, arguments);\n};\n\n/**\n * GIF\n */\n\nfunction GIF(file, options) {\n  var self = this;\n\n  if (!(this instanceof GIF)) {\n    return new GIF(file, options);\n  }\n\n  var info = {}\n    , p = 0\n    , buf\n    , i\n    , total\n    , sig\n    , desc\n    , img\n    , ext\n    , label\n    , size;\n\n  if (!file) throw new Error('no file');\n\n  options = options || {};\n\n  this.options = options;\n\n  // XXX If the gif is not optimized enough\n  // it may OOM the process with too many frames.\n  // TODO: Implement in PNG reader.\n  this.pixelLimit = this.options.pixelLimit || 7622550;\n  this.totalPixels = 0;\n\n  if (Buffer.isBuffer(file)) {\n    buf = file;\n    file = null;\n  } else {\n    file = path.resolve(process.cwd(), file);\n    buf = fs.readFileSync(file);\n  }\n\n  sig = buf.slice(0, 6).toString('ascii');\n  if (sig !== 'GIF87a' && sig !== 'GIF89a') {\n    throw new Error('bad header: ' + sig);\n  }\n\n  this.width = buf.readUInt16LE(6);\n  this.height = buf.readUInt16LE(8);\n\n  this.flags = buf.readUInt8(10);\n  this.gct = !!(this.flags & 0x80);\n  this.gctsize = (this.flags & 0x07) + 1;\n\n  this.bgIndex = buf.readUInt8(11);\n  this.aspect = buf.readUInt8(12);\n  p += 13;\n\n  if (this.gct) {\n    this.colors = [];\n    total = 1 << this.gctsize;\n    for (i = 0; i < total; i++, p += 3) {\n      this.colors.push([buf[p], buf[p + 1], buf[p + 2], 255]);\n    }\n  }\n\n  this.images = [];\n  this.extensions = [];\n\n  try {\n    while (p < buf.length) {\n      desc = buf.readUInt8(p);\n      p += 1;\n      if (desc === 0x2c) {\n        img = {};\n\n        img.left = buf.readUInt16LE(p);\n        p += 2;\n        img.top = buf.readUInt16LE(p);\n        p += 2;\n\n        img.width = buf.readUInt16LE(p);\n        p += 2;\n        img.height = buf.readUInt16LE(p);\n        p += 2;\n\n        img.flags = buf.readUInt8(p);\n        p += 1;\n\n        img.lct = !!(img.flags & 0x80);\n        img.ilace = !!(img.flags & 0x40);\n        img.lctsize = (img.flags & 0x07) + 1;\n\n        if (img.lct) {\n          img.lcolors = [];\n          total = 1 << img.lctsize;\n          for (i = 0; i < total; i++, p += 3) {\n            img.lcolors.push([buf[p], buf[p + 1], buf[p + 2], 255]);\n          }\n        }\n\n        img.codeSize = buf.readUInt8(p);\n        p += 1;\n\n        img.size = buf.readUInt8(p);\n        p += 1;\n\n        img.lzw = [buf.slice(p, p + img.size)];\n        p += img.size;\n\n        while (buf[p] !== 0x00) {\n          // Some gifs screw up their size.\n          // XXX Same for all subblocks?\n          if (buf[p] === 0x3b && p === buf.length - 1) {\n            p--;\n            break;\n          }\n          size = buf.readUInt8(p);\n          p += 1;\n          img.lzw.push(buf.slice(p, p + size));\n          p += size;\n        }\n\n        assert.equal(buf.readUInt8(p), 0x00);\n        p += 1;\n\n        if (ext && ext.label === 0xf9) {\n          img.control = ext;\n        }\n\n        this.totalPixels += img.width * img.height;\n\n        this.images.push(img);\n\n        if (this.totalPixels >= this.pixelLimit) {\n          break;\n        }\n      } else if (desc === 0x21) {\n        // Extensions:\n        // http://www.w3.org/Graphics/GIF/spec-gif89a.txt\n        ext = {};\n        label = buf.readUInt8(p);\n        p += 1;\n        ext.label = label;\n        if (label === 0xf9) {\n          size = buf.readUInt8(p);\n          assert.equal(size, 0x04);\n          p += 1;\n          ext.fields = buf.readUInt8(p);\n          ext.disposeMethod = (ext.fields >> 2) & 0x07;\n          ext.useTransparent = !!(ext.fields & 0x01);\n          p += 1;\n          ext.delay = buf.readUInt16LE(p);\n          p += 2;\n          ext.transparentColor = buf.readUInt8(p);\n          p += 1;\n          while (buf[p] !== 0x00) {\n            size = buf.readUInt8(p);\n            p += 1;\n            p += size;\n          }\n          assert.equal(buf.readUInt8(p), 0x00);\n          p += 1;\n          this.delay = ext.delay;\n          this.transparentColor = ext.transparentColor;\n          this.disposeMethod = ext.disposeMethod;\n          this.useTransparent = ext.useTransparent;\n        } else if (label === 0xff) {\n          // https://wiki.whatwg.org/wiki/GIF#Specifications\n          size = buf.readUInt8(p);\n          p += 1;\n          ext.id = buf.slice(p, p + 8).toString('ascii');\n          p += 8;\n          ext.auth = buf.slice(p, p + 3).toString('ascii');\n          p += 3;\n          ext.data = [];\n          while (buf[p] !== 0x00) {\n            size = buf.readUInt8(p);\n            p += 1;\n            ext.data.push(buf.slice(p, p + size));\n            p += size;\n          }\n          ext.data = new Buffer(ext.data.reduce(function(out, data) {\n            return out.concat(Array.prototype.slice.call(data));\n          }, []));\n          // AnimExts looping extension (identical to netscape)\n          if (ext.id === 'ANIMEXTS' && ext.auth === '1.0') {\n            ext.id = 'NETSCAPE';\n            ext.auth = '2.0';\n            ext.animexts = true;\n          }\n          // Netscape extensions\n          if (ext.id === 'NETSCAPE' && ext.auth === '2.0') {\n            if (ext.data.readUInt8(0) === 0x01) {\n              // Netscape looping extension\n              // http://graphcomp.com/info/specs/ani_gif.html\n              ext.numPlays = ext.data.readUInt16LE(1);\n              this.numPlays = ext.numPlays;\n            } else if (ext.data.readUInt8(0) === 0x02) {\n              // Netscape buffering extension\n              this.minBuffer = ext.data;\n            }\n          }\n          // Adobe XMP extension\n          if (ext.id === 'XMP Data' && ext.auth === 'XMP') {\n            ext.xmp = ext.data.toString('utf8');\n            this.xmp = ext.xmp;\n          }\n          // ICC extension\n          if (ext.id === 'ICCRGBG1' && ext.auth === '012') {\n            // NOTE: Says size is 4 bytes, not 1? Maybe just buffer size?\n            this.icc = ext.data;\n          }\n          // fractint extension\n          if (ext.id === 'fractint' && /^00[1-7]$/.test(ext.auth)) {\n            // NOTE: Says size is 4 bytes, not 1? Maybe just buffer size?\n            // Size: '!\\377\\013' == [0x00, 0x15, 0xff, 0x0b]\n            this.fractint = ext.data;\n          }\n          assert.equal(buf.readUInt8(p), 0x00);\n          p += 1;\n        } else {\n          ext.data = [];\n          while (buf[p] !== 0x00) {\n            size = buf.readUInt8(p);\n            p += 1;\n            ext.data.push(buf.slice(p, p + size));\n            p += size;\n          }\n          assert.equal(buf.readUInt8(p), 0x00);\n          p += 1;\n        }\n        this.extensions.push(ext);\n      } else if (desc === 0x3b) {\n        break;\n      } else if (p === buf.length - 1) {\n        // } else if (desc === 0x00 && p === buf.length - 1) {\n        break;\n      } else {\n        throw new Error('unknown block');\n      }\n    }\n  } catch (e) {\n    if (options.debug) {\n      throw e;\n    }\n  }\n\n  this.images = this.images.map(function(img, imageIndex) {\n    var control = img.control || this;\n\n    img.lzw = new Buffer(img.lzw.reduce(function(out, data) {\n      return out.concat(Array.prototype.slice.call(data));\n    }, []));\n\n    try {\n      img.data = this.decompress(img.lzw, img.codeSize);\n    } catch (e) {\n      if (options.debug) throw e;\n      return;\n    }\n\n    var interlacing = [\n      [ 0, 8 ],\n      [ 4, 8 ],\n      [ 2, 4 ],\n      [ 1, 2 ],\n      [ 0, 0 ]\n    ];\n\n    var table = img.lcolors || this.colors\n      , row = 0\n      , col = 0\n      , ilp = 0\n      , p = 0\n      , b\n      , idx\n      , i\n      , y\n      , x\n      , line\n      , pixel;\n\n    img.samples = [];\n    // Rewritten version of:\n    // https://github.com/lbv/ka-cs-programs/blob/master/lib/gif-reader.js\n    for (;;) {\n      b = img.data[p++];\n      if (b == null) break;\n      idx = (row * img.width + col) * 4;\n      if (!table[b]) {\n        if (options.debug) throw new Error('bad samples');\n        table[b] = [0, 0, 0, 0];\n      }\n      img.samples[idx] = table[b][0];\n      img.samples[idx + 1] = table[b][1];\n      img.samples[idx + 2] = table[b][2];\n      img.samples[idx + 3] = table[b][3];\n      if (control.useTransparent && b === control.transparentColor) {\n        img.samples[idx + 3] = 0;\n      }\n      if (++col >= img.width) {\n        col = 0;\n        if (img.ilace) {\n          row += interlacing[ilp][1];\n          if (row >= img.height) {\n            row = interlacing[++ilp][0];\n          }\n        } else {\n          row++;\n        }\n      }\n    }\n\n    img.pixels = [];\n    for (i = 0; i < img.samples.length; i += 4) {\n      img.pixels.push(img.samples.slice(i, i + 4));\n    }\n\n    img.bmp = [];\n    for (y = 0, p = 0; y < img.height; y++) {\n      line = [];\n      for (x = 0; x < img.width; x++) {\n        pixel = img.pixels[p++];\n        if (!pixel) {\n          if (options.debug) throw new Error('no pixel');\n          line.push({ r: 0, g: 0, b: 0, a: 0 });\n          continue;\n        }\n        line.push({ r: pixel[0], g: pixel[1], b: pixel[2], a: pixel[3] });\n      }\n      img.bmp.push(line);\n    }\n\n    return img;\n  }, this).filter(Boolean);\n\n  if (!this.images.length) {\n    throw new Error('no image data or bad decompress');\n  }\n}\n\n// Rewritten version of:\n// https://github.com/lbv/ka-cs-programs/blob/master/lib/gif-reader.js\nGIF.prototype.decompress = function(input, codeSize) {\n  var bitDepth = codeSize + 1\n    , CC = 1 << codeSize\n    , EOI = CC + 1\n    , stack = []\n    , table = []\n    , ntable = 0\n    , oldCode = null\n    , buffer = 0\n    , nbuffer = 0\n    , p = 0\n    , buf = []\n    , bits\n    , read\n    , ans\n    , n\n    , code\n    , i\n    , K\n    , b\n    , maxElem;\n\n  for (;;) {\n    if (stack.length === 0) {\n      bits = bitDepth;\n      read = 0;\n      ans = 0;\n      while (read < bits) {\n        if (nbuffer === 0) {\n          if (p >= input.length) return buf;\n          buffer = input[p++];\n          nbuffer = 8;\n        }\n        n = Math.min(bits - read, nbuffer);\n        ans |= (buffer & ((1 << n) - 1)) << read;\n        read += n;\n        nbuffer -= n;\n        buffer >>= n;\n      }\n      code = ans;\n\n      if (code === EOI) {\n        break;\n      }\n\n      if (code === CC) {\n        table = [];\n        for (i = 0; i < CC; ++i) {\n          table[i] = [i, -1, i];\n        }\n        bitDepth = codeSize + 1;\n        maxElem = 1 << bitDepth;\n        ntable = CC + 2;\n        oldCode = null;\n        continue;\n      }\n\n      if (oldCode === null) {\n        oldCode = code;\n        buf.push(table[code][0]);\n        continue;\n      }\n\n      if (code < ntable) {\n        for (i = code; i >= 0; i = table[i][1]) {\n          stack.push(table[i][0]);\n        }\n        table[ntable++] = [\n          table[code][2],\n          oldCode,\n          table[oldCode][2]\n        ];\n      } else {\n        K = table[oldCode][2];\n        table[ntable++] = [K, oldCode, K];\n        for (i = code; i >= 0; i = table[i][1]) {\n          stack.push(table[i][0]);\n        }\n      }\n\n      oldCode = code;\n      if (ntable === maxElem) {\n        maxElem = 1 << (++bitDepth);\n        if (bitDepth > 12) bitDepth = 12;\n      }\n    }\n    b = stack.pop();\n    if (b == null) break;\n    buf.push(b);\n  }\n\n  return buf;\n};\n\n/**\n * Expose\n */\n\nexports = PNG;\nexports.png = PNG;\nexports.gif = GIF;\n\nmodule.exports = exports;\n"]},"metadata":{},"sourceType":"script"}