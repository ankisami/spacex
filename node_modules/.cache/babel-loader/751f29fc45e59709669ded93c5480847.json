{"ast":null,"code":"'use strict';\n\nconst colors = require('ansi-colors');\n\nconst Prompt = require('../prompt');\n\nconst roles = require('../roles');\n\nconst utils = require('../utils');\n\nconst {\n  reorder,\n  scrollUp,\n  scrollDown,\n  isObject,\n  swap\n} = utils;\n\nclass ArrayPrompt extends Prompt {\n  constructor(options) {\n    super(options);\n    this.cursorHide();\n    this.maxSelected = options.maxSelected || Infinity;\n    this.multiple = options.multiple || false;\n    this.initial = options.initial || 0;\n    this.delay = options.delay || 0;\n    this.longest = 0;\n    this.num = '';\n  }\n\n  async initialize() {\n    if (typeof this.options.initial === 'function') {\n      this.initial = await this.options.initial.call(this);\n    }\n\n    await this.reset(true);\n    await super.initialize();\n  }\n\n  async reset() {\n    let {\n      choices,\n      initial,\n      autofocus,\n      suggest\n    } = this.options;\n    this.state._choices = [];\n    this.state.choices = [];\n    this.choices = await Promise.all(await this.toChoices(choices));\n    this.choices.forEach(ch => ch.enabled = false);\n\n    if (typeof suggest !== 'function' && this.selectable.length === 0) {\n      throw new Error('At least one choice must be selectable');\n    }\n\n    if (isObject(initial)) initial = Object.keys(initial);\n\n    if (Array.isArray(initial)) {\n      if (autofocus != null) this.index = this.findIndex(autofocus);\n      initial.forEach(v => this.enable(this.find(v)));\n      await this.render();\n    } else {\n      if (autofocus != null) initial = autofocus;\n      if (typeof initial === 'string') initial = this.findIndex(initial);\n\n      if (typeof initial === 'number' && initial > -1) {\n        this.index = Math.max(0, Math.min(initial, this.choices.length));\n        this.enable(this.find(this.index));\n      }\n    }\n\n    if (this.isDisabled(this.focused)) {\n      await this.down();\n    }\n  }\n\n  async toChoices(value, parent) {\n    this.state.loadingChoices = true;\n    let choices = [];\n    let index = 0;\n\n    let toChoices = async (items, parent) => {\n      if (typeof items === 'function') items = await items.call(this);\n      if (items instanceof Promise) items = await items;\n\n      for (let i = 0; i < items.length; i++) {\n        let choice = items[i] = await this.toChoice(items[i], index++, parent);\n        choices.push(choice);\n\n        if (choice.choices) {\n          await toChoices(choice.choices, choice);\n        }\n      }\n\n      return choices;\n    };\n\n    return toChoices(value, parent).then(choices => {\n      this.state.loadingChoices = false;\n      return choices;\n    });\n  }\n\n  async toChoice(ele, i, parent) {\n    if (typeof ele === 'function') ele = await ele.call(this, this);\n    if (ele instanceof Promise) ele = await ele;\n    if (typeof ele === 'string') ele = {\n      name: ele\n    };\n    if (ele.normalized) return ele;\n    ele.normalized = true;\n    let origVal = ele.value;\n    let role = roles(ele.role, this.options);\n    ele = role(this, ele);\n\n    if (typeof ele.disabled === 'string' && !ele.hint) {\n      ele.hint = ele.disabled;\n      ele.disabled = true;\n    }\n\n    if (ele.disabled === true && ele.hint == null) {\n      ele.hint = '(disabled)';\n    } // if the choice was already normalized, return it\n\n\n    if (ele.index != null) return ele;\n    ele.name = ele.name || ele.key || ele.title || ele.value || ele.message;\n    ele.message = ele.message || ele.name || '';\n    ele.value = [ele.value, ele.name].find(this.isValue.bind(this));\n    ele.input = '';\n    ele.index = i;\n    ele.cursor = 0;\n    utils.define(ele, 'parent', parent);\n    ele.level = parent ? parent.level + 1 : 1;\n\n    if (ele.indent == null) {\n      ele.indent = parent ? parent.indent + '  ' : ele.indent || '';\n    }\n\n    ele.path = parent ? parent.path + '.' + ele.name : ele.name;\n    ele.enabled = !!(this.multiple && !this.isDisabled(ele) && (ele.enabled || this.isSelected(ele)));\n\n    if (!this.isDisabled(ele)) {\n      this.longest = Math.max(this.longest, colors.unstyle(ele.message).length);\n    } // shallow clone the choice first\n\n\n    let choice = { ...ele\n    }; // then allow the choice to be reset using the \"original\" values\n\n    ele.reset = (input = choice.input, value = choice.value) => {\n      for (let key of Object.keys(choice)) ele[key] = choice[key];\n\n      ele.input = input;\n      ele.value = value;\n    };\n\n    if (origVal == null && typeof ele.initial === 'function') {\n      ele.input = await ele.initial.call(this, this.state, ele, i);\n    }\n\n    return ele;\n  }\n\n  async onChoice(choice, i) {\n    this.emit('choice', choice, i, this);\n\n    if (typeof choice.onChoice === 'function') {\n      await choice.onChoice.call(this, this.state, choice, i);\n    }\n  }\n\n  async addChoice(ele, i, parent) {\n    let choice = await this.toChoice(ele, i, parent);\n    this.choices.push(choice);\n    this.index = this.choices.length - 1;\n    this.limit = this.choices.length;\n    return choice;\n  }\n\n  async newItem(item, i, parent) {\n    let ele = {\n      name: 'New choice name?',\n      editable: true,\n      newChoice: true,\n      ...item\n    };\n    let choice = await this.addChoice(ele, i, parent);\n\n    choice.updateChoice = () => {\n      delete choice.newChoice;\n      choice.name = choice.message = choice.input;\n      choice.input = '';\n      choice.cursor = 0;\n    };\n\n    return this.render();\n  }\n\n  indent(choice) {\n    if (choice.indent == null) {\n      return choice.level > 1 ? '  '.repeat(choice.level - 1) : '';\n    }\n\n    return choice.indent;\n  }\n\n  dispatch(s, key) {\n    if (this.multiple && this[key.name]) return this[key.name]();\n    this.alert();\n  }\n\n  focus(choice, enabled) {\n    if (typeof enabled !== 'boolean') enabled = choice.enabled;\n\n    if (enabled && !choice.enabled && this.selected.length >= this.maxSelected) {\n      return this.alert();\n    }\n\n    this.index = choice.index;\n    choice.enabled = enabled && !this.isDisabled(choice);\n    return choice;\n  }\n\n  space() {\n    if (!this.multiple) return this.alert();\n    this.toggle(this.focused);\n    return this.render();\n  }\n\n  a() {\n    if (this.maxSelected < this.choices.length) return this.alert();\n    let enabled = this.selectable.every(ch => ch.enabled);\n    this.choices.forEach(ch => ch.enabled = !enabled);\n    return this.render();\n  }\n\n  i() {\n    // don't allow choices to be inverted if it will result in\n    // more than the maximum number of allowed selected items.\n    if (this.choices.length - this.selected.length > this.maxSelected) {\n      return this.alert();\n    }\n\n    this.choices.forEach(ch => ch.enabled = !ch.enabled);\n    return this.render();\n  }\n\n  g(choice = this.focused) {\n    if (!this.choices.some(ch => !!ch.parent)) return this.a();\n    this.toggle(choice.parent && !choice.choices ? choice.parent : choice);\n    return this.render();\n  }\n\n  toggle(choice, enabled) {\n    if (!choice.enabled && this.selected.length >= this.maxSelected) {\n      return this.alert();\n    }\n\n    if (typeof enabled !== 'boolean') enabled = !choice.enabled;\n    choice.enabled = enabled;\n\n    if (choice.choices) {\n      choice.choices.forEach(ch => this.toggle(ch, enabled));\n    }\n\n    let parent = choice.parent;\n\n    while (parent) {\n      let choices = parent.choices.filter(ch => this.isDisabled(ch));\n      parent.enabled = choices.every(ch => ch.enabled === true);\n      parent = parent.parent;\n    }\n\n    reset(this, this.choices);\n    this.emit('toggle', choice, this);\n    return choice;\n  }\n\n  enable(choice) {\n    if (this.selected.length >= this.maxSelected) return this.alert();\n    choice.enabled = !this.isDisabled(choice);\n    choice.choices && choice.choices.forEach(this.enable.bind(this));\n    return choice;\n  }\n\n  disable(choice) {\n    choice.enabled = false;\n    choice.choices && choice.choices.forEach(this.disable.bind(this));\n    return choice;\n  }\n\n  number(n) {\n    this.num += n;\n\n    let number = num => {\n      let i = Number(num);\n      if (i > this.choices.length - 1) return this.alert();\n      let focused = this.focused;\n      let choice = this.choices.find(ch => i === ch.index);\n\n      if (!choice.enabled && this.selected.length >= this.maxSelected) {\n        return this.alert();\n      }\n\n      if (this.visible.indexOf(choice) === -1) {\n        let choices = reorder(this.choices);\n        let actualIdx = choices.indexOf(choice);\n\n        if (focused.index > actualIdx) {\n          let start = choices.slice(actualIdx, actualIdx + this.limit);\n          let end = choices.filter(ch => !start.includes(ch));\n          this.choices = start.concat(end);\n        } else {\n          let pos = actualIdx - this.limit + 1;\n          this.choices = choices.slice(pos).concat(choices.slice(0, pos));\n        }\n      }\n\n      this.index = this.choices.indexOf(choice);\n      this.toggle(this.focused);\n      return this.render();\n    };\n\n    clearTimeout(this.numberTimeout);\n    return new Promise(resolve => {\n      let len = this.choices.length;\n      let num = this.num;\n\n      let handle = (val = false, res) => {\n        clearTimeout(this.numberTimeout);\n        if (val) res = number(num);\n        this.num = '';\n        resolve(res);\n      };\n\n      if (num === '0' || num.length === 1 && Number(num + '0') > len) {\n        return handle(true);\n      }\n\n      if (Number(num) > len) {\n        return handle(false, this.alert());\n      }\n\n      this.numberTimeout = setTimeout(() => handle(true), this.delay);\n    });\n  }\n\n  home() {\n    this.choices = reorder(this.choices);\n    this.index = 0;\n    return this.render();\n  }\n\n  end() {\n    let pos = this.choices.length - this.limit;\n    let choices = reorder(this.choices);\n    this.choices = choices.slice(pos).concat(choices.slice(0, pos));\n    this.index = this.limit - 1;\n    return this.render();\n  }\n\n  first() {\n    this.index = 0;\n    return this.render();\n  }\n\n  last() {\n    this.index = this.visible.length - 1;\n    return this.render();\n  }\n\n  prev() {\n    if (this.visible.length <= 1) return this.alert();\n    return this.up();\n  }\n\n  next() {\n    if (this.visible.length <= 1) return this.alert();\n    return this.down();\n  }\n\n  right() {\n    if (this.cursor >= this.input.length) return this.alert();\n    this.cursor++;\n    return this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0) return this.alert();\n    this.cursor--;\n    return this.render();\n  }\n\n  up() {\n    let len = this.choices.length;\n    let vis = this.visible.length;\n    let idx = this.index;\n\n    if (this.options.scroll === false && idx === 0) {\n      return this.alert();\n    }\n\n    if (len > vis && idx === 0) {\n      return this.scrollUp();\n    }\n\n    this.index = (idx - 1 % len + len) % len;\n\n    if (this.isDisabled()) {\n      return this.up();\n    }\n\n    return this.render();\n  }\n\n  down() {\n    let len = this.choices.length;\n    let vis = this.visible.length;\n    let idx = this.index;\n\n    if (this.options.scroll === false && idx === vis - 1) {\n      return this.alert();\n    }\n\n    if (len > vis && idx === vis - 1) {\n      return this.scrollDown();\n    }\n\n    this.index = (idx + 1) % len;\n\n    if (this.isDisabled()) {\n      return this.down();\n    }\n\n    return this.render();\n  }\n\n  scrollUp(i = 0) {\n    this.choices = scrollUp(this.choices);\n    this.index = i;\n\n    if (this.isDisabled()) {\n      return this.up();\n    }\n\n    return this.render();\n  }\n\n  scrollDown(i = this.visible.length - 1) {\n    this.choices = scrollDown(this.choices);\n    this.index = i;\n\n    if (this.isDisabled()) {\n      return this.down();\n    }\n\n    return this.render();\n  }\n\n  async shiftUp() {\n    if (this.options.sort === true) {\n      this.sorting = true;\n      this.swap(this.index - 1);\n      await this.up();\n      this.sorting = false;\n      return;\n    }\n\n    return this.scrollUp(this.index);\n  }\n\n  async shiftDown() {\n    if (this.options.sort === true) {\n      this.sorting = true;\n      this.swap(this.index + 1);\n      await this.down();\n      this.sorting = false;\n      return;\n    }\n\n    return this.scrollDown(this.index);\n  }\n\n  pageUp() {\n    if (this.visible.length <= 1) return this.alert();\n    this.limit = Math.max(this.limit - 1, 0);\n    this.index = Math.min(this.limit - 1, this.index);\n    this._limit = this.limit;\n\n    if (this.isDisabled()) {\n      return this.up();\n    }\n\n    return this.render();\n  }\n\n  pageDown() {\n    if (this.visible.length >= this.choices.length) return this.alert();\n    this.index = Math.max(0, this.index);\n    this.limit = Math.min(this.limit + 1, this.choices.length);\n    this._limit = this.limit;\n\n    if (this.isDisabled()) {\n      return this.down();\n    }\n\n    return this.render();\n  }\n\n  swap(pos) {\n    swap(this.choices, this.index, pos);\n  }\n\n  isDisabled(choice = this.focused) {\n    let keys = ['disabled', 'collapsed', 'hidden', 'completing', 'readonly'];\n\n    if (choice && keys.some(key => choice[key] === true)) {\n      return true;\n    }\n\n    return choice && choice.role === 'heading';\n  }\n\n  isEnabled(choice = this.focused) {\n    if (Array.isArray(choice)) return choice.every(ch => this.isEnabled(ch));\n\n    if (choice.choices) {\n      let choices = choice.choices.filter(ch => !this.isDisabled(ch));\n      return choice.enabled && choices.every(ch => this.isEnabled(ch));\n    }\n\n    return choice.enabled && !this.isDisabled(choice);\n  }\n\n  isChoice(choice, value) {\n    return choice.name === value || choice.index === Number(value);\n  }\n\n  isSelected(choice) {\n    if (Array.isArray(this.initial)) {\n      return this.initial.some(value => this.isChoice(choice, value));\n    }\n\n    return this.isChoice(choice, this.initial);\n  }\n\n  map(names = [], prop = 'value') {\n    return [].concat(names || []).reduce((acc, name) => {\n      acc[name] = this.find(name, prop);\n      return acc;\n    }, {});\n  }\n\n  filter(value, prop) {\n    let isChoice = (ele, i) => [ele.name, i].includes(value);\n\n    let fn = typeof value === 'function' ? value : isChoice;\n    let choices = this.options.multiple ? this.state._choices : this.choices;\n    let result = choices.filter(fn);\n\n    if (prop) {\n      return result.map(ch => ch[prop]);\n    }\n\n    return result;\n  }\n\n  find(value, prop) {\n    if (isObject(value)) return prop ? value[prop] : value;\n\n    let isChoice = (ele, i) => [ele.name, i].includes(value);\n\n    let fn = typeof value === 'function' ? value : isChoice;\n    let choice = this.choices.find(fn);\n\n    if (choice) {\n      return prop ? choice[prop] : choice;\n    }\n  }\n\n  findIndex(value) {\n    return this.choices.indexOf(this.find(value));\n  }\n\n  async submit() {\n    let choice = this.focused;\n    if (!choice) return this.alert();\n\n    if (choice.newChoice) {\n      if (!choice.input) return this.alert();\n      choice.updateChoice();\n      return this.render();\n    }\n\n    if (this.choices.some(ch => ch.newChoice)) {\n      return this.alert();\n    }\n\n    let {\n      reorder,\n      sort\n    } = this.options;\n    let multi = this.multiple === true;\n    let value = this.selected;\n\n    if (value === void 0) {\n      return this.alert();\n    } // re-sort choices to original order\n\n\n    if (Array.isArray(value) && reorder !== false && sort !== true) {\n      value = utils.reorder(value);\n    }\n\n    this.value = multi ? value.map(ch => ch.name) : value.name;\n    return super.submit();\n  }\n\n  set choices(choices = []) {\n    this.state._choices = this.state._choices || [];\n    this.state.choices = choices;\n\n    for (let choice of choices) {\n      if (!this.state._choices.some(ch => ch.name === choice.name)) {\n        this.state._choices.push(choice);\n      }\n    }\n\n    if (!this._initial && this.options.initial) {\n      this._initial = true;\n      let init = this.initial;\n\n      if (typeof init === 'string' || typeof init === 'number') {\n        let choice = this.find(init);\n\n        if (choice) {\n          this.initial = choice.index;\n          this.focus(choice, true);\n        }\n      }\n    }\n  }\n\n  get choices() {\n    return reset(this, this.state.choices || []);\n  }\n\n  set visible(visible) {\n    this.state.visible = visible;\n  }\n\n  get visible() {\n    return (this.state.visible || this.choices).slice(0, this.limit);\n  }\n\n  set limit(num) {\n    this.state.limit = num;\n  }\n\n  get limit() {\n    let {\n      state,\n      options,\n      choices\n    } = this;\n    let limit = state.limit || this._limit || options.limit || choices.length;\n    return Math.min(limit, this.height);\n  }\n\n  set value(value) {\n    super.value = value;\n  }\n\n  get value() {\n    if (typeof super.value !== 'string' && super.value === this.initial) {\n      return this.input;\n    }\n\n    return super.value;\n  }\n\n  set index(i) {\n    this.state.index = i;\n  }\n\n  get index() {\n    return Math.max(0, this.state ? this.state.index : 0);\n  }\n\n  get enabled() {\n    return this.filter(this.isEnabled.bind(this));\n  }\n\n  get focused() {\n    let choice = this.choices[this.index];\n\n    if (choice && this.state.submitted && this.multiple !== true) {\n      choice.enabled = true;\n    }\n\n    return choice;\n  }\n\n  get selectable() {\n    return this.choices.filter(choice => !this.isDisabled(choice));\n  }\n\n  get selected() {\n    return this.multiple ? this.enabled : this.focused;\n  }\n\n}\n\nfunction reset(prompt, choices) {\n  if (choices instanceof Promise) return choices;\n\n  if (typeof choices === 'function') {\n    if (utils.isAsyncFn(choices)) return choices;\n    choices = choices.call(prompt, prompt);\n  }\n\n  for (let choice of choices) {\n    if (Array.isArray(choice.choices)) {\n      let items = choice.choices.filter(ch => !prompt.isDisabled(ch));\n      choice.enabled = items.every(ch => ch.enabled === true);\n    }\n\n    if (prompt.isDisabled(choice) === true) {\n      delete choice.enabled;\n    }\n  }\n\n  return choices;\n}\n\nmodule.exports = ArrayPrompt;","map":{"version":3,"sources":["/Users/samianki/node_modules/enquirer/lib/types/array.js"],"names":["colors","require","Prompt","roles","utils","reorder","scrollUp","scrollDown","isObject","swap","ArrayPrompt","constructor","options","cursorHide","maxSelected","Infinity","multiple","initial","delay","longest","num","initialize","call","reset","choices","autofocus","suggest","state","_choices","Promise","all","toChoices","forEach","ch","enabled","selectable","length","Error","Object","keys","Array","isArray","index","findIndex","v","enable","find","render","Math","max","min","isDisabled","focused","down","value","parent","loadingChoices","items","i","choice","toChoice","push","then","ele","name","normalized","origVal","role","disabled","hint","key","title","message","isValue","bind","input","cursor","define","level","indent","path","isSelected","unstyle","onChoice","emit","addChoice","limit","newItem","item","editable","newChoice","updateChoice","repeat","dispatch","s","alert","focus","selected","space","toggle","a","every","g","some","filter","disable","number","n","Number","visible","indexOf","actualIdx","start","slice","end","includes","concat","pos","clearTimeout","numberTimeout","resolve","len","handle","val","res","setTimeout","home","first","last","prev","up","next","right","left","vis","idx","scroll","shiftUp","sort","sorting","shiftDown","pageUp","_limit","pageDown","isEnabled","isChoice","map","names","prop","reduce","acc","fn","result","submit","multi","_initial","init","height","submitted","prompt","isAsyncFn","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst colors = require('ansi-colors');\nconst Prompt = require('../prompt');\nconst roles = require('../roles');\nconst utils = require('../utils');\nconst { reorder, scrollUp, scrollDown, isObject, swap } = utils;\n\nclass ArrayPrompt extends Prompt {\n  constructor(options) {\n    super(options);\n    this.cursorHide();\n    this.maxSelected = options.maxSelected || Infinity;\n    this.multiple = options.multiple || false;\n    this.initial = options.initial || 0;\n    this.delay = options.delay || 0;\n    this.longest = 0;\n    this.num = '';\n  }\n\n  async initialize() {\n    if (typeof this.options.initial === 'function') {\n      this.initial = await this.options.initial.call(this);\n    }\n    await this.reset(true);\n    await super.initialize();\n  }\n\n  async reset() {\n    let { choices, initial, autofocus, suggest } = this.options;\n    this.state._choices = [];\n    this.state.choices = [];\n\n    this.choices = await Promise.all(await this.toChoices(choices));\n    this.choices.forEach(ch => (ch.enabled = false));\n\n    if (typeof suggest !== 'function' && this.selectable.length === 0) {\n      throw new Error('At least one choice must be selectable');\n    }\n\n    if (isObject(initial)) initial = Object.keys(initial);\n    if (Array.isArray(initial)) {\n      if (autofocus != null) this.index = this.findIndex(autofocus);\n      initial.forEach(v => this.enable(this.find(v)));\n      await this.render();\n    } else {\n      if (autofocus != null) initial = autofocus;\n      if (typeof initial === 'string') initial = this.findIndex(initial);\n      if (typeof initial === 'number' && initial > -1) {\n        this.index = Math.max(0, Math.min(initial, this.choices.length));\n        this.enable(this.find(this.index));\n      }\n    }\n\n    if (this.isDisabled(this.focused)) {\n      await this.down();\n    }\n  }\n\n  async toChoices(value, parent) {\n    this.state.loadingChoices = true;\n    let choices = [];\n    let index = 0;\n\n    let toChoices = async(items, parent) => {\n      if (typeof items === 'function') items = await items.call(this);\n      if (items instanceof Promise) items = await items;\n\n      for (let i = 0; i < items.length; i++) {\n        let choice = items[i] = await this.toChoice(items[i], index++, parent);\n        choices.push(choice);\n\n        if (choice.choices) {\n          await toChoices(choice.choices, choice);\n        }\n      }\n      return choices;\n    };\n\n    return toChoices(value, parent)\n      .then(choices => {\n        this.state.loadingChoices = false;\n        return choices;\n      });\n  }\n\n  async toChoice(ele, i, parent) {\n    if (typeof ele === 'function') ele = await ele.call(this, this);\n    if (ele instanceof Promise) ele = await ele;\n    if (typeof ele === 'string') ele = { name: ele };\n\n    if (ele.normalized) return ele;\n    ele.normalized = true;\n\n    let origVal = ele.value;\n    let role = roles(ele.role, this.options);\n    ele = role(this, ele);\n\n    if (typeof ele.disabled === 'string' && !ele.hint) {\n      ele.hint = ele.disabled;\n      ele.disabled = true;\n    }\n\n    if (ele.disabled === true && ele.hint == null) {\n      ele.hint = '(disabled)';\n    }\n\n    // if the choice was already normalized, return it\n    if (ele.index != null) return ele;\n    ele.name = ele.name || ele.key || ele.title || ele.value || ele.message;\n    ele.message = ele.message || ele.name || '';\n    ele.value = [ele.value, ele.name].find(this.isValue.bind(this));\n\n    ele.input = '';\n    ele.index = i;\n    ele.cursor = 0;\n\n    utils.define(ele, 'parent', parent);\n    ele.level = parent ? parent.level + 1 : 1;\n    if (ele.indent == null) {\n      ele.indent = parent ? parent.indent + '  ' : (ele.indent || '');\n    }\n\n    ele.path = parent ? parent.path + '.' + ele.name : ele.name;\n    ele.enabled = !!(this.multiple && !this.isDisabled(ele) && (ele.enabled || this.isSelected(ele)));\n\n    if (!this.isDisabled(ele)) {\n      this.longest = Math.max(this.longest, colors.unstyle(ele.message).length);\n    }\n\n    // shallow clone the choice first\n    let choice = { ...ele };\n\n    // then allow the choice to be reset using the \"original\" values\n    ele.reset = (input = choice.input, value = choice.value) => {\n      for (let key of Object.keys(choice)) ele[key] = choice[key];\n      ele.input = input;\n      ele.value = value;\n    };\n\n    if (origVal == null && typeof ele.initial === 'function') {\n      ele.input = await ele.initial.call(this, this.state, ele, i);\n    }\n\n    return ele;\n  }\n\n  async onChoice(choice, i) {\n    this.emit('choice', choice, i, this);\n\n    if (typeof choice.onChoice === 'function') {\n      await choice.onChoice.call(this, this.state, choice, i);\n    }\n  }\n\n  async addChoice(ele, i, parent) {\n    let choice = await this.toChoice(ele, i, parent);\n    this.choices.push(choice);\n    this.index = this.choices.length - 1;\n    this.limit = this.choices.length;\n    return choice;\n  }\n\n  async newItem(item, i, parent) {\n    let ele = { name: 'New choice name?', editable: true, newChoice: true, ...item };\n    let choice = await this.addChoice(ele, i, parent);\n\n    choice.updateChoice = () => {\n      delete choice.newChoice;\n      choice.name = choice.message = choice.input;\n      choice.input = '';\n      choice.cursor = 0;\n    };\n\n    return this.render();\n  }\n\n  indent(choice) {\n    if (choice.indent == null) {\n      return choice.level > 1 ? '  '.repeat(choice.level - 1) : '';\n    }\n    return choice.indent;\n  }\n\n  dispatch(s, key) {\n    if (this.multiple && this[key.name]) return this[key.name]();\n    this.alert();\n  }\n\n  focus(choice, enabled) {\n    if (typeof enabled !== 'boolean') enabled = choice.enabled;\n    if (enabled && !choice.enabled && this.selected.length >= this.maxSelected) {\n      return this.alert();\n    }\n    this.index = choice.index;\n    choice.enabled = enabled && !this.isDisabled(choice);\n    return choice;\n  }\n\n  space() {\n    if (!this.multiple) return this.alert();\n    this.toggle(this.focused);\n    return this.render();\n  }\n\n  a() {\n    if (this.maxSelected < this.choices.length) return this.alert();\n    let enabled = this.selectable.every(ch => ch.enabled);\n    this.choices.forEach(ch => (ch.enabled = !enabled));\n    return this.render();\n  }\n\n  i() {\n    // don't allow choices to be inverted if it will result in\n    // more than the maximum number of allowed selected items.\n    if (this.choices.length - this.selected.length > this.maxSelected) {\n      return this.alert();\n    }\n    this.choices.forEach(ch => (ch.enabled = !ch.enabled));\n    return this.render();\n  }\n\n  g(choice = this.focused) {\n    if (!this.choices.some(ch => !!ch.parent)) return this.a();\n    this.toggle((choice.parent && !choice.choices) ? choice.parent : choice);\n    return this.render();\n  }\n\n  toggle(choice, enabled) {\n    if (!choice.enabled && this.selected.length >= this.maxSelected) {\n      return this.alert();\n    }\n\n    if (typeof enabled !== 'boolean') enabled = !choice.enabled;\n    choice.enabled = enabled;\n\n    if (choice.choices) {\n      choice.choices.forEach(ch => this.toggle(ch, enabled));\n    }\n\n    let parent = choice.parent;\n    while (parent) {\n      let choices = parent.choices.filter(ch => this.isDisabled(ch));\n      parent.enabled = choices.every(ch => ch.enabled === true);\n      parent = parent.parent;\n    }\n\n    reset(this, this.choices);\n    this.emit('toggle', choice, this);\n    return choice;\n  }\n\n  enable(choice) {\n    if (this.selected.length >= this.maxSelected) return this.alert();\n    choice.enabled = !this.isDisabled(choice);\n    choice.choices && choice.choices.forEach(this.enable.bind(this));\n    return choice;\n  }\n\n  disable(choice) {\n    choice.enabled = false;\n    choice.choices && choice.choices.forEach(this.disable.bind(this));\n    return choice;\n  }\n\n  number(n) {\n    this.num += n;\n\n    let number = num => {\n      let i = Number(num);\n      if (i > this.choices.length - 1) return this.alert();\n\n      let focused = this.focused;\n      let choice = this.choices.find(ch => i === ch.index);\n\n      if (!choice.enabled && this.selected.length >= this.maxSelected) {\n        return this.alert();\n      }\n\n      if (this.visible.indexOf(choice) === -1) {\n        let choices = reorder(this.choices);\n        let actualIdx = choices.indexOf(choice);\n\n        if (focused.index > actualIdx) {\n          let start = choices.slice(actualIdx, actualIdx + this.limit);\n          let end = choices.filter(ch => !start.includes(ch));\n          this.choices = start.concat(end);\n        } else {\n          let pos = actualIdx - this.limit + 1;\n          this.choices = choices.slice(pos).concat(choices.slice(0, pos));\n        }\n      }\n\n      this.index = this.choices.indexOf(choice);\n      this.toggle(this.focused);\n      return this.render();\n    };\n\n    clearTimeout(this.numberTimeout);\n\n    return new Promise(resolve => {\n      let len = this.choices.length;\n      let num = this.num;\n\n      let handle = (val = false, res) => {\n        clearTimeout(this.numberTimeout);\n        if (val) res = number(num);\n        this.num = '';\n        resolve(res);\n      };\n\n      if (num === '0' || (num.length === 1 && Number(num + '0') > len)) {\n        return handle(true);\n      }\n\n      if (Number(num) > len) {\n        return handle(false, this.alert());\n      }\n\n      this.numberTimeout = setTimeout(() => handle(true), this.delay);\n    });\n  }\n\n  home() {\n    this.choices = reorder(this.choices);\n    this.index = 0;\n    return this.render();\n  }\n\n  end() {\n    let pos = this.choices.length - this.limit;\n    let choices = reorder(this.choices);\n    this.choices = choices.slice(pos).concat(choices.slice(0, pos));\n    this.index = this.limit - 1;\n    return this.render();\n  }\n\n  first() {\n    this.index = 0;\n    return this.render();\n  }\n\n  last() {\n    this.index = this.visible.length - 1;\n    return this.render();\n  }\n\n  prev() {\n    if (this.visible.length <= 1) return this.alert();\n    return this.up();\n  }\n\n  next() {\n    if (this.visible.length <= 1) return this.alert();\n    return this.down();\n  }\n\n  right() {\n    if (this.cursor >= this.input.length) return this.alert();\n    this.cursor++;\n    return this.render();\n  }\n\n  left() {\n    if (this.cursor <= 0) return this.alert();\n    this.cursor--;\n    return this.render();\n  }\n\n  up() {\n    let len = this.choices.length;\n    let vis = this.visible.length;\n    let idx = this.index;\n    if (this.options.scroll === false && idx === 0) {\n      return this.alert();\n    }\n    if (len > vis && idx === 0) {\n      return this.scrollUp();\n    }\n    this.index = ((idx - 1 % len) + len) % len;\n    if (this.isDisabled()) {\n      return this.up();\n    }\n    return this.render();\n  }\n\n  down() {\n    let len = this.choices.length;\n    let vis = this.visible.length;\n    let idx = this.index;\n    if (this.options.scroll === false && idx === vis - 1) {\n      return this.alert();\n    }\n    if (len > vis && idx === vis - 1) {\n      return this.scrollDown();\n    }\n    this.index = (idx + 1) % len;\n    if (this.isDisabled()) {\n      return this.down();\n    }\n    return this.render();\n  }\n\n  scrollUp(i = 0) {\n    this.choices = scrollUp(this.choices);\n    this.index = i;\n    if (this.isDisabled()) {\n      return this.up();\n    }\n    return this.render();\n  }\n\n  scrollDown(i = this.visible.length - 1) {\n    this.choices = scrollDown(this.choices);\n    this.index = i;\n    if (this.isDisabled()) {\n      return this.down();\n    }\n    return this.render();\n  }\n\n  async shiftUp() {\n    if (this.options.sort === true) {\n      this.sorting = true;\n      this.swap(this.index - 1);\n      await this.up();\n      this.sorting = false;\n      return;\n    }\n    return this.scrollUp(this.index);\n  }\n\n  async shiftDown() {\n    if (this.options.sort === true) {\n      this.sorting = true;\n      this.swap(this.index + 1);\n      await this.down();\n      this.sorting = false;\n      return;\n    }\n    return this.scrollDown(this.index);\n  }\n\n  pageUp() {\n    if (this.visible.length <= 1) return this.alert();\n    this.limit = Math.max(this.limit - 1, 0);\n    this.index = Math.min(this.limit - 1, this.index);\n    this._limit = this.limit;\n    if (this.isDisabled()) {\n      return this.up();\n    }\n    return this.render();\n  }\n\n  pageDown() {\n    if (this.visible.length >= this.choices.length) return this.alert();\n    this.index = Math.max(0, this.index);\n    this.limit = Math.min(this.limit + 1, this.choices.length);\n    this._limit = this.limit;\n    if (this.isDisabled()) {\n      return this.down();\n    }\n    return this.render();\n  }\n\n  swap(pos) {\n    swap(this.choices, this.index, pos);\n  }\n\n  isDisabled(choice = this.focused) {\n    let keys = ['disabled', 'collapsed', 'hidden', 'completing', 'readonly'];\n    if (choice && keys.some(key => choice[key] === true)) {\n      return true;\n    }\n    return choice && choice.role === 'heading';\n  }\n\n  isEnabled(choice = this.focused) {\n    if (Array.isArray(choice)) return choice.every(ch => this.isEnabled(ch));\n    if (choice.choices) {\n      let choices = choice.choices.filter(ch => !this.isDisabled(ch));\n      return choice.enabled && choices.every(ch => this.isEnabled(ch));\n    }\n    return choice.enabled && !this.isDisabled(choice);\n  }\n\n  isChoice(choice, value) {\n    return choice.name === value || choice.index === Number(value);\n  }\n\n  isSelected(choice) {\n    if (Array.isArray(this.initial)) {\n      return this.initial.some(value => this.isChoice(choice, value));\n    }\n    return this.isChoice(choice, this.initial);\n  }\n\n  map(names = [], prop = 'value') {\n    return [].concat(names || []).reduce((acc, name) => {\n      acc[name] = this.find(name, prop);\n      return acc;\n    }, {});\n  }\n\n  filter(value, prop) {\n    let isChoice = (ele, i) => [ele.name, i].includes(value);\n    let fn = typeof value === 'function' ? value : isChoice;\n    let choices = this.options.multiple ? this.state._choices : this.choices;\n    let result = choices.filter(fn);\n    if (prop) {\n      return result.map(ch => ch[prop]);\n    }\n    return result;\n  }\n\n  find(value, prop) {\n    if (isObject(value)) return prop ? value[prop] : value;\n    let isChoice = (ele, i) => [ele.name, i].includes(value);\n    let fn = typeof value === 'function' ? value : isChoice;\n    let choice = this.choices.find(fn);\n    if (choice) {\n      return prop ? choice[prop] : choice;\n    }\n  }\n\n  findIndex(value) {\n    return this.choices.indexOf(this.find(value));\n  }\n\n  async submit() {\n    let choice = this.focused;\n    if (!choice) return this.alert();\n\n    if (choice.newChoice) {\n      if (!choice.input) return this.alert();\n      choice.updateChoice();\n      return this.render();\n    }\n\n    if (this.choices.some(ch => ch.newChoice)) {\n      return this.alert();\n    }\n\n    let { reorder, sort } = this.options;\n    let multi = this.multiple === true;\n    let value = this.selected;\n    if (value === void 0) {\n      return this.alert();\n    }\n\n    // re-sort choices to original order\n    if (Array.isArray(value) && reorder !== false && sort !== true) {\n      value = utils.reorder(value);\n    }\n\n    this.value = multi ? value.map(ch => ch.name) : value.name;\n    return super.submit();\n  }\n\n  set choices(choices = []) {\n    this.state._choices = this.state._choices || [];\n    this.state.choices = choices;\n\n    for (let choice of choices) {\n      if (!this.state._choices.some(ch => ch.name === choice.name)) {\n        this.state._choices.push(choice);\n      }\n    }\n\n    if (!this._initial && this.options.initial) {\n      this._initial = true;\n      let init = this.initial;\n      if (typeof init === 'string' || typeof init === 'number') {\n        let choice = this.find(init);\n        if (choice) {\n          this.initial = choice.index;\n          this.focus(choice, true);\n        }\n      }\n    }\n  }\n  get choices() {\n    return reset(this, this.state.choices || []);\n  }\n\n  set visible(visible) {\n    this.state.visible = visible;\n  }\n  get visible() {\n    return (this.state.visible || this.choices).slice(0, this.limit);\n  }\n\n  set limit(num) {\n    this.state.limit = num;\n  }\n  get limit() {\n    let { state, options, choices } = this;\n    let limit = state.limit || this._limit || options.limit || choices.length;\n    return Math.min(limit, this.height);\n  }\n\n  set value(value) {\n    super.value = value;\n  }\n  get value() {\n    if (typeof super.value !== 'string' && super.value === this.initial) {\n      return this.input;\n    }\n    return super.value;\n  }\n\n  set index(i) {\n    this.state.index = i;\n  }\n  get index() {\n    return Math.max(0, this.state ? this.state.index : 0);\n  }\n\n  get enabled() {\n    return this.filter(this.isEnabled.bind(this));\n  }\n\n  get focused() {\n    let choice = this.choices[this.index];\n    if (choice && this.state.submitted && this.multiple !== true) {\n      choice.enabled = true;\n    }\n    return choice;\n  }\n\n  get selectable() {\n    return this.choices.filter(choice => !this.isDisabled(choice));\n  }\n\n  get selected() {\n    return this.multiple ? this.enabled : this.focused;\n  }\n}\n\nfunction reset(prompt, choices) {\n  if (choices instanceof Promise) return choices;\n  if (typeof choices === 'function') {\n    if (utils.isAsyncFn(choices)) return choices;\n    choices = choices.call(prompt, prompt);\n  }\n  for (let choice of choices) {\n    if (Array.isArray(choice.choices)) {\n      let items = choice.choices.filter(ch => !prompt.isDisabled(ch));\n      choice.enabled = items.every(ch => ch.enabled === true);\n    }\n    if (prompt.isDisabled(choice) === true) {\n      delete choice.enabled;\n    }\n  }\n  return choices;\n}\n\nmodule.exports = ArrayPrompt;\n"]},"metadata":{},"sourceType":"script"}