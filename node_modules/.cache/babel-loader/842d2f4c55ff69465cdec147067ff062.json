{"ast":null,"code":"/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\n\n/**\n * Common Utilities ONLY USED IN ->DAEMON<-\n */\nvar fclone = require('fclone');\n\nvar fs = require('fs');\n\nvar cst = require('../constants.js');\n\nvar waterfall = require('async/waterfall');\n\nvar util = require('util');\n\nvar url = require('url');\n\nvar dayjs = require('dayjs');\n\nvar findPackageJson = require('./tools/find-package-json');\n\nvar Utility = module.exports = {\n  findPackageVersion: function (fullpath) {\n    var version;\n\n    try {\n      version = findPackageJson(fullpath).next().value.version;\n    } catch (e) {\n      version = 'N/A';\n    }\n\n    return version;\n  },\n  getDate: function () {\n    return Date.now();\n  },\n  extendExtraConfig: function (proc, opts) {\n    if (opts.env && opts.env.current_conf) {\n      if (opts.env.current_conf.env && typeof opts.env.current_conf.env === 'object' && Object.keys(opts.env.current_conf.env).length === 0) delete opts.env.current_conf.env;\n      Utility.extendMix(proc.pm2_env, opts.env.current_conf);\n      delete opts.env.current_conf;\n    }\n  },\n  formatCLU: function (process) {\n    if (!process.pm2_env) {\n      return process;\n    }\n\n    var obj = Utility.clone(process.pm2_env);\n    delete obj.env;\n    return obj;\n  },\n  extend: function (destination, source) {\n    if (!source || typeof source != 'object') return destination;\n    Object.keys(source).forEach(function (new_key) {\n      if (source[new_key] != '[object Object]') destination[new_key] = source[new_key];\n    });\n    return destination;\n  },\n  // Same as extend but drop value with 'null'\n  extendMix: function (destination, source) {\n    if (!source || typeof source != 'object') return destination;\n    Object.keys(source).forEach(function (new_key) {\n      if (source[new_key] == 'null') delete destination[new_key];else destination[new_key] = source[new_key];\n    });\n    return destination;\n  },\n  whichFileExists: function (file_arr) {\n    var f = null;\n    file_arr.some(function (file) {\n      try {\n        fs.statSync(file);\n      } catch (e) {\n        return false;\n      }\n\n      f = file;\n      return true;\n    });\n    return f;\n  },\n  clone: function (obj) {\n    if (obj === null || obj === undefined) return {};\n    return fclone(obj);\n  },\n  overrideConsole: function (bus) {\n    if (cst.PM2_LOG_DATE_FORMAT && typeof cst.PM2_LOG_DATE_FORMAT == 'string') {\n      // Generate timestamp prefix\n      function timestamp() {\n        return `${dayjs(Date.now()).format('YYYY-MM-DDTHH:mm:ss')}:`;\n      }\n\n      var hacks = ['info', 'log', 'error', 'warn'],\n          consoled = {}; // store console functions.\n\n      hacks.forEach(function (method) {\n        consoled[method] = console[method];\n      });\n      hacks.forEach(function (k) {\n        console[k] = function () {\n          if (bus) {\n            bus.emit('log:PM2', {\n              process: {\n                pm_id: 'PM2',\n                name: 'PM2',\n                rev: null\n              },\n              at: Utility.getDate(),\n              data: util.format.apply(this, arguments) + '\\n'\n            });\n          } // do not destroy variable insertion\n\n\n          arguments[0] && (arguments[0] = timestamp() + ' PM2 ' + k + ': ' + arguments[0]);\n          consoled[k].apply(console, arguments);\n        };\n      });\n    }\n  },\n  startLogging: function (stds, callback) {\n    /**\n     * Start log outgoing messages\n     * @method startLogging\n     * @param {} callback\n     * @return\n     */\n    // Make sure directories of `logs` and `pids` exist.\n    // try {\n    //   ['logs', 'pids'].forEach(function(n){\n    //     console.log(n);\n    //     (function(_path){\n    //       !fs.existsSync(_path) && fs.mkdirSync(_path, '0755');\n    //     })(path.resolve(cst.PM2_ROOT_PATH, n));\n    //   });\n    // } catch(err) {\n    //   return callback(new Error('can not create directories (logs/pids):' + err.message));\n    // }\n    // waterfall.\n    var flows = []; // types of stdio, should be sorted as `std(entire log)`, `out`, `err`.\n\n    var types = Object.keys(stds).sort(function (x, y) {\n      return -x.charCodeAt(0) + y.charCodeAt(0);\n    }); // Create write streams.\n\n    (function createWS(io) {\n      if (io.length != 1) {\n        return false;\n      }\n\n      io = io[0]; // If `std` is a Stream type, try next `std`.\n      // compatible with `pm2 reloadLogs`\n\n      if (typeof stds[io] == 'object' && !isNaN(stds[io].fd)) {\n        return createWS(types.splice(0, 1));\n      }\n\n      flows.push(function (next) {\n        var file = stds[io]; // if file contains ERR or /dev/null, dont try to create stream since he dont want logs\n\n        if (!file || file.indexOf('NULL') > -1 || file.indexOf('/dev/null') > -1) return next();\n        stds[io] = fs.createWriteStream(file, {\n          flags: 'a'\n        }).once('error', next).on('open', function () {\n          stds[io].removeListener('error', next);\n          stds[io].on('error', function (err) {\n            console.error(err);\n          });\n          next();\n        });\n        stds[io]._file = file;\n      });\n      return createWS(types.splice(0, 1));\n    })(types.splice(0, 1));\n\n    waterfall(flows, callback);\n  },\n\n  /**\n   * Function parse the module name and returns it as canonic:\n   * - Makes the name based on installation filename.\n   * - Removes the Github author, module version and git branch from original name.\n   *\n   * @param {string} module_name\n   * @returns {string} Canonic module name (without trimed parts).\n   * @example Always returns 'pm2-slack' for inputs 'ma-zal/pm2-slack', 'ma-zal/pm2-slack#own-branch',\n   *          'pm2-slack-1.0.0.tgz' or 'pm2-slack@1.0.0'.\n   */\n  getCanonicModuleName: function (module_name) {\n    if (typeof module_name !== 'string') return null;\n    var canonic_module_name = module_name; // Returns the module name from a .tgz package name (or the original name if it is not a valid pkg).\n    // Input: The package name (e.g. \"foo.tgz\", \"foo-1.0.0.tgz\", \"folder/foo.tgz\")\n    // Output: The module name\n\n    if (canonic_module_name.match(/\\.tgz($|\\?)/)) {\n      if (canonic_module_name.match(/^(.+\\/)?([^\\/]+)\\.tgz($|\\?)/)) {\n        canonic_module_name = canonic_module_name.match(/^(.+\\/)?([^\\/]+)\\.tgz($|\\?)/)[2];\n\n        if (canonic_module_name.match(/^(.+)-[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9_]+\\.[0-9]+)?$/)) {\n          canonic_module_name = canonic_module_name.match(/^(.+)-[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9_]+\\.[0-9]+)?$/)[1];\n        }\n      }\n    } //pm2 install git+https://github.com/user/module\n\n\n    if (canonic_module_name.indexOf('git+') !== -1) {\n      canonic_module_name = canonic_module_name.split('/').pop();\n    } //pm2 install https://github.com/user/module\n\n\n    if (canonic_module_name.indexOf('http') !== -1) {\n      var uri = url.parse(canonic_module_name);\n      canonic_module_name = uri.pathname.split('/').pop();\n    } //pm2 install file:///home/user/module\n    else if (canonic_module_name.indexOf('file://') === 0) {\n        canonic_module_name = canonic_module_name.replace(/\\/$/, '').split('/').pop();\n      } //pm2 install username/module\n      else if (canonic_module_name.indexOf('/') !== -1) {\n          if (canonic_module_name.charAt(0) !== \"@\") {\n            canonic_module_name = canonic_module_name.split('/')[1];\n          }\n        } //pm2 install @somescope/module@2.1.0-beta\n\n\n    if (canonic_module_name.lastIndexOf('@') > 0) {\n      canonic_module_name = canonic_module_name.substr(0, canonic_module_name.lastIndexOf(\"@\"));\n    } //pm2 install module#some-branch\n\n\n    if (canonic_module_name.indexOf('#') !== -1) {\n      canonic_module_name = canonic_module_name.split('#')[0];\n    }\n\n    if (canonic_module_name.indexOf('.git') !== -1) {\n      canonic_module_name = canonic_module_name.replace('.git', '');\n    }\n\n    return canonic_module_name;\n  },\n  checkPathIsNull: function (path) {\n    return path === 'NULL' || path === '/dev/null' || path === '\\\\\\\\.\\\\NUL';\n  },\n  generateUUID: function () {\n    var s = [];\n    var hexDigits = \"0123456789abcdef\";\n\n    for (var i = 0; i < 36; i++) {\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n\n    s[14] = \"4\";\n    s[19] = hexDigits.substr(s[19] & 0x3 | 0x8, 1);\n    s[8] = s[13] = s[18] = s[23] = \"-\";\n    return s.join(\"\");\n  }\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/Utility.js"],"names":["fclone","require","fs","cst","waterfall","util","url","dayjs","findPackageJson","Utility","module","exports","findPackageVersion","fullpath","version","next","value","e","getDate","Date","now","extendExtraConfig","proc","opts","env","current_conf","Object","keys","length","extendMix","pm2_env","formatCLU","process","obj","clone","extend","destination","source","forEach","new_key","whichFileExists","file_arr","f","some","file","statSync","undefined","overrideConsole","bus","PM2_LOG_DATE_FORMAT","timestamp","format","hacks","consoled","method","console","k","emit","pm_id","name","rev","at","data","apply","arguments","startLogging","stds","callback","flows","types","sort","x","y","charCodeAt","createWS","io","isNaN","fd","splice","push","indexOf","createWriteStream","flags","once","on","removeListener","err","error","_file","getCanonicModuleName","module_name","canonic_module_name","match","split","pop","uri","parse","pathname","replace","charAt","lastIndexOf","substr","checkPathIsNull","path","generateUUID","s","hexDigits","i","Math","floor","random","join"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,MAAM,GAAMC,OAAO,CAAC,QAAD,CAAvB;;AACA,IAAIC,EAAE,GAAUD,OAAO,CAAC,IAAD,CAAvB;;AACA,IAAIE,GAAG,GAASF,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAII,IAAI,GAAQJ,OAAO,CAAC,MAAD,CAAvB;;AACA,IAAIK,GAAG,GAASL,OAAO,CAAC,KAAD,CAAvB;;AACA,IAAIM,KAAK,GAAON,OAAO,CAAC,OAAD,CAAvB;;AACA,IAAIO,eAAe,GAAGP,OAAO,CAAC,2BAAD,CAA7B;;AAEA,IAAIQ,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB;AAC7BC,EAAAA,kBAAkB,EAAG,UAASC,QAAT,EAAmB;AACtC,QAAIC,OAAJ;;AAEA,QAAI;AACFA,MAAAA,OAAO,GAAGN,eAAe,CAACK,QAAD,CAAf,CAA0BE,IAA1B,GAAiCC,KAAjC,CAAuCF,OAAjD;AACD,KAFD,CAEE,OAAMG,CAAN,EAAS;AACTH,MAAAA,OAAO,GAAG,KAAV;AACD;;AACD,WAAOA,OAAP;AACD,GAV4B;AAW7BI,EAAAA,OAAO,EAAG,YAAW;AACnB,WAAOC,IAAI,CAACC,GAAL,EAAP;AACD,GAb4B;AAc7BC,EAAAA,iBAAiB,EAAG,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACvC,QAAIA,IAAI,CAACC,GAAL,IAAYD,IAAI,CAACC,GAAL,CAASC,YAAzB,EAAuC;AACrC,UAAIF,IAAI,CAACC,GAAL,CAASC,YAAT,CAAsBD,GAAtB,IACA,OAAOD,IAAI,CAACC,GAAL,CAASC,YAAT,CAAsBD,GAA7B,KAAsC,QADtC,IAEAE,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACC,GAAL,CAASC,YAAT,CAAsBD,GAAlC,EAAuCI,MAAvC,KAAkD,CAFtD,EAGE,OAAOL,IAAI,CAACC,GAAL,CAASC,YAAT,CAAsBD,GAA7B;AAEFf,MAAAA,OAAO,CAACoB,SAAR,CAAkBP,IAAI,CAACQ,OAAvB,EAAgCP,IAAI,CAACC,GAAL,CAASC,YAAzC;AACA,aAAOF,IAAI,CAACC,GAAL,CAASC,YAAhB;AACD;AACF,GAxB4B;AAyB7BM,EAAAA,SAAS,EAAG,UAASC,OAAT,EAAkB;AAC5B,QAAI,CAACA,OAAO,CAACF,OAAb,EAAsB;AACpB,aAAOE,OAAP;AACD;;AAED,QAAIC,GAAG,GAAGxB,OAAO,CAACyB,KAAR,CAAcF,OAAO,CAACF,OAAtB,CAAV;AACA,WAAOG,GAAG,CAACT,GAAX;AAEA,WAAOS,GAAP;AACD,GAlC4B;AAmC7BE,EAAAA,MAAM,EAAG,UAASC,WAAT,EAAsBC,MAAtB,EAA6B;AACpC,QAAI,CAACA,MAAD,IAAW,OAAOA,MAAP,IAAiB,QAAhC,EAA0C,OAAOD,WAAP;AAExCV,IAAAA,MAAM,CAACC,IAAP,CAAYU,MAAZ,EAAoBC,OAApB,CAA4B,UAASC,OAAT,EAAkB;AAC5C,UAAIF,MAAM,CAACE,OAAD,CAAN,IAAmB,iBAAvB,EACEH,WAAW,CAACG,OAAD,CAAX,GAAuBF,MAAM,CAACE,OAAD,CAA7B;AACH,KAHD;AAKF,WAAOH,WAAP;AACD,GA5C4B;AA6C7B;AACAP,EAAAA,SAAS,EAAG,UAASO,WAAT,EAAsBC,MAAtB,EAA6B;AACvC,QAAI,CAACA,MAAD,IAAW,OAAOA,MAAP,IAAiB,QAAhC,EAA0C,OAAOD,WAAP;AAE1CV,IAAAA,MAAM,CAACC,IAAP,CAAYU,MAAZ,EAAoBC,OAApB,CAA4B,UAASC,OAAT,EAAkB;AAC5C,UAAIF,MAAM,CAACE,OAAD,CAAN,IAAmB,MAAvB,EACE,OAAOH,WAAW,CAACG,OAAD,CAAlB,CADF,KAGEH,WAAW,CAACG,OAAD,CAAX,GAAuBF,MAAM,CAACE,OAAD,CAA7B;AACH,KALD;AAOA,WAAOH,WAAP;AACD,GAzD4B;AA2D7BI,EAAAA,eAAe,EAAG,UAASC,QAAT,EAAmB;AACnC,QAAIC,CAAC,GAAG,IAAR;AAEAD,IAAAA,QAAQ,CAACE,IAAT,CAAc,UAASC,IAAT,EAAe;AAC3B,UAAI;AACF1C,QAAAA,EAAE,CAAC2C,QAAH,CAAYD,IAAZ;AACD,OAFD,CAEE,OAAM3B,CAAN,EAAS;AACT,eAAO,KAAP;AACD;;AACDyB,MAAAA,CAAC,GAAGE,IAAJ;AACA,aAAO,IAAP;AACD,KARD;AASA,WAAOF,CAAP;AACD,GAxE4B;AAyE7BR,EAAAA,KAAK,EAAO,UAASD,GAAT,EAAc;AACxB,QAAIA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKa,SAA5B,EAAuC,OAAO,EAAP;AACvC,WAAO9C,MAAM,CAACiC,GAAD,CAAb;AACD,GA5E4B;AA6E7Bc,EAAAA,eAAe,EAAG,UAASC,GAAT,EAAc;AAC9B,QAAI7C,GAAG,CAAC8C,mBAAJ,IAA2B,OAAO9C,GAAG,CAAC8C,mBAAX,IAAkC,QAAjE,EAA2E;AACzE;AACA,eAASC,SAAT,GAAoB;AAClB,eAAQ,GAAE3C,KAAK,CAACY,IAAI,CAACC,GAAL,EAAD,CAAL,CAAkB+B,MAAlB,CAAyB,qBAAzB,CAAgD,GAA1D;AACD;;AAED,UAAIC,KAAK,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,MAAzB,CAAZ;AAAA,UAA8CC,QAAQ,GAAG,EAAzD,CANyE,CAQzE;;AACAD,MAAAA,KAAK,CAACd,OAAN,CAAc,UAASgB,MAAT,EAAgB;AAC5BD,QAAAA,QAAQ,CAACC,MAAD,CAAR,GAAmBC,OAAO,CAACD,MAAD,CAA1B;AACD,OAFD;AAIAF,MAAAA,KAAK,CAACd,OAAN,CAAc,UAASkB,CAAT,EAAW;AACvBD,QAAAA,OAAO,CAACC,CAAD,CAAP,GAAa,YAAU;AACrB,cAAIR,GAAJ,EAAS;AACPA,YAAAA,GAAG,CAACS,IAAJ,CAAS,SAAT,EAAoB;AAClBzB,cAAAA,OAAO,EAAG;AACR0B,gBAAAA,KAAK,EAAQ,KADL;AAERC,gBAAAA,IAAI,EAAS,KAFL;AAGRC,gBAAAA,GAAG,EAAU;AAHL,eADQ;AAMlBC,cAAAA,EAAE,EAAIpD,OAAO,CAACS,OAAR,EANY;AAOlB4C,cAAAA,IAAI,EAAGzD,IAAI,CAAC8C,MAAL,CAAYY,KAAZ,CAAkB,IAAlB,EAAwBC,SAAxB,IAAqC;AAP1B,aAApB;AASD,WAXoB,CAYrB;;;AACAA,UAAAA,SAAS,CAAC,CAAD,CAAT,KAAiBA,SAAS,CAAC,CAAD,CAAT,GAAed,SAAS,KAAK,OAAd,GAAwBM,CAAxB,GAA4B,IAA5B,GAAmCQ,SAAS,CAAC,CAAD,CAA5E;AACAX,UAAAA,QAAQ,CAACG,CAAD,CAAR,CAAYO,KAAZ,CAAkBR,OAAlB,EAA2BS,SAA3B;AACD,SAfD;AAgBD,OAjBD;AAkBD;AACF,GA9G4B;AA+G7BC,EAAAA,YAAY,EAAG,UAASC,IAAT,EAAeC,QAAf,EAAyB;AACtC;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAIC,KAAK,GAAG,EAAZ,CApBsC,CAqBtC;;AACA,QAAIC,KAAK,GAAG3C,MAAM,CAACC,IAAP,CAAYuC,IAAZ,EAAkBI,IAAlB,CAAuB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAC/C,aAAO,CAACD,CAAC,CAACE,UAAF,CAAa,CAAb,CAAD,GAAmBD,CAAC,CAACC,UAAF,CAAa,CAAb,CAA1B;AACD,KAFW,CAAZ,CAtBsC,CA0BtC;;AACA,KAAC,SAASC,QAAT,CAAkBC,EAAlB,EAAqB;AACpB,UAAGA,EAAE,CAAC/C,MAAH,IAAa,CAAhB,EAAkB;AAChB,eAAO,KAAP;AACD;;AACD+C,MAAAA,EAAE,GAAGA,EAAE,CAAC,CAAD,CAAP,CAJoB,CAMpB;AACA;;AACA,UAAG,OAAOT,IAAI,CAACS,EAAD,CAAX,IAAmB,QAAnB,IAA+B,CAACC,KAAK,CAACV,IAAI,CAACS,EAAD,CAAJ,CAASE,EAAV,CAAxC,EAAsD;AACpD,eAAOH,QAAQ,CAACL,KAAK,CAACS,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,CAAf;AACD;;AAEDV,MAAAA,KAAK,CAACW,IAAN,CAAW,UAAShE,IAAT,EAAc;AACvB,YAAI6B,IAAI,GAAGsB,IAAI,CAACS,EAAD,CAAf,CADuB,CAGvB;;AACA,YAAI,CAAC/B,IAAD,IAASA,IAAI,CAACoC,OAAL,CAAa,MAAb,IAAuB,CAAC,CAAjC,IAAsCpC,IAAI,CAACoC,OAAL,CAAa,WAAb,IAA4B,CAAC,CAAvE,EACE,OAAOjE,IAAI,EAAX;AAEFmD,QAAAA,IAAI,CAACS,EAAD,CAAJ,GAAWzE,EAAE,CAAC+E,iBAAH,CAAqBrC,IAArB,EAA2B;AAACsC,UAAAA,KAAK,EAAE;AAAR,SAA3B,EACRC,IADQ,CACH,OADG,EACMpE,IADN,EAERqE,EAFQ,CAEL,MAFK,EAEG,YAAU;AACpBlB,UAAAA,IAAI,CAACS,EAAD,CAAJ,CAASU,cAAT,CAAwB,OAAxB,EAAiCtE,IAAjC;AAEAmD,UAAAA,IAAI,CAACS,EAAD,CAAJ,CAASS,EAAT,CAAY,OAAZ,EAAqB,UAASE,GAAT,EAAc;AACjC/B,YAAAA,OAAO,CAACgC,KAAR,CAAcD,GAAd;AACD,WAFD;AAIAvE,UAAAA,IAAI;AACL,SAVQ,CAAX;AAWAmD,QAAAA,IAAI,CAACS,EAAD,CAAJ,CAASa,KAAT,GAAiB5C,IAAjB;AACD,OAnBD;AAoBA,aAAO8B,QAAQ,CAACL,KAAK,CAACS,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAAD,CAAf;AACD,KAjCD,EAiCGT,KAAK,CAACS,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAjCH;;AAmCA1E,IAAAA,SAAS,CAACgE,KAAD,EAAQD,QAAR,CAAT;AACD,GA9K4B;;AAgL7B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEsB,EAAAA,oBAAoB,EAAE,UAASC,WAAT,EAAsB;AAC1C,QAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC,OAAO,IAAP;AACrC,QAAIC,mBAAmB,GAAGD,WAA1B,CAF0C,CAI1C;AACA;AACA;;AACA,QAAIC,mBAAmB,CAACC,KAApB,CAA0B,aAA1B,CAAJ,EAA8C;AAC5C,UAAID,mBAAmB,CAACC,KAApB,CAA0B,6BAA1B,CAAJ,EAA8D;AAC5DD,QAAAA,mBAAmB,GAAGA,mBAAmB,CAACC,KAApB,CAA0B,6BAA1B,EAAyD,CAAzD,CAAtB;;AACA,YAAID,mBAAmB,CAACC,KAApB,CAA0B,wDAA1B,CAAJ,EAAyF;AACvFD,UAAAA,mBAAmB,GAAGA,mBAAmB,CAACC,KAApB,CAA0B,wDAA1B,EAAoF,CAApF,CAAtB;AACD;AACF;AACF,KAdyC,CAgB1C;;;AACA,QAAGD,mBAAmB,CAACX,OAApB,CAA4B,MAA5B,MAAwC,CAAC,CAA5C,EAA+C;AAC7CW,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACE,KAApB,CAA0B,GAA1B,EAA+BC,GAA/B,EAAtB;AACD,KAnByC,CAqB1C;;;AACA,QAAGH,mBAAmB,CAACX,OAApB,CAA4B,MAA5B,MAAwC,CAAC,CAA5C,EAA+C;AAC7C,UAAIe,GAAG,GAAGzF,GAAG,CAAC0F,KAAJ,CAAUL,mBAAV,CAAV;AACAA,MAAAA,mBAAmB,GAAGI,GAAG,CAACE,QAAJ,CAAaJ,KAAb,CAAmB,GAAnB,EAAwBC,GAAxB,EAAtB;AACD,KAHD,CAKA;AALA,SAMK,IAAGH,mBAAmB,CAACX,OAApB,CAA4B,SAA5B,MAA2C,CAA9C,EAAiD;AACpDW,QAAAA,mBAAmB,GAAGA,mBAAmB,CAACO,OAApB,CAA4B,KAA5B,EAAmC,EAAnC,EAAuCL,KAAvC,CAA6C,GAA7C,EAAkDC,GAAlD,EAAtB;AACD,OAFI,CAIL;AAJK,WAKA,IAAGH,mBAAmB,CAACX,OAApB,CAA4B,GAA5B,MAAqC,CAAC,CAAzC,EAA4C;AAC/C,cAAIW,mBAAmB,CAACQ,MAApB,CAA2B,CAA3B,MAAkC,GAAtC,EAA0C;AACxCR,YAAAA,mBAAmB,GAAGA,mBAAmB,CAACE,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAtB;AACD;AACF,SArCyC,CAuC1C;;;AACA,QAAGF,mBAAmB,CAACS,WAApB,CAAgC,GAAhC,IAAuC,CAA1C,EAA6C;AAC3CT,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACU,MAApB,CAA2B,CAA3B,EAA6BV,mBAAmB,CAACS,WAApB,CAAgC,GAAhC,CAA7B,CAAtB;AACD,KA1CyC,CA4C1C;;;AACA,QAAGT,mBAAmB,CAACX,OAApB,CAA4B,GAA5B,MAAqC,CAAC,CAAzC,EAA4C;AAC1CW,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACE,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAtB;AACD;;AAED,QAAIF,mBAAmB,CAACX,OAApB,CAA4B,MAA5B,MAAwC,CAAC,CAA7C,EAAgD;AAC9CW,MAAAA,mBAAmB,GAAGA,mBAAmB,CAACO,OAApB,CAA4B,MAA5B,EAAoC,EAApC,CAAtB;AACD;;AAED,WAAOP,mBAAP;AACD,GAhP4B;AAkP7BW,EAAAA,eAAe,EAAE,UAASC,IAAT,EAAe;AAC9B,WAAOA,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,WAA5B,IAA2CA,IAAI,KAAK,YAA3D;AACD,GApP4B;AAsP7BC,EAAAA,YAAY,EAAE,YAAY;AACxB,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,SAAS,GAAG,kBAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,MAAAA,CAAC,CAACE,CAAD,CAAD,GAAOD,SAAS,CAACL,MAAV,CAAiBO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAjB,EAAmD,CAAnD,CAAP;AACD;;AACDL,IAAAA,CAAC,CAAC,EAAD,CAAD,GAAQ,GAAR;AACAA,IAAAA,CAAC,CAAC,EAAD,CAAD,GAAQC,SAAS,CAACL,MAAV,CAAkBI,CAAC,CAAC,EAAD,CAAD,GAAQ,GAAT,GAAgB,GAAjC,EAAsC,CAAtC,CAAR;AACAA,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,EAAD,CAAD,GAAQA,CAAC,CAAC,EAAD,CAAD,GAAQA,CAAC,CAAC,EAAD,CAAD,GAAQ,GAA/B;AACA,WAAOA,CAAC,CAACM,IAAF,CAAO,EAAP,CAAP;AACD;AAhQ4B,CAA/B","sourcesContent":["/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\n\n/**\n * Common Utilities ONLY USED IN ->DAEMON<-\n */\n\nvar fclone    = require('fclone');\nvar fs        = require('fs');\nvar cst       = require('../constants.js');\nvar waterfall = require('async/waterfall');\nvar util      = require('util');\nvar url       = require('url');\nvar dayjs     = require('dayjs');\nvar findPackageJson = require('./tools/find-package-json')\n\nvar Utility = module.exports = {\n  findPackageVersion : function(fullpath) {\n    var version\n\n    try {\n      version = findPackageJson(fullpath).next().value.version\n    } catch(e) {\n      version = 'N/A'\n    }\n    return version\n  },\n  getDate : function() {\n    return Date.now();\n  },\n  extendExtraConfig : function(proc, opts) {\n    if (opts.env && opts.env.current_conf) {\n      if (opts.env.current_conf.env &&\n          typeof(opts.env.current_conf.env) === 'object' &&\n          Object.keys(opts.env.current_conf.env).length === 0)\n        delete opts.env.current_conf.env\n\n      Utility.extendMix(proc.pm2_env, opts.env.current_conf);\n      delete opts.env.current_conf;\n    }\n  },\n  formatCLU : function(process) {\n    if (!process.pm2_env) {\n      return process;\n    }\n\n    var obj = Utility.clone(process.pm2_env);\n    delete obj.env;\n\n    return obj;\n  },\n  extend : function(destination, source){\n    if (!source || typeof source != 'object') return destination;\n\n      Object.keys(source).forEach(function(new_key) {\n        if (source[new_key] != '[object Object]')\n          destination[new_key] = source[new_key];\n      });\n\n    return destination;\n  },\n  // Same as extend but drop value with 'null'\n  extendMix : function(destination, source){\n    if (!source || typeof source != 'object') return destination;\n\n    Object.keys(source).forEach(function(new_key) {\n      if (source[new_key] == 'null')\n        delete destination[new_key];\n      else\n        destination[new_key] = source[new_key]\n    });\n\n    return destination;\n  },\n\n  whichFileExists : function(file_arr) {\n    var f = null;\n\n    file_arr.some(function(file) {\n      try {\n        fs.statSync(file);\n      } catch(e) {\n        return false;\n      }\n      f = file;\n      return true;\n    });\n    return f;\n  },\n  clone     : function(obj) {\n    if (obj === null || obj === undefined) return {};\n    return fclone(obj);\n  },\n  overrideConsole : function(bus) {\n    if (cst.PM2_LOG_DATE_FORMAT && typeof cst.PM2_LOG_DATE_FORMAT == 'string') {\n      // Generate timestamp prefix\n      function timestamp(){\n        return `${dayjs(Date.now()).format('YYYY-MM-DDTHH:mm:ss')}:`;\n      }\n\n      var hacks = ['info', 'log', 'error', 'warn'], consoled = {};\n\n      // store console functions.\n      hacks.forEach(function(method){\n        consoled[method] = console[method];\n      });\n\n      hacks.forEach(function(k){\n        console[k] = function(){\n          if (bus) {\n            bus.emit('log:PM2', {\n              process : {\n                pm_id      : 'PM2',\n                name       : 'PM2',\n                rev        : null\n              },\n              at  : Utility.getDate(),\n              data : util.format.apply(this, arguments) + '\\n'\n            });\n          }\n          // do not destroy variable insertion\n          arguments[0] && (arguments[0] = timestamp() + ' PM2 ' + k + ': ' + arguments[0]);\n          consoled[k].apply(console, arguments);\n        };\n      });\n    }\n  },\n  startLogging : function(stds, callback) {\n    /**\n     * Start log outgoing messages\n     * @method startLogging\n     * @param {} callback\n     * @return\n     */\n    // Make sure directories of `logs` and `pids` exist.\n    // try {\n    //   ['logs', 'pids'].forEach(function(n){\n    //     console.log(n);\n    //     (function(_path){\n    //       !fs.existsSync(_path) && fs.mkdirSync(_path, '0755');\n    //     })(path.resolve(cst.PM2_ROOT_PATH, n));\n    //   });\n    // } catch(err) {\n    //   return callback(new Error('can not create directories (logs/pids):' + err.message));\n    // }\n\n    // waterfall.\n    var flows = [];\n    // types of stdio, should be sorted as `std(entire log)`, `out`, `err`.\n    var types = Object.keys(stds).sort(function(x, y){\n      return -x.charCodeAt(0) + y.charCodeAt(0);\n    });\n\n    // Create write streams.\n    (function createWS(io){\n      if(io.length != 1){\n        return false;\n      }\n      io = io[0];\n\n      // If `std` is a Stream type, try next `std`.\n      // compatible with `pm2 reloadLogs`\n      if(typeof stds[io] == 'object' && !isNaN(stds[io].fd)){\n        return createWS(types.splice(0, 1));\n      }\n\n      flows.push(function(next){\n        var file = stds[io];\n\n        // if file contains ERR or /dev/null, dont try to create stream since he dont want logs\n        if (!file || file.indexOf('NULL') > -1 || file.indexOf('/dev/null') > -1)\n          return next();\n\n        stds[io] = fs.createWriteStream(file, {flags: 'a'})\n          .once('error', next)\n          .on('open', function(){\n            stds[io].removeListener('error', next);\n\n            stds[io].on('error', function(err) {\n              console.error(err);\n            });\n\n            next();\n          });\n        stds[io]._file = file;\n      });\n      return createWS(types.splice(0, 1));\n    })(types.splice(0, 1));\n\n    waterfall(flows, callback);\n  },\n\n  /**\n   * Function parse the module name and returns it as canonic:\n   * - Makes the name based on installation filename.\n   * - Removes the Github author, module version and git branch from original name.\n   *\n   * @param {string} module_name\n   * @returns {string} Canonic module name (without trimed parts).\n   * @example Always returns 'pm2-slack' for inputs 'ma-zal/pm2-slack', 'ma-zal/pm2-slack#own-branch',\n   *          'pm2-slack-1.0.0.tgz' or 'pm2-slack@1.0.0'.\n   */\n  getCanonicModuleName: function(module_name) {\n    if (typeof module_name !== 'string') return null;\n    var canonic_module_name = module_name;\n\n    // Returns the module name from a .tgz package name (or the original name if it is not a valid pkg).\n    // Input: The package name (e.g. \"foo.tgz\", \"foo-1.0.0.tgz\", \"folder/foo.tgz\")\n    // Output: The module name\n    if (canonic_module_name.match(/\\.tgz($|\\?)/)) {\n      if (canonic_module_name.match(/^(.+\\/)?([^\\/]+)\\.tgz($|\\?)/)) {\n        canonic_module_name = canonic_module_name.match(/^(.+\\/)?([^\\/]+)\\.tgz($|\\?)/)[2];\n        if (canonic_module_name.match(/^(.+)-[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9_]+\\.[0-9]+)?$/)) {\n          canonic_module_name = canonic_module_name.match(/^(.+)-[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9_]+\\.[0-9]+)?$/)[1];\n        }\n      }\n    }\n\n    //pm2 install git+https://github.com/user/module\n    if(canonic_module_name.indexOf('git+') !== -1) {\n      canonic_module_name = canonic_module_name.split('/').pop();\n    }\n\n    //pm2 install https://github.com/user/module\n    if(canonic_module_name.indexOf('http') !== -1) {\n      var uri = url.parse(canonic_module_name);\n      canonic_module_name = uri.pathname.split('/').pop();\n    }\n\n    //pm2 install file:///home/user/module\n    else if(canonic_module_name.indexOf('file://') === 0) {\n      canonic_module_name = canonic_module_name.replace(/\\/$/, '').split('/').pop();\n    }\n\n    //pm2 install username/module\n    else if(canonic_module_name.indexOf('/') !== -1) {\n      if (canonic_module_name.charAt(0) !== \"@\"){\n        canonic_module_name = canonic_module_name.split('/')[1];\n      }\n    }\n\n    //pm2 install @somescope/module@2.1.0-beta\n    if(canonic_module_name.lastIndexOf('@') > 0) {\n      canonic_module_name = canonic_module_name.substr(0,canonic_module_name.lastIndexOf(\"@\"));\n    }\n\n    //pm2 install module#some-branch\n    if(canonic_module_name.indexOf('#') !== -1) {\n      canonic_module_name = canonic_module_name.split('#')[0];\n    }\n\n    if (canonic_module_name.indexOf('.git') !== -1) {\n      canonic_module_name = canonic_module_name.replace('.git', '');\n    }\n\n    return canonic_module_name;\n  },\n\n  checkPathIsNull: function(path) {\n    return path === 'NULL' || path === '/dev/null' || path === '\\\\\\\\.\\\\NUL';\n  },\n\n  generateUUID: function () {\n    var s = [];\n    var hexDigits = \"0123456789abcdef\";\n    for (var i = 0; i < 36; i++) {\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n    s[14] = \"4\";\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);\n    s[8] = s[13] = s[18] = s[23] = \"-\";\n    return s.join(\"\");\n  }\n\n};\n"]},"metadata":{},"sourceType":"script"}