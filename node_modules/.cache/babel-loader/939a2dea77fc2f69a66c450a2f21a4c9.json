{"ast":null,"code":"'use strict';\n\nconst Prompt = require('../prompt');\n\nconst {\n  isPrimitive,\n  hasColor\n} = require('../utils');\n\nclass BooleanPrompt extends Prompt {\n  constructor(options) {\n    super(options);\n    this.cursorHide();\n  }\n\n  async initialize() {\n    let initial = await this.resolve(this.initial, this.state);\n    this.input = await this.cast(initial);\n    await super.initialize();\n  }\n\n  dispatch(ch) {\n    if (!this.isValue(ch)) return this.alert();\n    this.input = ch;\n    return this.submit();\n  }\n\n  format(value) {\n    let {\n      styles,\n      state\n    } = this;\n    return !state.submitted ? styles.primary(value) : styles.success(value);\n  }\n\n  cast(input) {\n    return this.isTrue(input);\n  }\n\n  isTrue(input) {\n    return /^[ty1]/i.test(input);\n  }\n\n  isFalse(input) {\n    return /^[fn0]/i.test(input);\n  }\n\n  isValue(value) {\n    return isPrimitive(value) && (this.isTrue(value) || this.isFalse(value));\n  }\n\n  async hint() {\n    if (this.state.status === 'pending') {\n      let hint = await this.element('hint');\n\n      if (!hasColor(hint)) {\n        return this.styles.muted(hint);\n      }\n\n      return hint;\n    }\n  }\n\n  async render() {\n    let {\n      input,\n      size\n    } = this.state;\n    let prefix = await this.prefix();\n    let sep = await this.separator();\n    let msg = await this.message();\n    let hint = this.styles.muted(this.default);\n    let promptLine = [prefix, msg, hint, sep].filter(Boolean).join(' ');\n    this.state.prompt = promptLine;\n    let header = await this.header();\n    let value = this.value = this.cast(input);\n    let output = await this.format(value);\n    let help = (await this.error()) || (await this.hint());\n    let footer = await this.footer();\n    if (help && !promptLine.includes(help)) output += ' ' + help;\n    promptLine += ' ' + output;\n    this.clear(size);\n    this.write([header, promptLine, footer].filter(Boolean).join('\\n'));\n    this.restore();\n  }\n\n  set value(value) {\n    super.value = value;\n  }\n\n  get value() {\n    return this.cast(super.value);\n  }\n\n}\n\nmodule.exports = BooleanPrompt;","map":{"version":3,"sources":["/Users/samianki/node_modules/enquirer/lib/types/boolean.js"],"names":["Prompt","require","isPrimitive","hasColor","BooleanPrompt","constructor","options","cursorHide","initialize","initial","resolve","state","input","cast","dispatch","ch","isValue","alert","submit","format","value","styles","submitted","primary","success","isTrue","test","isFalse","hint","status","element","muted","render","size","prefix","sep","separator","msg","message","default","promptLine","filter","Boolean","join","prompt","header","output","help","error","footer","includes","clear","write","restore","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Prompt = require('../prompt');\nconst { isPrimitive, hasColor } = require('../utils');\n\nclass BooleanPrompt extends Prompt {\n  constructor(options) {\n    super(options);\n    this.cursorHide();\n  }\n\n  async initialize() {\n    let initial = await this.resolve(this.initial, this.state);\n    this.input = await this.cast(initial);\n    await super.initialize();\n  }\n\n  dispatch(ch) {\n    if (!this.isValue(ch)) return this.alert();\n    this.input = ch;\n    return this.submit();\n  }\n\n  format(value) {\n    let { styles, state } = this;\n    return !state.submitted ? styles.primary(value) : styles.success(value);\n  }\n\n  cast(input) {\n    return this.isTrue(input);\n  }\n\n  isTrue(input) {\n    return /^[ty1]/i.test(input);\n  }\n\n  isFalse(input) {\n    return /^[fn0]/i.test(input);\n  }\n\n  isValue(value) {\n    return isPrimitive(value) && (this.isTrue(value) || this.isFalse(value));\n  }\n\n  async hint() {\n    if (this.state.status === 'pending') {\n      let hint = await this.element('hint');\n      if (!hasColor(hint)) {\n        return this.styles.muted(hint);\n      }\n      return hint;\n    }\n  }\n\n  async render() {\n    let { input, size } = this.state;\n\n    let prefix = await this.prefix();\n    let sep = await this.separator();\n    let msg = await this.message();\n    let hint = this.styles.muted(this.default);\n\n    let promptLine = [prefix, msg, hint, sep].filter(Boolean).join(' ');\n    this.state.prompt = promptLine;\n\n    let header = await this.header();\n    let value = this.value = this.cast(input);\n    let output = await this.format(value);\n    let help = (await this.error()) || (await this.hint());\n    let footer = await this.footer();\n\n    if (help && !promptLine.includes(help)) output += ' ' + help;\n    promptLine += ' ' + output;\n\n    this.clear(size);\n    this.write([header, promptLine, footer].filter(Boolean).join('\\n'));\n    this.restore();\n  }\n\n  set value(value) {\n    super.value = value;\n  }\n  get value() {\n    return this.cast(super.value);\n  }\n}\n\nmodule.exports = BooleanPrompt;\n"]},"metadata":{},"sourceType":"script"}