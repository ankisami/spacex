{"ast":null,"code":"var path = require('path');\n\nvar fs = require('fs');\n\nvar os = require('os');\n\nvar spawn = require('child_process').spawn;\n\nvar chalk = require('chalk');\n\nvar parallel = require('async/parallel');\n\nvar Configuration = require('../../Configuration.js');\n\nvar cst = require('../../../constants.js');\n\nvar Common = require('../../Common');\n\nvar Utility = require('../../Utility.js');\n\nvar readline = require('readline');\n\nvar INTERNAL_MODULES = {\n  'deep-monitoring': {\n    dependencies: [{\n      name: 'v8-profiler-node8'\n    }, {\n      name: 'gc-stats'\n    }, {\n      name: 'event-loop-inspector'\n    }]\n  },\n  'gc-stats': {\n    name: 'gc-stats'\n  },\n  'event-loop-inspector': {\n    name: 'event-loop-inspector'\n  },\n  'v8-profiler': {\n    name: 'v8-profiler-node8'\n  },\n  'profiler': {\n    name: 'v8-profiler-node8'\n  },\n  'typescript': {\n    dependencies: [{\n      name: 'typescript'\n    }, {\n      name: 'ts-node@latest'\n    }]\n  },\n  'livescript': {\n    name: 'livescript'\n  },\n  'coffee-script': {\n    name: 'coffee-script',\n    message: 'Coffeescript v1 support'\n  },\n  'coffeescript': {\n    name: 'coffeescript',\n    message: 'Coffeescript v2 support'\n  }\n};\nmodule.exports = {\n  install,\n  INTERNAL_MODULES,\n  installMultipleModules\n};\n\nfunction install(module, cb, verbose) {\n  if (!module || !module.name || module.name.length === 0) {\n    return cb(new Error('No module name !'));\n  }\n\n  if (typeof verbose === 'undefined') {\n    verbose = true;\n  }\n\n  installLangModule(module.name, function (err) {\n    var display = module.message || module.name;\n\n    if (err) {\n      if (verbose) {\n        Common.printError(cst.PREFIX_MSG_MOD_ERR + chalk.bold.green(display + ' installation has FAILED (checkout previous logs)'));\n      }\n\n      return cb(err);\n    }\n\n    if (verbose) {\n      Common.printOut(cst.PREFIX_MSG + chalk.bold.green(display + ' ENABLED'));\n    }\n\n    return cb();\n  });\n}\n\nfunction installMultipleModules(modules, cb, post_install) {\n  var functionList = [];\n\n  for (var i = 0; i < modules.length; i++) {\n    functionList.push(function (index) {\n      return function (callback) {\n        var module = modules[index];\n\n        if (typeof modules[index] === 'string') {\n          module = {\n            name: modules[index]\n          };\n        }\n\n        install(module, function ($post_install, err, $index, $modules) {\n          try {\n            var install_instance = spawn(post_install[modules[index]], {\n              stdio: 'inherit',\n              env: process.env,\n              shell: true,\n              cwd: process.cwd()\n            });\n            Common.printOut(cst.PREFIX_MSG_MOD + 'Running configuraton script.');\n          } catch (e) {\n            Common.printOut(cst.PREFIX_MSG_MOD + 'No configuraton script found.');\n          }\n\n          callback(null, {\n            module: module,\n            err: err\n          });\n        }, false);\n      };\n    }(i));\n  }\n\n  parallel(functionList, function (err, results) {\n    for (var i = 0; i < results.length; i++) {\n      var display = results[i].module.message || results[i].module.name;\n\n      if (results[i].err) {\n        err = results[i].err;\n        Common.printError(cst.PREFIX_MSG_MOD_ERR + chalk.bold.green(display + ' installation has FAILED (checkout previous logs)'));\n      } else {\n        Common.printOut(cst.PREFIX_MSG + chalk.bold.green(display + ' ENABLED'));\n      }\n    }\n\n    if (cb) cb(err);\n  });\n}\n\n;\n\nfunction installLangModule(module_name, cb) {\n  var node_module_path = path.resolve(path.join(__dirname, '../../../'));\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Calling ' + chalk.bold.red('[NPM]') + ' to install ' + module_name + ' ...');\n  var install_instance = spawn(cst.IS_WINDOWS ? 'npm.cmd' : 'npm', ['install', module_name, '--loglevel=error'], {\n    stdio: 'inherit',\n    env: process.env,\n    shell: true,\n    cwd: node_module_path\n  });\n  install_instance.on('close', function (code) {\n    if (code > 0) return cb(new Error('Module install failed'));\n    return cb(null);\n  });\n  install_instance.on('error', function (err) {\n    console.error(err.stack || err);\n  });\n}\n\n;","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Modules/LOCAL.js"],"names":["path","require","fs","os","spawn","chalk","parallel","Configuration","cst","Common","Utility","readline","INTERNAL_MODULES","dependencies","name","message","module","exports","install","installMultipleModules","cb","verbose","length","Error","installLangModule","err","display","printError","PREFIX_MSG_MOD_ERR","bold","green","printOut","PREFIX_MSG","modules","post_install","functionList","i","push","index","callback","$post_install","$index","$modules","install_instance","stdio","env","process","shell","cwd","PREFIX_MSG_MOD","e","results","module_name","node_module_path","resolve","join","__dirname","red","IS_WINDOWS","on","code","console","error","stack"],"mappings":"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","sourcesContent":["\nvar path          = require('path');\nvar fs            = require('fs');\nvar os            = require('os');\nvar spawn         = require('child_process').spawn;\nvar chalk         = require('chalk');\nvar parallel      = require('async/parallel');\n\nvar Configuration = require('../../Configuration.js');\nvar cst           = require('../../../constants.js');\nvar Common        = require('../../Common');\nvar Utility       = require('../../Utility.js');\nvar readline = require('readline')\n\nvar INTERNAL_MODULES = {\n  'deep-monitoring': {\n    dependencies: [{name: 'v8-profiler-node8'}, {name: 'gc-stats'}, {name: 'event-loop-inspector'}]\n  },\n  'gc-stats': {name: 'gc-stats'},\n  'event-loop-inspector': {name: 'event-loop-inspector'},\n  'v8-profiler': {name: 'v8-profiler-node8'},\n  'profiler': {name: 'v8-profiler-node8'},\n  'typescript': {dependencies: [{name: 'typescript'}, {name: 'ts-node@latest'}]},\n  'livescript': {name: 'livescript'},\n  'coffee-script': {name: 'coffee-script', message: 'Coffeescript v1 support'},\n  'coffeescript': {name: 'coffeescript', message: 'Coffeescript v2 support'}\n};\n\nmodule.exports = {\n  install,\n  INTERNAL_MODULES,\n  installMultipleModules\n}\n\n\nfunction install(module, cb, verbose) {\n  if (!module || !module.name || module.name.length === 0) {\n    return cb(new Error('No module name !'));\n  }\n\n  if (typeof verbose === 'undefined') {\n    verbose = true;\n  }\n\n  installLangModule(module.name, function (err) {\n    var display = module.message || module.name;\n    if (err) {\n      if (verbose) { Common.printError(cst.PREFIX_MSG_MOD_ERR + chalk.bold.green(display + ' installation has FAILED (checkout previous logs)')); }\n      return cb(err);\n    }\n\n    if (verbose) { Common.printOut(cst.PREFIX_MSG + chalk.bold.green(display + ' ENABLED')); }\n    return cb();\n  });\n}\n\nfunction installMultipleModules(modules, cb, post_install) {\n  var functionList = [];\n  for (var i = 0; i < modules.length; i++) {\n    functionList.push((function (index) {\n      return function (callback) {\n        var module = modules[index];\n        if (typeof modules[index] === 'string') {\n          module = {name: modules[index]};\n        }\n        install(module, function ($post_install, err, $index, $modules) {\n          try {\n            var install_instance = spawn(post_install[modules[index]], {\n              stdio : 'inherit',\n              env: process.env,\n              shell : true,\n              cwd : process.cwd()\n            });\n            Common.printOut(cst.PREFIX_MSG_MOD + 'Running configuraton script.');\n          }\n          catch(e)\n          {\n            Common.printOut(cst.PREFIX_MSG_MOD + 'No configuraton script found.');\n          }\n          callback(null, {  module: module, err: err });\n        }, false);\n      };\n    })(i));\n  }\n\n  parallel(functionList, function (err, results) {\n    for (var i = 0; i < results.length; i++) {\n      var display = results[i].module.message || results[i].module.name;\n      if (results[i].err) {\n        err = results[i].err;\n        Common.printError(cst.PREFIX_MSG_MOD_ERR + chalk.bold.green(display + ' installation has FAILED (checkout previous logs)'));\n      } else {\n        Common.printOut(cst.PREFIX_MSG + chalk.bold.green(display + ' ENABLED'));\n      }\n    }\n\n    if(cb) cb(err);\n  });\n};\n\nfunction installLangModule(module_name, cb) {\n  var node_module_path = path.resolve(path.join(__dirname, '../../../'));\n  Common.printOut(cst.PREFIX_MSG_MOD + 'Calling ' + chalk.bold.red('[NPM]') + ' to install ' + module_name + ' ...');\n\n  var install_instance = spawn(cst.IS_WINDOWS ? 'npm.cmd' : 'npm', ['install', module_name, '--loglevel=error'], {\n    stdio : 'inherit',\n    env: process.env,\n\t\tshell : true,\n    cwd : node_module_path\n  });\n\n  install_instance.on('close', function(code) {\n    if (code > 0)\n      return cb(new Error('Module install failed'));\n    return cb(null);\n  });\n\n  install_instance.on('error', function (err) {\n    console.error(err.stack || err);\n  });\n};\n"]},"metadata":{},"sourceType":"script"}