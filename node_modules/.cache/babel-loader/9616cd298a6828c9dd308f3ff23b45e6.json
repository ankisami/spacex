{"ast":null,"code":"'use strict';\n\nconst AuthPrompt = require('../types/auth');\n\nfunction defaultAuthenticate(value, state) {\n  if (value.username === this.options.username && value.password === this.options.password) {\n    return true;\n  }\n\n  return false;\n}\n\nconst factory = (authenticate = defaultAuthenticate) => {\n  const choices = [{\n    name: 'username',\n    message: 'username'\n  }, {\n    name: 'password',\n    message: 'password',\n\n    format(input) {\n      if (this.options.showPassword) {\n        return input;\n      }\n\n      let color = this.state.submitted ? this.styles.primary : this.styles.muted;\n      return color(this.symbols.asterisk.repeat(input.length));\n    }\n\n  }];\n\n  class BasicAuthPrompt extends AuthPrompt.create(authenticate) {\n    constructor(options) {\n      super({ ...options,\n        choices\n      });\n    }\n\n    static create(authenticate) {\n      return factory(authenticate);\n    }\n\n  }\n\n  return BasicAuthPrompt;\n};\n\nmodule.exports = factory();","map":{"version":3,"sources":["/Users/samianki/node_modules/enquirer/lib/prompts/basicauth.js"],"names":["AuthPrompt","require","defaultAuthenticate","value","state","username","options","password","factory","authenticate","choices","name","message","format","input","showPassword","color","submitted","styles","primary","muted","symbols","asterisk","repeat","length","BasicAuthPrompt","create","constructor","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AACzC,MAAID,KAAK,CAACE,QAAN,KAAmB,KAAKC,OAAL,CAAaD,QAAhC,IAA4CF,KAAK,CAACI,QAAN,KAAmB,KAAKD,OAAL,CAAaC,QAAhF,EAA0F;AACxF,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAED,MAAMC,OAAO,GAAG,CAACC,YAAY,GAAGP,mBAAhB,KAAwC;AACtD,QAAMQ,OAAO,GAAG,CACd;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,OAAO,EAAE;AAA7B,GADc,EAEd;AACED,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,OAAO,EAAE,UAFX;;AAGEC,IAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,UAAI,KAAKR,OAAL,CAAaS,YAAjB,EAA+B;AAC7B,eAAOD,KAAP;AACD;;AACD,UAAIE,KAAK,GAAG,KAAKZ,KAAL,CAAWa,SAAX,GAAuB,KAAKC,MAAL,CAAYC,OAAnC,GAA6C,KAAKD,MAAL,CAAYE,KAArE;AACA,aAAOJ,KAAK,CAAC,KAAKK,OAAL,CAAaC,QAAb,CAAsBC,MAAtB,CAA6BT,KAAK,CAACU,MAAnC,CAAD,CAAZ;AACD;;AATH,GAFc,CAAhB;;AAeA,QAAMC,eAAN,SAA8BzB,UAAU,CAAC0B,MAAX,CAAkBjB,YAAlB,CAA9B,CAA8D;AAC5DkB,IAAAA,WAAW,CAACrB,OAAD,EAAU;AACnB,YAAM,EAAE,GAAGA,OAAL;AAAcI,QAAAA;AAAd,OAAN;AACD;;AAEY,WAANgB,MAAM,CAACjB,YAAD,EAAe;AAC1B,aAAOD,OAAO,CAACC,YAAD,CAAd;AACD;;AAP2D;;AAU9D,SAAOgB,eAAP;AACD,CA3BD;;AA6BAG,MAAM,CAACC,OAAP,GAAiBrB,OAAO,EAAxB","sourcesContent":["'use strict';\n\nconst AuthPrompt = require('../types/auth');\n\nfunction defaultAuthenticate(value, state) {\n  if (value.username === this.options.username && value.password === this.options.password) {\n    return true;\n  }\n  return false;\n}\n\nconst factory = (authenticate = defaultAuthenticate) => {\n  const choices = [\n    { name: 'username', message: 'username' },\n    {\n      name: 'password',\n      message: 'password',\n      format(input) {\n        if (this.options.showPassword) {\n          return input;\n        }\n        let color = this.state.submitted ? this.styles.primary : this.styles.muted;\n        return color(this.symbols.asterisk.repeat(input.length));\n      }\n    }\n  ];\n\n  class BasicAuthPrompt extends AuthPrompt.create(authenticate) {\n    constructor(options) {\n      super({ ...options, choices });\n    }\n\n    static create(authenticate) {\n      return factory(authenticate);\n    }\n  }\n\n  return BasicAuthPrompt;\n};\n\nmodule.exports = factory();\n"]},"metadata":{},"sourceType":"script"}