{"ast":null,"code":"/**\n * events.js - event emitter for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\nvar slice = Array.prototype.slice;\n/**\n * EventEmitter\n */\n\nfunction EventEmitter() {\n  if (!this._events) this._events = {};\n}\n\nEventEmitter.prototype.setMaxListeners = function (n) {\n  this._maxListeners = n;\n};\n\nEventEmitter.prototype.addListener = function (type, listener) {\n  if (!this._events[type]) {\n    this._events[type] = listener;\n  } else if (typeof this._events[type] === 'function') {\n    this._events[type] = [this._events[type], listener];\n  } else {\n    this._events[type].push(listener);\n  }\n\n  this._emit('newListener', [type, listener]);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.removeListener = function (type, listener) {\n  var handler = this._events[type];\n  if (!handler) return;\n\n  if (typeof handler === 'function' || handler.length === 1) {\n    delete this._events[type];\n\n    this._emit('removeListener', [type, listener]);\n\n    return;\n  }\n\n  for (var i = 0; i < handler.length; i++) {\n    if (handler[i] === listener || handler[i].listener === listener) {\n      handler.splice(i, 1);\n\n      this._emit('removeListener', [type, listener]);\n\n      return;\n    }\n  }\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function (type) {\n  if (type) {\n    delete this._events[type];\n  } else {\n    this._events = {};\n  }\n};\n\nEventEmitter.prototype.once = function (type, listener) {\n  function on() {\n    this.removeListener(type, on);\n    return listener.apply(this, arguments);\n  }\n\n  on.listener = listener;\n  return this.on(type, on);\n};\n\nEventEmitter.prototype.listeners = function (type) {\n  return typeof this._events[type] === 'function' ? [this._events[type]] : this._events[type] || [];\n};\n\nEventEmitter.prototype._emit = function (type, args) {\n  var handler = this._events[type],\n      ret; // if (type !== 'event') {\n  //   this._emit('event', [type.replace(/^element /, '')].concat(args));\n  // }\n\n  if (!handler) {\n    if (type === 'error') {\n      throw new args[0]();\n    }\n\n    return;\n  }\n\n  if (typeof handler === 'function') {\n    return handler.apply(this, args);\n  }\n\n  for (var i = 0; i < handler.length; i++) {\n    if (handler[i].apply(this, args) === false) {\n      ret = false;\n    }\n  }\n\n  return ret !== false;\n};\n\nEventEmitter.prototype.emit = function (type) {\n  var args = slice.call(arguments, 1),\n      params = slice.call(arguments),\n      el = this;\n\n  this._emit('event', params);\n\n  if (this.type === 'screen') {\n    return this._emit(type, args);\n  }\n\n  if (this._emit(type, args) === false) {\n    return false;\n  }\n\n  type = 'element ' + type;\n  args.unshift(this); // `element` prefix\n  // params = [type].concat(args);\n  // no `element` prefix\n  // params.splice(1, 0, this);\n\n  do {\n    // el._emit('event', params);\n    if (!el._events[type]) continue;\n\n    if (el._emit(type, args) === false) {\n      return false;\n    }\n  } while (el = el.parent);\n\n  return true;\n}; // For hooking into the main EventEmitter if we want to.\n// Might be better to do things this way being that it\n// will always be compatible with node, not to mention\n// it gives us domain support as well.\n// Node.prototype._emit = Node.prototype.emit;\n// Node.prototype.emit = function(type) {\n//   var args, el;\n//\n//   if (this.type === 'screen') {\n//     return this._emit.apply(this, arguments);\n//   }\n//\n//   this._emit.apply(this, arguments);\n//   if (this._bubbleStopped) return false;\n//\n//   args = slice.call(arguments, 1);\n//   el = this;\n//\n//   args.unshift('element ' + type, this);\n//   this._bubbleStopped = false;\n//   //args.push(stopBubble);\n//\n//   do {\n//     if (!el._events || !el._events[type]) continue;\n//     el._emit.apply(el, args);\n//     if (this._bubbleStopped) return false;\n//   } while (el = el.parent);\n//\n//   return true;\n// };\n//\n// Node.prototype._addListener = Node.prototype.addListener;\n// Node.prototype.on =\n// Node.prototype.addListener = function(type, listener) {\n//   function on() {\n//     if (listener.apply(this, arguments) === false) {\n//       this._bubbleStopped = true;\n//     }\n//   }\n//   on.listener = listener;\n//   return this._addListener(type, on);\n// };\n\n/**\n * Expose\n */\n\n\nexports = EventEmitter;\nexports.EventEmitter = EventEmitter;\nmodule.exports = exports;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/events.js"],"names":["slice","Array","prototype","EventEmitter","_events","setMaxListeners","n","_maxListeners","addListener","type","listener","push","_emit","on","removeListener","handler","length","i","splice","off","removeAllListeners","once","apply","arguments","listeners","args","ret","emit","call","params","el","unshift","parent","exports","module"],"mappings":"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","sourcesContent":["/**\n * events.js - event emitter for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * EventEmitter\n */\n\nfunction EventEmitter() {\n  if (!this._events) this._events = {};\n}\n\nEventEmitter.prototype.setMaxListeners = function(n) {\n  this._maxListeners = n;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  if (!this._events[type]) {\n    this._events[type] = listener;\n  } else if (typeof this._events[type] === 'function') {\n    this._events[type] = [this._events[type], listener];\n  } else {\n    this._events[type].push(listener);\n  }\n  this._emit('newListener', [type, listener]);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var handler = this._events[type];\n  if (!handler) return;\n\n  if (typeof handler === 'function' || handler.length === 1) {\n    delete this._events[type];\n    this._emit('removeListener', [type, listener]);\n    return;\n  }\n\n  for (var i = 0; i < handler.length; i++) {\n    if (handler[i] === listener || handler[i].listener === listener) {\n      handler.splice(i, 1);\n      this._emit('removeListener', [type, listener]);\n      return;\n    }\n  }\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  if (type) {\n    delete this._events[type];\n  } else {\n    this._events = {};\n  }\n};\n\nEventEmitter.prototype.once = function(type, listener) {\n  function on() {\n    this.removeListener(type, on);\n    return listener.apply(this, arguments);\n  }\n  on.listener = listener;\n  return this.on(type, on);\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  return typeof this._events[type] === 'function'\n    ? [this._events[type]]\n    : this._events[type] || [];\n};\n\nEventEmitter.prototype._emit = function(type, args) {\n  var handler = this._events[type]\n    , ret;\n\n  // if (type !== 'event') {\n  //   this._emit('event', [type.replace(/^element /, '')].concat(args));\n  // }\n\n  if (!handler) {\n    if (type === 'error') {\n      throw new args[0];\n    }\n    return;\n  }\n\n  if (typeof handler === 'function') {\n    return handler.apply(this, args);\n  }\n\n  for (var i = 0; i < handler.length; i++) {\n    if (handler[i].apply(this, args) === false) {\n      ret = false;\n    }\n  }\n\n  return ret !== false;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var args = slice.call(arguments, 1)\n    , params = slice.call(arguments)\n    , el = this;\n\n  this._emit('event', params);\n\n  if (this.type === 'screen') {\n    return this._emit(type, args);\n  }\n\n  if (this._emit(type, args) === false) {\n    return false;\n  }\n\n  type = 'element ' + type;\n  args.unshift(this);\n  // `element` prefix\n  // params = [type].concat(args);\n  // no `element` prefix\n  // params.splice(1, 0, this);\n\n  do {\n    // el._emit('event', params);\n    if (!el._events[type]) continue;\n    if (el._emit(type, args) === false) {\n      return false;\n    }\n  } while (el = el.parent);\n\n  return true;\n};\n\n// For hooking into the main EventEmitter if we want to.\n// Might be better to do things this way being that it\n// will always be compatible with node, not to mention\n// it gives us domain support as well.\n// Node.prototype._emit = Node.prototype.emit;\n// Node.prototype.emit = function(type) {\n//   var args, el;\n//\n//   if (this.type === 'screen') {\n//     return this._emit.apply(this, arguments);\n//   }\n//\n//   this._emit.apply(this, arguments);\n//   if (this._bubbleStopped) return false;\n//\n//   args = slice.call(arguments, 1);\n//   el = this;\n//\n//   args.unshift('element ' + type, this);\n//   this._bubbleStopped = false;\n//   //args.push(stopBubble);\n//\n//   do {\n//     if (!el._events || !el._events[type]) continue;\n//     el._emit.apply(el, args);\n//     if (this._bubbleStopped) return false;\n//   } while (el = el.parent);\n//\n//   return true;\n// };\n//\n// Node.prototype._addListener = Node.prototype.addListener;\n// Node.prototype.on =\n// Node.prototype.addListener = function(type, listener) {\n//   function on() {\n//     if (listener.apply(this, arguments) === false) {\n//       this._bubbleStopped = true;\n//     }\n//   }\n//   on.listener = listener;\n//   return this._addListener(type, on);\n// };\n\n/**\n * Expose\n */\n\nexports = EventEmitter;\nexports.EventEmitter = EventEmitter;\n\nmodule.exports = exports;\n"]},"metadata":{},"sourceType":"script"}