{"ast":null,"code":"var fs = require('fs');\n\nvar conf = require('../../../constants.js');\n\nfunction find_extensions(folder, ext, ret) {\n  try {\n    fs.accessSync(folder, fs.constants.R_OK);\n  } catch (err) {\n    return;\n  }\n\n  if (fs.statSync(folder).isDirectory() && folder.indexOf('node_modules') == -1 && fs.statSync(folder)[\"mode\"] & 4) {\n    fs.readdirSync(folder).forEach(file => {\n      var tmp;\n      if (Number.parseInt(folder.lastIndexOf('/') + 1) === folder.length) tmp = folder + file;else tmp = folder + '/' + file;\n      if (fs.statSync(tmp).isDirectory()) find_extensions(tmp, ext, ret);else {\n        var p = true;\n\n        for (var i = 0; i < ext.length; i++) if (ext[i].test(file)) p = false;\n\n        if (p) ret.push(folder + '/' + file);\n      }\n    });\n  }\n}\n\nmodule.exports.make_available_extension = function make_available_extension(opts, ret) {\n  if (typeof opts == 'object' && typeof ret == 'object') {\n    var mas = opts.ext.split(',');\n\n    for (var i = 0; i < mas.length; i++) mas[i] = '.' + mas[i];\n\n    var res = [];\n\n    for (var i = 0; i < mas.length; i++) res[i] = new RegExp(mas[i] + '$');\n\n    find_extensions(process.cwd(), res, ret);\n  }\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Modules/flagExt.js"],"names":["fs","require","conf","find_extensions","folder","ext","ret","accessSync","constants","R_OK","err","statSync","isDirectory","indexOf","readdirSync","forEach","file","tmp","Number","parseInt","lastIndexOf","length","p","i","test","push","module","exports","make_available_extension","opts","mas","split","res","RegExp","process","cwd"],"mappings":"AAAA,IAAIA,EAAE,GAAYC,OAAO,CAAC,IAAD,CAAzB;;AACA,IAAIC,IAAI,GAAWD,OAAO,CAAC,uBAAD,CAA1B;;AAEA,SAAUE,eAAV,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,GAAvC,EACA;AACI,MAAI;AACFN,IAAAA,EAAE,CAACO,UAAH,CAAcH,MAAd,EAAsBJ,EAAE,CAACQ,SAAH,CAAaC,IAAnC;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ;AACD;;AACD,MAAGV,EAAE,CAACW,QAAH,CAAYP,MAAZ,EAAoBQ,WAApB,MAAqCR,MAAM,CAACS,OAAP,CAAe,cAAf,KAAkC,CAAC,CAAxE,IAA8Eb,EAAE,CAACW,QAAH,CAAYP,MAAZ,EAAoB,MAApB,IAA8B,CAA/G,EACA;AACEJ,IAAAA,EAAE,CAACc,WAAH,CAAeV,MAAf,EAAuBW,OAAvB,CAA+BC,IAAI,IAAI;AACnC,UAAIC,GAAJ;AACA,UAAGC,MAAM,CAACC,QAAP,CAAgBf,MAAM,CAACgB,WAAP,CAAmB,GAAnB,IAA0B,CAA1C,MAAiDhB,MAAM,CAACiB,MAA3D,EACEJ,GAAG,GAAGb,MAAM,GAAGY,IAAf,CADF,KAGEC,GAAG,GAAGb,MAAM,GAAG,GAAT,GAAeY,IAArB;AACF,UAAGhB,EAAE,CAACW,QAAH,CAAYM,GAAZ,EAAiBL,WAAjB,EAAH,EACET,eAAe,CAACc,GAAD,EAAMZ,GAAN,EAAWC,GAAX,CAAf,CADF,KAGA;AACA,YAAIgB,CAAC,GAAG,IAAR;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGlB,GAAG,CAACgB,MAAvB,EAA8BE,CAAC,EAA/B,EACE,IAAGlB,GAAG,CAACkB,CAAD,CAAH,CAAOC,IAAP,CAAYR,IAAZ,CAAH,EACEM,CAAC,GAAG,KAAJ;;AACJ,YAAGA,CAAH,EACEhB,GAAG,CAACmB,IAAJ,CAASrB,MAAM,GAAI,GAAV,GAAgBY,IAAzB;AACD;AACJ,KAjBD;AAkBH;AACF;;AAEDU,MAAM,CAACC,OAAP,CAAeC,wBAAf,GAA0C,SAAUA,wBAAV,CAAmCC,IAAnC,EAAyCvB,GAAzC,EAC1C;AACE,MAAG,OAAOuB,IAAP,IAAe,QAAf,IAA4B,OAAOvB,GAAP,IAAc,QAA7C,EACA;AACE,QAAIwB,GAAG,GAAGD,IAAI,CAACxB,GAAL,CAAS0B,KAAT,CAAe,GAAf,CAAV;;AACA,SAAI,IAAIR,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGO,GAAG,CAACT,MAAtB,EAA6BE,CAAC,EAA9B,EACEO,GAAG,CAACP,CAAD,CAAH,GAAS,MAAMO,GAAG,CAACP,CAAD,CAAlB;;AACF,QAAIS,GAAG,GAAG,EAAV;;AACA,SAAI,IAAIT,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGO,GAAG,CAACT,MAAtB,EAA6BE,CAAC,EAA9B,EACES,GAAG,CAACT,CAAD,CAAH,GAAS,IAAIU,MAAJ,CAAWH,GAAG,CAACP,CAAD,CAAH,GAAS,GAApB,CAAT;;AACFpB,IAAAA,eAAe,CAAC+B,OAAO,CAACC,GAAR,EAAD,EAAgBH,GAAhB,EAAqB1B,GAArB,CAAf;AACD;AACF,CAZD","sourcesContent":["var fs          = require('fs');\nvar conf         = require('../../../constants.js');\n\nfunction  find_extensions(folder, ext, ret)\n{\n    try {\n      fs.accessSync(folder, fs.constants.R_OK);\n    } catch (err) {\n      return;\n    }\n    if(fs.statSync(folder).isDirectory() && folder.indexOf('node_modules') == -1 && (fs.statSync(folder)[\"mode\"] & 4))\n    {\n      fs.readdirSync(folder).forEach(file => {\n          var tmp;\n          if(Number.parseInt(folder.lastIndexOf('/') + 1) === folder.length)\n            tmp = folder + file;\n          else\n            tmp = folder + '/' + file;\n          if(fs.statSync(tmp).isDirectory())\n            find_extensions(tmp, ext, ret);\n          else\n          {\n          var p = true;\n          for(var i = 0; i < ext.length;i++)\n            if(ext[i].test(file))\n              p = false;\n          if(p)\n            ret.push(folder +  '/' + file);\n          }\n      });\n  }\n}\n\nmodule.exports.make_available_extension = function  make_available_extension(opts, ret)\n{\n  if(typeof opts == 'object'  && typeof ret == 'object')\n  {\n    var mas = opts.ext.split(',');\n    for(var i = 0;i < mas.length;i++)\n      mas[i] = '.' + mas[i];\n    var res = [];\n    for(var i = 0;i < mas.length;i++)\n      res[i] = new RegExp(mas[i] + '$');\n    find_extensions(process.cwd(), res, ret);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}