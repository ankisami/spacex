{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define('fclone', [], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    //node\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.fclone = factory();\n  }\n})(this, function () {\n  'use strict'; // see if it looks and smells like an iterable object, and do accept length === 0\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  function isArrayLike(item) {\n    if (Array.isArray(item)) return true;\n    var len = item && item.length;\n    return typeof len === 'number' && (len === 0 || len - 1 in item) && typeof item.indexOf === 'function';\n  }\n\n  function fclone(obj, refs) {\n    if (!obj || \"object\" !== (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) return obj;\n\n    if (obj instanceof Date) {\n      return new Date(obj);\n    }\n\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(obj)) {\n      return new Buffer(obj);\n    } // typed array Int32Array etc.\n\n\n    if (typeof obj.subarray === 'function' && /[A-Z][A-Za-z\\d]+Array/.test(Object.prototype.toString.call(obj))) {\n      return obj.subarray(0);\n    }\n\n    if (!refs) {\n      refs = [];\n    }\n\n    if (isArrayLike(obj)) {\n      refs[refs.length] = obj;\n      var _l = obj.length;\n      var i = -1;\n      var _copy = [];\n\n      while (_l > ++i) {\n        _copy[i] = ~refs.indexOf(obj[i]) ? '[Circular]' : fclone(obj[i], refs);\n      }\n\n      refs.length && refs.length--;\n      return _copy;\n    }\n\n    refs[refs.length] = obj;\n    var copy = {};\n\n    if (obj instanceof Error) {\n      copy.name = obj.name;\n      copy.message = obj.message;\n      copy.stack = obj.stack;\n    }\n\n    var keys = Object.keys(obj);\n    var l = keys.length;\n\n    while (l--) {\n      var k = keys[l];\n      copy[k] = ~refs.indexOf(obj[k]) ? '[Circular]' : fclone(obj[k], refs);\n    }\n\n    refs.length && refs.length--;\n    return copy;\n  }\n\n  fclone.default = fclone;\n  return fclone;\n});","map":{"version":3,"sources":["/Users/samianki/node_modules/fclone/dist/fclone.js"],"names":["root","factory","define","amd","module","exports","fclone","_typeof","Symbol","iterator","obj","constructor","isArrayLike","item","Array","isArray","len","length","indexOf","refs","Date","Buffer","isBuffer","subarray","test","Object","prototype","toString","call","_l","i","_copy","copy","Error","name","message","stack","keys","l","k","default"],"mappings":"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","sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define('fclone', [], factory);\n    } else if (typeof module === 'object' && module.exports) {\n\t\t\t  //node\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.fclone = factory();\n    }\n}(this, function () {\n  'use strict';\n\n// see if it looks and smells like an iterable object, and do accept length === 0\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) return true;\n\n  var len = item && item.length;\n  return typeof len === 'number' && (len === 0 || len - 1 in item) && typeof item.indexOf === 'function';\n}\n\nfunction fclone(obj, refs) {\n  if (!obj || \"object\" !== (typeof obj === 'undefined' ? 'undefined' : _typeof(obj))) return obj;\n\n  if (obj instanceof Date) {\n    return new Date(obj);\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(obj)) {\n    return new Buffer(obj);\n  }\n\n  // typed array Int32Array etc.\n  if (typeof obj.subarray === 'function' && /[A-Z][A-Za-z\\d]+Array/.test(Object.prototype.toString.call(obj))) {\n    return obj.subarray(0);\n  }\n\n  if (!refs) {\n    refs = [];\n  }\n\n  if (isArrayLike(obj)) {\n    refs[refs.length] = obj;\n    var _l = obj.length;\n    var i = -1;\n    var _copy = [];\n\n    while (_l > ++i) {\n      _copy[i] = ~refs.indexOf(obj[i]) ? '[Circular]' : fclone(obj[i], refs);\n    }\n\n    refs.length && refs.length--;\n    return _copy;\n  }\n\n  refs[refs.length] = obj;\n  var copy = {};\n\n  if (obj instanceof Error) {\n    copy.name = obj.name;\n    copy.message = obj.message;\n    copy.stack = obj.stack;\n  }\n\n  var keys = Object.keys(obj);\n  var l = keys.length;\n\n  while (l--) {\n    var k = keys[l];\n    copy[k] = ~refs.indexOf(obj[k]) ? '[Circular]' : fclone(obj[k], refs);\n  }\n\n  refs.length && refs.length--;\n  return copy;\n}\n\nfclone.default = fclone;\n  return fclone\n}));"]},"metadata":{},"sourceType":"script"}