{"ast":null,"code":"/**\n * table.js - table element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar Node = require('./node');\n\nvar Box = require('./box');\n/**\n * Table\n */\n\n\nfunction Table(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Table(options);\n  }\n\n  options = options || {};\n  options.shrink = true;\n  options.style = options.style || {};\n  options.style.border = options.style.border || {};\n  options.style.header = options.style.header || {};\n  options.style.cell = options.style.cell || {};\n  options.align = options.align || 'center'; // Regular tables do not get custom height (this would\n  // require extra padding). Maybe add in the future.\n\n  delete options.height;\n  Box.call(this, options);\n  this.pad = options.pad != null ? options.pad : 2;\n  this.setData(options.rows || options.data);\n  this.on('attach', function () {\n    self.setContent('');\n    self.setData(self.rows);\n  });\n  this.on('resize', function () {\n    self.setContent('');\n    self.setData(self.rows);\n    self.screen.render();\n  });\n}\n\nTable.prototype.__proto__ = Box.prototype;\nTable.prototype.type = 'table';\n\nTable.prototype._calculateMaxes = function () {\n  var self = this;\n  var maxes = [];\n  if (this.detached) return;\n  this.rows = this.rows || [];\n  this.rows.forEach(function (row) {\n    row.forEach(function (cell, i) {\n      var clen = self.strWidth(cell);\n\n      if (!maxes[i] || maxes[i] < clen) {\n        maxes[i] = clen;\n      }\n    });\n  });\n  var total = maxes.reduce(function (total, max) {\n    return total + max;\n  }, 0);\n  total += maxes.length + 1; // XXX There might be an issue with resizing where on the first resize event\n  // width appears to be less than total if it's a percentage or left/right\n  // combination.\n\n  if (this.width < total) {\n    delete this.position.width;\n  }\n\n  if (this.position.width != null) {\n    var missing = this.width - total;\n    var w = missing / maxes.length | 0;\n    var wr = missing % maxes.length;\n    maxes = maxes.map(function (max, i) {\n      if (i === maxes.length - 1) {\n        return max + w + wr;\n      }\n\n      return max + w;\n    });\n  } else {\n    maxes = maxes.map(function (max) {\n      return max + self.pad;\n    });\n  }\n\n  return this._maxes = maxes;\n};\n\nTable.prototype.setRows = Table.prototype.setData = function (rows) {\n  var self = this,\n      text = '',\n      align = this.align;\n  this.rows = rows || [];\n\n  this._calculateMaxes();\n\n  if (!this._maxes) return;\n  this.rows.forEach(function (row, i) {\n    var isFooter = i === self.rows.length - 1;\n    row.forEach(function (cell, i) {\n      var width = self._maxes[i];\n      var clen = self.strWidth(cell);\n\n      if (i !== 0) {\n        text += ' ';\n      }\n\n      while (clen < width) {\n        if (align === 'center') {\n          cell = ' ' + cell + ' ';\n          clen += 2;\n        } else if (align === 'left') {\n          cell = cell + ' ';\n          clen += 1;\n        } else if (align === 'right') {\n          cell = ' ' + cell;\n          clen += 1;\n        }\n      }\n\n      if (clen > width) {\n        if (align === 'center') {\n          cell = cell.substring(1);\n          clen--;\n        } else if (align === 'left') {\n          cell = cell.slice(0, -1);\n          clen--;\n        } else if (align === 'right') {\n          cell = cell.substring(1);\n          clen--;\n        }\n      }\n\n      text += cell;\n    });\n\n    if (!isFooter) {\n      text += '\\n\\n';\n    }\n  });\n  delete this.align;\n  this.setContent(text);\n  this.align = align;\n};\n\nTable.prototype.render = function () {\n  var self = this;\n\n  var coords = this._render();\n\n  if (!coords) return;\n\n  this._calculateMaxes();\n\n  if (!this._maxes) return coords;\n  var lines = this.screen.lines,\n      xi = coords.xi,\n      yi = coords.yi,\n      rx,\n      ry,\n      i;\n  var dattr = this.sattr(this.style),\n      hattr = this.sattr(this.style.header),\n      cattr = this.sattr(this.style.cell),\n      battr = this.sattr(this.style.border);\n  var width = coords.xl - coords.xi - this.iright,\n      height = coords.yl - coords.yi - this.ibottom; // Apply attributes to header cells and cells.\n\n  for (var y = this.itop; y < height; y++) {\n    if (!lines[yi + y]) break;\n\n    for (var x = this.ileft; x < width; x++) {\n      if (!lines[yi + y][xi + x]) break; // Check to see if it's not the default attr. Allows for tags:\n\n      if (lines[yi + y][xi + x][0] !== dattr) continue;\n\n      if (y === this.itop) {\n        lines[yi + y][xi + x][0] = hattr;\n      } else {\n        lines[yi + y][xi + x][0] = cattr;\n      }\n\n      lines[yi + y].dirty = true;\n    }\n  }\n\n  if (!this.border || this.options.noCellBorders) return coords; // Draw border with correct angles.\n\n  ry = 0;\n\n  for (i = 0; i < self.rows.length + 1; i++) {\n    if (!lines[yi + ry]) break;\n    rx = 0;\n\n    self._maxes.forEach(function (max, i) {\n      rx += max;\n\n      if (i === 0) {\n        if (!lines[yi + ry][xi + 0]) return; // left side\n\n        if (ry === 0) {\n          // top\n          lines[yi + ry][xi + 0][0] = battr; // lines[yi + ry][xi + 0][1] = '\\u250c'; // '┌'\n        } else if (ry / 2 === self.rows.length) {\n          // bottom\n          lines[yi + ry][xi + 0][0] = battr; // lines[yi + ry][xi + 0][1] = '\\u2514'; // '└'\n        } else {\n          // middle\n          lines[yi + ry][xi + 0][0] = battr;\n          lines[yi + ry][xi + 0][1] = '\\u251c'; // '├'\n          // XXX If we alter iwidth and ileft for no borders - nothing should be written here\n\n          if (!self.border.left) {\n            lines[yi + ry][xi + 0][1] = '\\u2500'; // '─'\n          }\n        }\n\n        lines[yi + ry].dirty = true;\n      } else if (i === self._maxes.length - 1) {\n        if (!lines[yi + ry][xi + rx + 1]) return; // right side\n\n        if (ry === 0) {\n          // top\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr; // lines[yi + ry][xi + rx][1] = '\\u2510'; // '┐'\n        } else if (ry / 2 === self.rows.length) {\n          // bottom\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr; // lines[yi + ry][xi + rx][1] = '\\u2518'; // '┘'\n        } else {\n          // middle\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n          lines[yi + ry][xi + rx][1] = '\\u2524'; // '┤'\n          // XXX If we alter iwidth and iright for no borders - nothing should be written here\n\n          if (!self.border.right) {\n            lines[yi + ry][xi + rx][1] = '\\u2500'; // '─'\n          }\n        }\n\n        lines[yi + ry].dirty = true;\n        return;\n      }\n\n      if (!lines[yi + ry][xi + rx + 1]) return; // center\n\n      if (ry === 0) {\n        // top\n        rx++;\n        lines[yi + ry][xi + rx][0] = battr;\n        lines[yi + ry][xi + rx][1] = '\\u252c'; // '┬'\n        // XXX If we alter iheight and itop for no borders - nothing should be written here\n\n        if (!self.border.top) {\n          lines[yi + ry][xi + rx][1] = '\\u2502'; // '│'\n        }\n      } else if (ry / 2 === self.rows.length) {\n        // bottom\n        rx++;\n        lines[yi + ry][xi + rx][0] = battr;\n        lines[yi + ry][xi + rx][1] = '\\u2534'; // '┴'\n        // XXX If we alter iheight and ibottom for no borders - nothing should be written here\n\n        if (!self.border.bottom) {\n          lines[yi + ry][xi + rx][1] = '\\u2502'; // '│'\n        }\n      } else {\n        // middle\n        if (self.options.fillCellBorders) {\n          var lbg = (ry <= 2 ? hattr : cattr) & 0x1ff;\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr & ~0x1ff | lbg;\n        } else {\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n        }\n\n        lines[yi + ry][xi + rx][1] = '\\u253c'; // '┼'\n        // rx++;\n      }\n\n      lines[yi + ry].dirty = true;\n    });\n\n    ry += 2;\n  } // Draw internal borders.\n\n\n  for (ry = 1; ry < self.rows.length * 2; ry++) {\n    if (!lines[yi + ry]) break;\n    rx = 0;\n\n    self._maxes.slice(0, -1).forEach(function (max) {\n      rx += max;\n      if (!lines[yi + ry][xi + rx + 1]) return;\n\n      if (ry % 2 !== 0) {\n        if (self.options.fillCellBorders) {\n          var lbg = (ry <= 2 ? hattr : cattr) & 0x1ff;\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr & ~0x1ff | lbg;\n        } else {\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n        }\n\n        lines[yi + ry][xi + rx][1] = '\\u2502'; // '│'\n\n        lines[yi + ry].dirty = true;\n      } else {\n        rx++;\n      }\n    });\n\n    rx = 1;\n\n    self._maxes.forEach(function (max) {\n      while (max--) {\n        if (ry % 2 === 0) {\n          if (!lines[yi + ry]) break;\n          if (!lines[yi + ry][xi + rx + 1]) break;\n\n          if (self.options.fillCellBorders) {\n            var lbg = (ry <= 2 ? hattr : cattr) & 0x1ff;\n            lines[yi + ry][xi + rx][0] = battr & ~0x1ff | lbg;\n          } else {\n            lines[yi + ry][xi + rx][0] = battr;\n          }\n\n          lines[yi + ry][xi + rx][1] = '\\u2500'; // '─'\n\n          lines[yi + ry].dirty = true;\n        }\n\n        rx++;\n      }\n\n      rx++;\n    });\n  }\n\n  return coords;\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Table;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/table.js"],"names":["Node","require","Box","Table","options","self","shrink","style","border","header","cell","align","height","call","pad","setData","rows","data","on","setContent","screen","render","prototype","__proto__","type","_calculateMaxes","maxes","detached","forEach","row","i","clen","strWidth","total","reduce","max","length","width","position","missing","w","wr","map","_maxes","setRows","text","isFooter","substring","slice","coords","_render","lines","xi","yi","rx","ry","dattr","sattr","hattr","cattr","battr","xl","iright","yl","ibottom","y","itop","x","ileft","dirty","noCellBorders","left","right","top","bottom","fillCellBorders","lbg","module","exports"],"mappings":"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","sourcesContent":["/**\n * table.js - table element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar Node = require('./node');\nvar Box = require('./box');\n\n/**\n * Table\n */\n\nfunction Table(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Table(options);\n  }\n\n  options = options || {};\n  options.shrink = true;\n  options.style = options.style || {};\n  options.style.border = options.style.border || {};\n  options.style.header = options.style.header || {};\n  options.style.cell = options.style.cell || {};\n  options.align = options.align || 'center';\n\n  // Regular tables do not get custom height (this would\n  // require extra padding). Maybe add in the future.\n  delete options.height;\n\n  Box.call(this, options);\n\n  this.pad = options.pad != null\n    ? options.pad\n    : 2;\n\n  this.setData(options.rows || options.data);\n\n  this.on('attach', function() {\n    self.setContent('');\n    self.setData(self.rows);\n  });\n\n  this.on('resize', function() {\n    self.setContent('');\n    self.setData(self.rows);\n    self.screen.render();\n  });\n}\n\nTable.prototype.__proto__ = Box.prototype;\n\nTable.prototype.type = 'table';\n\nTable.prototype._calculateMaxes = function() {\n  var self = this;\n  var maxes = [];\n\n  if (this.detached) return;\n\n  this.rows = this.rows || [];\n\n  this.rows.forEach(function(row) {\n    row.forEach(function(cell, i) {\n      var clen = self.strWidth(cell);\n      if (!maxes[i] || maxes[i] < clen) {\n        maxes[i] = clen;\n      }\n    });\n  });\n\n  var total = maxes.reduce(function(total, max) {\n    return total + max;\n  }, 0);\n  total += maxes.length + 1;\n\n  // XXX There might be an issue with resizing where on the first resize event\n  // width appears to be less than total if it's a percentage or left/right\n  // combination.\n  if (this.width < total) {\n    delete this.position.width;\n  }\n\n  if (this.position.width != null) {\n    var missing = this.width - total;\n    var w = missing / maxes.length | 0;\n    var wr = missing % maxes.length;\n    maxes = maxes.map(function(max, i) {\n      if (i === maxes.length - 1) {\n        return max + w + wr;\n      }\n      return max + w;\n    });\n  } else {\n    maxes = maxes.map(function(max) {\n      return max + self.pad;\n    });\n  }\n\n  return this._maxes = maxes;\n};\n\nTable.prototype.setRows =\nTable.prototype.setData = function(rows) {\n  var self = this\n    , text = ''\n    , align = this.align;\n\n  this.rows = rows || [];\n\n  this._calculateMaxes();\n\n  if (!this._maxes) return;\n\n  this.rows.forEach(function(row, i) {\n    var isFooter = i === self.rows.length - 1;\n    row.forEach(function(cell, i) {\n      var width = self._maxes[i];\n      var clen = self.strWidth(cell);\n\n      if (i !== 0) {\n        text += ' ';\n      }\n\n      while (clen < width) {\n        if (align === 'center') {\n          cell = ' ' + cell + ' ';\n          clen += 2;\n        } else if (align === 'left') {\n          cell = cell + ' ';\n          clen += 1;\n        } else if (align === 'right') {\n          cell = ' ' + cell;\n          clen += 1;\n        }\n      }\n\n      if (clen > width) {\n        if (align === 'center') {\n          cell = cell.substring(1);\n          clen--;\n        } else if (align === 'left') {\n          cell = cell.slice(0, -1);\n          clen--;\n        } else if (align === 'right') {\n          cell = cell.substring(1);\n          clen--;\n        }\n      }\n\n      text += cell;\n    });\n    if (!isFooter) {\n      text += '\\n\\n';\n    }\n  });\n\n  delete this.align;\n  this.setContent(text);\n  this.align = align;\n};\n\nTable.prototype.render = function() {\n  var self = this;\n\n  var coords = this._render();\n  if (!coords) return;\n\n  this._calculateMaxes();\n\n  if (!this._maxes) return coords;\n\n  var lines = this.screen.lines\n    , xi = coords.xi\n    , yi = coords.yi\n    , rx\n    , ry\n    , i;\n\n  var dattr = this.sattr(this.style)\n    , hattr = this.sattr(this.style.header)\n    , cattr = this.sattr(this.style.cell)\n    , battr = this.sattr(this.style.border);\n\n  var width = coords.xl - coords.xi - this.iright\n    , height = coords.yl - coords.yi - this.ibottom;\n\n  // Apply attributes to header cells and cells.\n  for (var y = this.itop; y < height; y++) {\n    if (!lines[yi + y]) break;\n    for (var x = this.ileft; x < width; x++) {\n      if (!lines[yi + y][xi + x]) break;\n      // Check to see if it's not the default attr. Allows for tags:\n      if (lines[yi + y][xi + x][0] !== dattr) continue;\n      if (y === this.itop) {\n        lines[yi + y][xi + x][0] = hattr;\n      } else {\n        lines[yi + y][xi + x][0] = cattr;\n      }\n      lines[yi + y].dirty = true;\n    }\n  }\n\n  if (!this.border || this.options.noCellBorders) return coords;\n\n  // Draw border with correct angles.\n  ry = 0;\n  for (i = 0; i < self.rows.length + 1; i++) {\n    if (!lines[yi + ry]) break;\n    rx = 0;\n    self._maxes.forEach(function(max, i) {\n      rx += max;\n      if (i === 0) {\n        if (!lines[yi + ry][xi + 0]) return;\n        // left side\n        if (ry === 0) {\n          // top\n          lines[yi + ry][xi + 0][0] = battr;\n          // lines[yi + ry][xi + 0][1] = '\\u250c'; // '┌'\n        } else if (ry / 2 === self.rows.length) {\n          // bottom\n          lines[yi + ry][xi + 0][0] = battr;\n          // lines[yi + ry][xi + 0][1] = '\\u2514'; // '└'\n        } else {\n          // middle\n          lines[yi + ry][xi + 0][0] = battr;\n          lines[yi + ry][xi + 0][1] = '\\u251c'; // '├'\n          // XXX If we alter iwidth and ileft for no borders - nothing should be written here\n          if (!self.border.left) {\n            lines[yi + ry][xi + 0][1] = '\\u2500'; // '─'\n          }\n        }\n        lines[yi + ry].dirty = true;\n      } else if (i === self._maxes.length - 1) {\n        if (!lines[yi + ry][xi + rx + 1]) return;\n        // right side\n        if (ry === 0) {\n          // top\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n          // lines[yi + ry][xi + rx][1] = '\\u2510'; // '┐'\n        } else if (ry / 2 === self.rows.length) {\n          // bottom\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n          // lines[yi + ry][xi + rx][1] = '\\u2518'; // '┘'\n        } else {\n          // middle\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n          lines[yi + ry][xi + rx][1] = '\\u2524'; // '┤'\n          // XXX If we alter iwidth and iright for no borders - nothing should be written here\n          if (!self.border.right) {\n            lines[yi + ry][xi + rx][1] = '\\u2500'; // '─'\n          }\n        }\n        lines[yi + ry].dirty = true;\n        return;\n      }\n      if (!lines[yi + ry][xi + rx + 1]) return;\n      // center\n      if (ry === 0) {\n        // top\n        rx++;\n        lines[yi + ry][xi + rx][0] = battr;\n        lines[yi + ry][xi + rx][1] = '\\u252c'; // '┬'\n        // XXX If we alter iheight and itop for no borders - nothing should be written here\n        if (!self.border.top) {\n          lines[yi + ry][xi + rx][1] = '\\u2502'; // '│'\n        }\n      } else if (ry / 2 === self.rows.length) {\n        // bottom\n        rx++;\n        lines[yi + ry][xi + rx][0] = battr;\n        lines[yi + ry][xi + rx][1] = '\\u2534'; // '┴'\n        // XXX If we alter iheight and ibottom for no borders - nothing should be written here\n        if (!self.border.bottom) {\n          lines[yi + ry][xi + rx][1] = '\\u2502'; // '│'\n        }\n      } else {\n        // middle\n        if (self.options.fillCellBorders) {\n          var lbg = (ry <= 2 ? hattr : cattr) & 0x1ff;\n          rx++;\n          lines[yi + ry][xi + rx][0] = (battr & ~0x1ff) | lbg;\n        } else {\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n        }\n        lines[yi + ry][xi + rx][1] = '\\u253c'; // '┼'\n        // rx++;\n      }\n      lines[yi + ry].dirty = true;\n    });\n    ry += 2;\n  }\n\n  // Draw internal borders.\n  for (ry = 1; ry < self.rows.length * 2; ry++) {\n    if (!lines[yi + ry]) break;\n    rx = 0;\n    self._maxes.slice(0, -1).forEach(function(max) {\n      rx += max;\n      if (!lines[yi + ry][xi + rx + 1]) return;\n      if (ry % 2 !== 0) {\n        if (self.options.fillCellBorders) {\n          var lbg = (ry <= 2 ? hattr : cattr) & 0x1ff;\n          rx++;\n          lines[yi + ry][xi + rx][0] = (battr & ~0x1ff) | lbg;\n        } else {\n          rx++;\n          lines[yi + ry][xi + rx][0] = battr;\n        }\n        lines[yi + ry][xi + rx][1] = '\\u2502'; // '│'\n        lines[yi + ry].dirty = true;\n      } else {\n        rx++;\n      }\n    });\n    rx = 1;\n    self._maxes.forEach(function(max) {\n      while (max--) {\n        if (ry % 2 === 0) {\n          if (!lines[yi + ry]) break;\n          if (!lines[yi + ry][xi + rx + 1]) break;\n          if (self.options.fillCellBorders) {\n            var lbg = (ry <= 2 ? hattr : cattr) & 0x1ff;\n            lines[yi + ry][xi + rx][0] = (battr & ~0x1ff) | lbg;\n          } else {\n            lines[yi + ry][xi + rx][0] = battr;\n          }\n          lines[yi + ry][xi + rx][1] = '\\u2500'; // '─'\n          lines[yi + ry].dirty = true;\n        }\n        rx++;\n      }\n      rx++;\n    });\n  }\n\n  return coords;\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Table;\n"]},"metadata":{},"sourceType":"script"}