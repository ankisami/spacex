{"ast":null,"code":"/**\n * Copyright Keymetrics Team. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\n'use strict';\n\nconst path = require('path');\n\nlet PM2_HOME;\n\nif (process.env.PM2_HOME) {\n  PM2_HOME = process.env.PM2_HOME;\n} else if (process.env.HOME && !process.env.HOMEPATH) {\n  PM2_HOME = path.resolve(process.env.HOME, '.pm2');\n} else if (process.env.HOME || process.env.HOMEPATH) {\n  PM2_HOME = path.resolve(process.env.HOMEDRIVE, process.env.HOME || process.env.HOMEPATH, '.pm2');\n} else {\n  PM2_HOME = path.resolve('/etc', '.pm2');\n}\n\nconst getUniqueId = () => {\n  var s = [];\n  var hexDigits = '0123456789abcdef';\n\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n  }\n\n  s[14] = '4';\n  s[19] = hexDigits.substr(s[19] & 0x3 | 0x8, 1);\n  s[8] = s[13] = s[18] = s[23] = '-';\n  return s.join('');\n};\n/**\n * Convert value to boolean but false if undefined\n * @param {String} value\n * @param {String} fallback default value\n * @return {Boolean}\n */\n\n\nconst useIfDefined = (value, fallback) => {\n  if (typeof value === 'undefined') {\n    return fallback;\n  } else {\n    return value === 'true';\n  }\n};\n\nlet cst = {\n  DEBUG: process.env.PM2_DEBUG || false,\n  KEYMETRICS_ROOT_URL: process.env.KEYMETRICS_NODE || 'https://root.keymetrics.io',\n  PROTOCOL_VERSION: 1,\n  COMPRESS_PROTOCOL: false,\n  STATUS_INTERVAL: 1000,\n  PACKET_QUEUE_SIZE: 200,\n  PROXY: process.env.PM2_PROXY,\n  LOGS_BUFFER: 8,\n  CONTEXT_ON_ERROR: 4,\n  TRANSACTION_FLUSH_INTERVAL: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'local_test') ? 1000 : 30000,\n  AGGREGATION_DURATION: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'test' || process.env.NODE_ENV === 'development') ? 0 : 60 * 10,\n  TRACE_FLUSH_INTERVAL: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'local_test') ? 1000 : 60000,\n  PM2_HOME: PM2_HOME,\n  DAEMON_RPC_PORT: path.resolve(PM2_HOME, 'rpc.sock'),\n  DAEMON_PUB_PORT: path.resolve(PM2_HOME, 'pub.sock'),\n  INTERACTOR_RPC_PORT: path.resolve(PM2_HOME, 'interactor.sock'),\n  INTERACTOR_LOG_FILE_PATH: path.resolve(PM2_HOME, 'agent.log'),\n  INTERACTOR_PID_PATH: path.resolve(PM2_HOME, 'agent.pid'),\n  INTERACTION_CONF: path.resolve(PM2_HOME, 'agent.json5'),\n  DUMP_FILE_PATH: path.resolve(PM2_HOME, 'dump.pm2'),\n  UNIQUE_SERVER_ID: getUniqueId(),\n  ENABLE_CONTEXT_ON_ERROR: useIfDefined(process.env.PM2_AGENT_ENABLE_CONTEXT_ON_ERROR, true),\n  SUCCESS_EXIT: 0,\n  ERROR_EXIT: 1\n}; // allow overide of file paths via environnement\n\nlet keys = Object.keys(cst);\nkeys.forEach(key => {\n  var envKey = key.indexOf('PM2_') > -1 ? key : 'PM2_' + key;\n\n  if (process.env[envKey] && key !== 'PM2_HOME' && key !== 'PM2_ROOT_PATH') {\n    cst[key] = process.env[envKey];\n  }\n});\n\nif (process.platform === 'win32' || process.platform === 'win64') {\n  // @todo instead of static unique rpc/pub file custom with PM2_HOME or UID\n  cst.DAEMON_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\rpc.sock';\n  cst.DAEMON_PUB_PORT = '\\\\\\\\.\\\\pipe\\\\pub.sock';\n  cst.INTERACTOR_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\interactor.sock';\n}\n\nmodule.exports = cst;","map":{"version":3,"sources":["/Users/samianki/node_modules/@pm2/agent/constants.js"],"names":["path","require","PM2_HOME","process","env","HOME","HOMEPATH","resolve","HOMEDRIVE","getUniqueId","s","hexDigits","i","substr","Math","floor","random","join","useIfDefined","value","fallback","cst","DEBUG","PM2_DEBUG","KEYMETRICS_ROOT_URL","KEYMETRICS_NODE","PROTOCOL_VERSION","COMPRESS_PROTOCOL","STATUS_INTERVAL","PACKET_QUEUE_SIZE","PROXY","PM2_PROXY","LOGS_BUFFER","CONTEXT_ON_ERROR","TRANSACTION_FLUSH_INTERVAL","NODE_ENV","AGGREGATION_DURATION","TRACE_FLUSH_INTERVAL","DAEMON_RPC_PORT","DAEMON_PUB_PORT","INTERACTOR_RPC_PORT","INTERACTOR_LOG_FILE_PATH","INTERACTOR_PID_PATH","INTERACTION_CONF","DUMP_FILE_PATH","UNIQUE_SERVER_ID","ENABLE_CONTEXT_ON_ERROR","PM2_AGENT_ENABLE_CONTEXT_ON_ERROR","SUCCESS_EXIT","ERROR_EXIT","keys","Object","forEach","key","envKey","indexOf","platform","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright Keymetrics Team. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\n\n'use strict'\n\nconst path = require('path')\nlet PM2_HOME\n\nif (process.env.PM2_HOME) {\n  PM2_HOME = process.env.PM2_HOME\n} else if (process.env.HOME && !process.env.HOMEPATH) {\n  PM2_HOME = path.resolve(process.env.HOME, '.pm2')\n} else if (process.env.HOME || process.env.HOMEPATH) {\n  PM2_HOME = path.resolve(process.env.HOMEDRIVE, process.env.HOME || process.env.HOMEPATH, '.pm2')\n} else {\n  PM2_HOME = path.resolve('/etc', '.pm2')\n}\n\nconst getUniqueId = () => {\n  var s = []\n  var hexDigits = '0123456789abcdef'\n  for (var i = 0; i < 36; i++) {\n    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\n  }\n  s[14] = '4'\n  s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1)\n  s[8] = s[13] = s[18] = s[23] = '-'\n  return s.join('')\n}\n\n/**\n * Convert value to boolean but false if undefined\n * @param {String} value\n * @param {String} fallback default value\n * @return {Boolean}\n */\nconst useIfDefined = (value, fallback) => {\n  if (typeof value === 'undefined') {\n    return fallback\n  } else {\n    return value === 'true'\n  }\n}\n\nlet cst = {\n  DEBUG: process.env.PM2_DEBUG || false,\n  KEYMETRICS_ROOT_URL: process.env.KEYMETRICS_NODE || 'https://root.keymetrics.io',\n\n  PROTOCOL_VERSION: 1,\n  COMPRESS_PROTOCOL: false,\n  STATUS_INTERVAL: 1000,\n  PACKET_QUEUE_SIZE: 200,\n  PROXY: process.env.PM2_PROXY,\n\n  LOGS_BUFFER: 8,\n  CONTEXT_ON_ERROR: 4,\n  TRANSACTION_FLUSH_INTERVAL: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'local_test') ? 1000 : 30000,\n  AGGREGATION_DURATION: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'test' || process.env.NODE_ENV === 'development') ? 0 : 60 * 10,\n  TRACE_FLUSH_INTERVAL: useIfDefined(process.env.PM2_DEBUG, process.env.NODE_ENV === 'local_test') ? 1000 : 60000,\n\n  PM2_HOME: PM2_HOME,\n  DAEMON_RPC_PORT: path.resolve(PM2_HOME, 'rpc.sock'),\n  DAEMON_PUB_PORT: path.resolve(PM2_HOME, 'pub.sock'),\n  INTERACTOR_RPC_PORT: path.resolve(PM2_HOME, 'interactor.sock'),\n  INTERACTOR_LOG_FILE_PATH: path.resolve(PM2_HOME, 'agent.log'),\n  INTERACTOR_PID_PATH: path.resolve(PM2_HOME, 'agent.pid'),\n  INTERACTION_CONF: path.resolve(PM2_HOME, 'agent.json5'),\n\n  DUMP_FILE_PATH: path.resolve(PM2_HOME, 'dump.pm2'),\n\n  UNIQUE_SERVER_ID: getUniqueId(),\n\n  ENABLE_CONTEXT_ON_ERROR: useIfDefined(process.env.PM2_AGENT_ENABLE_CONTEXT_ON_ERROR, true),\n\n  SUCCESS_EXIT: 0,\n  ERROR_EXIT: 1\n}\n\n// allow overide of file paths via environnement\nlet keys = Object.keys(cst)\nkeys.forEach((key) => {\n  var envKey = key.indexOf('PM2_') > -1 ? key : 'PM2_' + key\n  if (process.env[envKey] && key !== 'PM2_HOME' && key !== 'PM2_ROOT_PATH') {\n    cst[key] = process.env[envKey]\n  }\n})\n\nif (process.platform === 'win32' || process.platform === 'win64') {\n  // @todo instead of static unique rpc/pub file custom with PM2_HOME or UID\n  cst.DAEMON_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\rpc.sock'\n  cst.DAEMON_PUB_PORT = '\\\\\\\\.\\\\pipe\\\\pub.sock'\n  cst.INTERACTOR_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\interactor.sock'\n}\n\nmodule.exports = cst\n"]},"metadata":{},"sourceType":"script"}