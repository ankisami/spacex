{"ast":null,"code":"var fs = require('fs');\n\nvar getUsers = function () {\n  return fs.readFileSync('/etc/passwd').toString().split('\\n').filter(function (user) {\n    return user.length && user[0] != '#';\n  }).reduce(function (map, user) {\n    var fields = user.split(':');\n    map[fields[0]] = map[fields[2]] = {\n      username: fields[0],\n      password: fields[1],\n      userId: fields[2],\n      groupId: fields[3],\n      name: fields[4].split(',')[0],\n      homedir: fields[5],\n      shell: fields[6]\n    };\n    return map;\n  }, {});\n};\n\nvar getGroups = function (cb) {\n  var groups;\n\n  try {\n    groups = fs.readFileSync('/etc/group');\n  } catch (e) {\n    return e;\n  }\n\n  return groups.toString().split('\\n').filter(function (group) {\n    return group.length && group[0] != '#';\n  }).reduce(function (map, group) {\n    var fields = group.split(':');\n    map[fields[0]] = map[fields[2]] = {\n      name: fields[0],\n      password: fields[1],\n      id: fields[2],\n      members: fields[3].split(',')\n    };\n    return map;\n  }, {});\n};\n\nmodule.exports = {\n  getUsers,\n  getGroups\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/tools/passwd.js"],"names":["fs","require","getUsers","readFileSync","toString","split","filter","user","length","reduce","map","fields","username","password","userId","groupId","name","homedir","shell","getGroups","cb","groups","e","group","id","members","module","exports"],"mappings":"AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAEA,IAAIC,QAAQ,GAAG,YAAW;AACxB,SAAOF,EAAE,CAACG,YAAH,CAAgB,aAAhB,EACJC,QADI,GAEJC,KAFI,CAEE,IAFF,EAGJC,MAHI,CAGG,UAAUC,IAAV,EAAgB;AACtB,WAAOA,IAAI,CAACC,MAAL,IAAeD,IAAI,CAAC,CAAD,CAAJ,IAAW,GAAjC;AACD,GALI,EAMJE,MANI,CAMG,UAASC,GAAT,EAAcH,IAAd,EAAoB;AAC1B,QAAII,MAAM,GAAGJ,IAAI,CAACF,KAAL,CAAW,GAAX,CAAb;AAEAK,IAAAA,GAAG,CAACC,MAAM,CAAC,CAAD,CAAP,CAAH,GAAiBD,GAAG,CAACC,MAAM,CAAC,CAAD,CAAP,CAAH,GAAiB;AAChCC,MAAAA,QAAQ,EAAGD,MAAM,CAAC,CAAD,CADe;AAEhCE,MAAAA,QAAQ,EAAGF,MAAM,CAAC,CAAD,CAFe;AAGhCG,MAAAA,MAAM,EAAGH,MAAM,CAAC,CAAD,CAHiB;AAIhCI,MAAAA,OAAO,EAAGJ,MAAM,CAAC,CAAD,CAJgB;AAKhCK,MAAAA,IAAI,EAAGL,MAAM,CAAC,CAAD,CAAN,CAAUN,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CALyB;AAMhCY,MAAAA,OAAO,EAAGN,MAAM,CAAC,CAAD,CANgB;AAOhCO,MAAAA,KAAK,EAAGP,MAAM,CAAC,CAAD;AAPkB,KAAlC;AAUA,WAAOD,GAAP;AACD,GApBI,EAoBF,EApBE,CAAP;AAqBD,CAtBD;;AAwBA,IAAIS,SAAS,GAAG,UAASC,EAAT,EAAa;AAC3B,MAAIC,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAGrB,EAAE,CAACG,YAAH,CAAgB,YAAhB,CAAT;AACD,GAFD,CAEE,OAAMmB,CAAN,EAAS;AACT,WAAOA,CAAP;AACD;;AAED,SAAOD,MAAM,CACVjB,QADI,GAEJC,KAFI,CAEE,IAFF,EAGJC,MAHI,CAGG,UAAUiB,KAAV,EAAiB;AACvB,WAAOA,KAAK,CAACf,MAAN,IAAgBe,KAAK,CAAC,CAAD,CAAL,IAAY,GAAnC;AACD,GALI,EAMJd,MANI,CAMG,UAASC,GAAT,EAAca,KAAd,EAAqB;AAC3B,QAAIZ,MAAM,GAAGY,KAAK,CAAClB,KAAN,CAAY,GAAZ,CAAb;AACAK,IAAAA,GAAG,CAACC,MAAM,CAAC,CAAD,CAAP,CAAH,GAAiBD,GAAG,CAACC,MAAM,CAAC,CAAD,CAAP,CAAH,GAAiB;AAChCK,MAAAA,IAAI,EAAGL,MAAM,CAAC,CAAD,CADmB;AAEhCE,MAAAA,QAAQ,EAAGF,MAAM,CAAC,CAAD,CAFe;AAGhCa,MAAAA,EAAE,EAAGb,MAAM,CAAC,CAAD,CAHqB;AAIhCc,MAAAA,OAAO,EAAGd,MAAM,CAAC,CAAD,CAAN,CAAUN,KAAV,CAAgB,GAAhB;AAJsB,KAAlC;AAMA,WAAOK,GAAP;AACD,GAfI,EAeF,EAfE,CAAP;AAgBD,CAzBD;;AA2BAgB,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,QADe;AAEfiB,EAAAA;AAFe,CAAjB","sourcesContent":["\nvar fs = require('fs')\n\nvar getUsers = function() {\n  return fs.readFileSync('/etc/passwd')\n    .toString()\n    .split('\\n')\n    .filter(function (user) {\n      return user.length && user[0] != '#';\n    })\n    .reduce(function(map, user) {\n      var fields = user.split(':');\n\n      map[fields[0]] = map[fields[2]] = {\n        username : fields[0],\n        password : fields[1],\n        userId : fields[2],\n        groupId : fields[3],\n        name : fields[4].split(',')[0],\n        homedir : fields[5],\n        shell : fields[6]\n      };\n\n      return map\n    }, {})\n}\n\nvar getGroups = function(cb) {\n  var groups\n\n  try {\n    groups = fs.readFileSync('/etc/group')\n  } catch(e) {\n    return e\n  }\n\n  return groups\n    .toString()\n    .split('\\n')\n    .filter(function (group) {\n      return group.length && group[0] != '#';\n    })\n    .reduce(function(map, group) {\n      var fields = group.split(':');\n      map[fields[0]] = map[fields[2]] = {\n        name : fields[0],\n        password : fields[1],\n        id : fields[2],\n        members : fields[3].split(',')\n      };\n      return map;\n    }, {})\n}\n\nmodule.exports = {\n  getUsers,\n  getGroups\n}\n"]},"metadata":{},"sourceType":"script"}