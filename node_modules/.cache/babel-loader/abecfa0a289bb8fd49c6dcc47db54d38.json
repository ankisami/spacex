{"ast":null,"code":"/**\n * prompt.js - prompt element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar Node = require('./node');\n\nvar Box = require('./box');\n\nvar Button = require('./button');\n\nvar Textbox = require('./textbox');\n/**\n * Prompt\n */\n\n\nfunction Prompt(options) {\n  if (!(this instanceof Node)) {\n    return new Prompt(options);\n  }\n\n  options = options || {};\n  options.hidden = true;\n  Box.call(this, options);\n  this._.input = new Textbox({\n    parent: this,\n    top: 3,\n    height: 1,\n    left: 2,\n    right: 2,\n    bg: 'black'\n  });\n  this._.okay = new Button({\n    parent: this,\n    top: 5,\n    height: 1,\n    left: 2,\n    width: 6,\n    content: 'Okay',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n  this._.cancel = new Button({\n    parent: this,\n    top: 5,\n    height: 1,\n    shrink: true,\n    left: 10,\n    width: 8,\n    content: 'Cancel',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n}\n\nPrompt.prototype.__proto__ = Box.prototype;\nPrompt.prototype.type = 'prompt';\n\nPrompt.prototype.input = Prompt.prototype.setInput = Prompt.prototype.readInput = function (text, value, callback) {\n  var self = this;\n  var okay, cancel;\n\n  if (!callback) {\n    callback = value;\n    value = '';\n  } // Keep above:\n  // var parent = this.parent;\n  // this.detach();\n  // parent.append(this);\n\n\n  this.show();\n  this.setContent(' ' + text);\n  this._.input.value = value;\n  this.screen.saveFocus();\n\n  this._.okay.on('press', okay = function () {\n    self._.input.submit();\n  });\n\n  this._.cancel.on('press', cancel = function () {\n    self._.input.cancel();\n  });\n\n  this._.input.readInput(function (err, data) {\n    self.hide();\n    self.screen.restoreFocus();\n\n    self._.okay.removeListener('press', okay);\n\n    self._.cancel.removeListener('press', cancel);\n\n    return callback(err, data);\n  });\n\n  this.screen.render();\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Prompt;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/prompt.js"],"names":["Node","require","Box","Button","Textbox","Prompt","options","hidden","call","_","input","parent","top","height","left","right","bg","okay","width","content","align","hoverBg","autoFocus","mouse","cancel","shrink","prototype","__proto__","type","setInput","readInput","text","value","callback","self","show","setContent","screen","saveFocus","on","submit","err","data","hide","restoreFocus","removeListener","render","module","exports"],"mappings":"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","sourcesContent":["/**\n * prompt.js - prompt element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar Node = require('./node');\nvar Box = require('./box');\nvar Button = require('./button');\nvar Textbox = require('./textbox');\n\n/**\n * Prompt\n */\n\nfunction Prompt(options) {\n  if (!(this instanceof Node)) {\n    return new Prompt(options);\n  }\n\n  options = options || {};\n\n  options.hidden = true;\n\n  Box.call(this, options);\n\n  this._.input = new Textbox({\n    parent: this,\n    top: 3,\n    height: 1,\n    left: 2,\n    right: 2,\n    bg: 'black'\n  });\n\n  this._.okay = new Button({\n    parent: this,\n    top: 5,\n    height: 1,\n    left: 2,\n    width: 6,\n    content: 'Okay',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n\n  this._.cancel = new Button({\n    parent: this,\n    top: 5,\n    height: 1,\n    shrink: true,\n    left: 10,\n    width: 8,\n    content: 'Cancel',\n    align: 'center',\n    bg: 'black',\n    hoverBg: 'blue',\n    autoFocus: false,\n    mouse: true\n  });\n}\n\nPrompt.prototype.__proto__ = Box.prototype;\n\nPrompt.prototype.type = 'prompt';\n\nPrompt.prototype.input =\nPrompt.prototype.setInput =\nPrompt.prototype.readInput = function(text, value, callback) {\n  var self = this;\n  var okay, cancel;\n\n  if (!callback) {\n    callback = value;\n    value = '';\n  }\n\n  // Keep above:\n  // var parent = this.parent;\n  // this.detach();\n  // parent.append(this);\n\n  this.show();\n  this.setContent(' ' + text);\n\n  this._.input.value = value;\n\n  this.screen.saveFocus();\n\n  this._.okay.on('press', okay = function() {\n    self._.input.submit();\n  });\n\n  this._.cancel.on('press', cancel = function() {\n    self._.input.cancel();\n  });\n\n  this._.input.readInput(function(err, data) {\n    self.hide();\n    self.screen.restoreFocus();\n    self._.okay.removeListener('press', okay);\n    self._.cancel.removeListener('press', cancel);\n    return callback(err, data);\n  });\n\n  this.screen.render();\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Prompt;\n"]},"metadata":{},"sourceType":"script"}