{"ast":null,"code":"'use strict';\n\nvar stats = require('./lib/stats');\n/**\n * Get pid informations.\n * @public\n * @param  {Number|Number[]|String|String[]} pids A pid or a list of pids.\n * @param  {Object} [options={}] Options object\n * @param  {Function} [callback=undefined] Called when the statistics are ready.\n * If not provided a promise is returned instead.\n * @returns  {Promise.<Object>} Only when the callback is not provided.\n */\n\n\nfunction pidusage(pids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if (options === undefined) {\n    options = {};\n  }\n\n  if (typeof callback === 'function') {\n    stats(pids, options, callback);\n    return;\n  }\n\n  return new Promise(function (resolve, reject) {\n    stats(pids, options, function (err, data) {\n      if (err) return reject(err);\n      resolve(data);\n    });\n  });\n}\n\nmodule.exports = pidusage;\nmodule.exports.clear = require('./lib/history').clear;","map":{"version":3,"sources":["/Users/samianki/node_modules/pidusage/index.js"],"names":["stats","require","pidusage","pids","options","callback","undefined","Promise","resolve","reject","err","data","module","exports","clear"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AAC1C,MAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,GAAGD,OAAX;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIA,OAAO,KAAKE,SAAhB,EAA2B;AACzBF,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAClCL,IAAAA,KAAK,CAACG,IAAD,EAAOC,OAAP,EAAgBC,QAAhB,CAAL;AACA;AACD;;AAED,SAAO,IAAIE,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CT,IAAAA,KAAK,CAACG,IAAD,EAAOC,OAAP,EAAgB,UAAUM,GAAV,EAAeC,IAAf,EAAqB;AACxC,UAAID,GAAJ,EAAS,OAAOD,MAAM,CAACC,GAAD,CAAb;AACTF,MAAAA,OAAO,CAACG,IAAD,CAAP;AACD,KAHI,CAAL;AAID,GALM,CAAP;AAMD;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,QAAjB;AACAU,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBb,OAAO,CAAC,eAAD,CAAP,CAAyBa,KAAhD","sourcesContent":["'use strict'\n\nvar stats = require('./lib/stats')\n\n/**\n * Get pid informations.\n * @public\n * @param  {Number|Number[]|String|String[]} pids A pid or a list of pids.\n * @param  {Object} [options={}] Options object\n * @param  {Function} [callback=undefined] Called when the statistics are ready.\n * If not provided a promise is returned instead.\n * @returns  {Promise.<Object>} Only when the callback is not provided.\n */\nfunction pidusage (pids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  if (options === undefined) {\n    options = {}\n  }\n\n  if (typeof callback === 'function') {\n    stats(pids, options, callback)\n    return\n  }\n\n  return new Promise(function (resolve, reject) {\n    stats(pids, options, function (err, data) {\n      if (err) return reject(err)\n      resolve(data)\n    })\n  })\n}\n\nmodule.exports = pidusage\nmodule.exports.clear = require('./lib/history').clear\n"]},"metadata":{},"sourceType":"script"}