{"ast":null,"code":"'use strict';\n\nconst Prompt = require('../types/string');\n\nconst completer = require('../completer');\n\nclass Input extends Prompt {\n  constructor(options) {\n    super(options);\n    let history = this.options.history;\n\n    if (history && history.store) {\n      let initial = history.values || this.initial;\n      this.autosave = !!history.autosave;\n      this.store = history.store;\n      this.data = this.store.get('values') || {\n        past: [],\n        present: initial\n      };\n      this.initial = this.data.present || this.data.past[this.data.past.length - 1];\n    }\n  }\n\n  completion(action) {\n    if (!this.store) return this.alert();\n    this.data = completer(action, this.data, this.input);\n    if (!this.data.present) return this.alert();\n    this.input = this.data.present;\n    this.cursor = this.input.length;\n    return this.render();\n  }\n\n  altUp() {\n    return this.completion('prev');\n  }\n\n  altDown() {\n    return this.completion('next');\n  }\n\n  prev() {\n    this.save();\n    return super.prev();\n  }\n\n  save() {\n    if (!this.store) return;\n    this.data = completer('save', this.data, this.input);\n    this.store.set('values', this.data);\n  }\n\n  submit() {\n    if (this.store && this.autosave === true) {\n      this.save();\n    }\n\n    return super.submit();\n  }\n\n}\n\nmodule.exports = Input;","map":{"version":3,"sources":["/Users/samianki/node_modules/enquirer/lib/prompts/input.js"],"names":["Prompt","require","completer","Input","constructor","options","history","store","initial","values","autosave","data","get","past","present","length","completion","action","alert","input","cursor","render","altUp","altDown","prev","save","set","submit","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,cAAD,CAAzB;;AAEA,MAAME,KAAN,SAAoBH,MAApB,CAA2B;AACzBI,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,UAAMA,OAAN;AACA,QAAIC,OAAO,GAAG,KAAKD,OAAL,CAAaC,OAA3B;;AACA,QAAIA,OAAO,IAAIA,OAAO,CAACC,KAAvB,EAA8B;AAC5B,UAAIC,OAAO,GAAGF,OAAO,CAACG,MAAR,IAAkB,KAAKD,OAArC;AACA,WAAKE,QAAL,GAAgB,CAAC,CAACJ,OAAO,CAACI,QAA1B;AACA,WAAKH,KAAL,GAAaD,OAAO,CAACC,KAArB;AACA,WAAKI,IAAL,GAAY,KAAKJ,KAAL,CAAWK,GAAX,CAAe,QAAf,KAA4B;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAEN;AAArB,OAAxC;AACA,WAAKA,OAAL,GAAe,KAAKG,IAAL,CAAUG,OAAV,IAAqB,KAAKH,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUE,IAAV,CAAeE,MAAf,GAAwB,CAAvC,CAApC;AACD;AACF;;AAEDC,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,QAAI,CAAC,KAAKV,KAAV,EAAiB,OAAO,KAAKW,KAAL,EAAP;AACjB,SAAKP,IAAL,GAAYT,SAAS,CAACe,MAAD,EAAS,KAAKN,IAAd,EAAoB,KAAKQ,KAAzB,CAArB;AACA,QAAI,CAAC,KAAKR,IAAL,CAAUG,OAAf,EAAwB,OAAO,KAAKI,KAAL,EAAP;AACxB,SAAKC,KAAL,GAAa,KAAKR,IAAL,CAAUG,OAAvB;AACA,SAAKM,MAAL,GAAc,KAAKD,KAAL,CAAWJ,MAAzB;AACA,WAAO,KAAKM,MAAL,EAAP;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,KAAKN,UAAL,CAAgB,MAAhB,CAAP;AACD;;AAEDO,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKP,UAAL,CAAgB,MAAhB,CAAP;AACD;;AAEDQ,EAAAA,IAAI,GAAG;AACL,SAAKC,IAAL;AACA,WAAO,MAAMD,IAAN,EAAP;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,QAAI,CAAC,KAAKlB,KAAV,EAAiB;AACjB,SAAKI,IAAL,GAAYT,SAAS,CAAC,MAAD,EAAS,KAAKS,IAAd,EAAoB,KAAKQ,KAAzB,CAArB;AACA,SAAKZ,KAAL,CAAWmB,GAAX,CAAe,QAAf,EAAyB,KAAKf,IAA9B;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKpB,KAAL,IAAc,KAAKG,QAAL,KAAkB,IAApC,EAA0C;AACxC,WAAKe,IAAL;AACD;;AACD,WAAO,MAAME,MAAN,EAAP;AACD;;AA9CwB;;AAiD3BC,MAAM,CAACC,OAAP,GAAiB1B,KAAjB","sourcesContent":["'use strict';\n\nconst Prompt = require('../types/string');\nconst completer = require('../completer');\n\nclass Input extends Prompt {\n  constructor(options) {\n    super(options);\n    let history = this.options.history;\n    if (history && history.store) {\n      let initial = history.values || this.initial;\n      this.autosave = !!history.autosave;\n      this.store = history.store;\n      this.data = this.store.get('values') || { past: [], present: initial };\n      this.initial = this.data.present || this.data.past[this.data.past.length - 1];\n    }\n  }\n\n  completion(action) {\n    if (!this.store) return this.alert();\n    this.data = completer(action, this.data, this.input);\n    if (!this.data.present) return this.alert();\n    this.input = this.data.present;\n    this.cursor = this.input.length;\n    return this.render();\n  }\n\n  altUp() {\n    return this.completion('prev');\n  }\n\n  altDown() {\n    return this.completion('next');\n  }\n\n  prev() {\n    this.save();\n    return super.prev();\n  }\n\n  save() {\n    if (!this.store) return;\n    this.data = completer('save', this.data, this.input);\n    this.store.set('values', this.data);\n  }\n\n  submit() {\n    if (this.store && this.autosave === true) {\n      this.save();\n    }\n    return super.submit();\n  }\n}\n\nmodule.exports = Input;\n"]},"metadata":{},"sourceType":"script"}