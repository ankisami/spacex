{"ast":null,"code":"/**\n * gpmclient.js - support the gpm mouse protocol\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\nvar net = require('net');\n\nvar fs = require('fs');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar GPM_USE_MAGIC = false;\nvar GPM_MOVE = 1,\n    GPM_DRAG = 2,\n    GPM_DOWN = 4,\n    GPM_UP = 8;\nvar GPM_DOUBLE = 32,\n    GPM_MFLAG = 128;\nvar GPM_REQ_NOPASTE = 3,\n    GPM_HARD = 256;\nvar GPM_MAGIC = 0x47706D4C;\nvar GPM_SOCKET = '/dev/gpmctl'; // typedef struct Gpm_Connect {\n//   unsigned short eventMask, defaultMask;\n//   unsigned short minMod, maxMod;\n//   int pid;\n//   int vc;\n// } Gpm_Connect;\n\nfunction send_config(socket, Gpm_Connect, callback) {\n  var buffer;\n\n  if (GPM_USE_MAGIC) {\n    buffer = new Buffer(20);\n    buffer.writeUInt32LE(GPM_MAGIC, 0);\n    buffer.writeUInt16LE(Gpm_Connect.eventMask, 4);\n    buffer.writeUInt16LE(Gpm_Connect.defaultMask, 6);\n    buffer.writeUInt16LE(Gpm_Connect.minMod, 8);\n    buffer.writeUInt16LE(Gpm_Connect.maxMod, 10);\n    buffer.writeInt16LE(process.pid, 12);\n    buffer.writeInt16LE(Gpm_Connect.vc, 16);\n  } else {\n    buffer = new Buffer(16);\n    buffer.writeUInt16LE(Gpm_Connect.eventMask, 0);\n    buffer.writeUInt16LE(Gpm_Connect.defaultMask, 2);\n    buffer.writeUInt16LE(Gpm_Connect.minMod, 4);\n    buffer.writeUInt16LE(Gpm_Connect.maxMod, 6);\n    buffer.writeInt16LE(Gpm_Connect.pid, 8);\n    buffer.writeInt16LE(Gpm_Connect.vc, 12);\n  }\n\n  socket.write(buffer, function () {\n    if (callback) callback();\n  });\n} // typedef struct Gpm_Event {\n//   unsigned char buttons, modifiers;  // try to be a multiple of 4\n//   unsigned short vc;\n//   short dx, dy, x, y; // displacement x,y for this event, and absolute x,y\n//   enum Gpm_Etype type;\n//   // clicks e.g. double click are determined by time-based processing\n//   int clicks;\n//   enum Gpm_Margin margin;\n//   // wdx/y: displacement of wheels in this event. Absolute values are not\n//   // required, because wheel movement is typically used for scrolling\n//   // or selecting fields, not for cursor positioning. The application\n//   // can determine when the end of file or form is reached, and not\n//   // go any further.\n//   // A single mouse will use wdy, \"vertical scroll\" wheel.\n//   short wdx, wdy;\n// } Gpm_Event;\n\n\nfunction parseEvent(raw) {\n  var evnt = {};\n  evnt.buttons = raw[0];\n  evnt.modifiers = raw[1];\n  evnt.vc = raw.readUInt16LE(2);\n  evnt.dx = raw.readInt16LE(4);\n  evnt.dy = raw.readInt16LE(6);\n  evnt.x = raw.readInt16LE(8);\n  evnt.y = raw.readInt16LE(10);\n  evnt.type = raw.readInt16LE(12);\n  evnt.clicks = raw.readInt32LE(16);\n  evnt.margin = raw.readInt32LE(20);\n  evnt.wdx = raw.readInt16LE(24);\n  evnt.wdy = raw.readInt16LE(26);\n  return evnt;\n}\n\nfunction GpmClient(options) {\n  if (!(this instanceof GpmClient)) {\n    return new GpmClient(options);\n  }\n\n  EventEmitter.call(this);\n  var pid = process.pid; // check tty for /dev/tty[n]\n\n  var path;\n\n  try {\n    path = fs.readlinkSync('/proc/' + pid + '/fd/0');\n  } catch (e) {\n    ;\n  }\n\n  var tty = /tty[0-9]+$/.exec(path);\n\n  if (tty === null) {// TODO: should  also check for /dev/input/..\n  }\n\n  var vc;\n\n  if (tty) {\n    tty = tty[0];\n    vc = +/[0-9]+$/.exec(tty)[0];\n  }\n\n  var self = this;\n\n  if (tty) {\n    fs.stat(GPM_SOCKET, function (err, stat) {\n      if (err || !stat.isSocket()) {\n        return;\n      }\n\n      var conf = {\n        eventMask: 0xffff,\n        defaultMask: GPM_MOVE | GPM_HARD,\n        minMod: 0,\n        maxMod: 0xffff,\n        pid: pid,\n        vc: vc\n      };\n      var gpm = net.createConnection(GPM_SOCKET);\n      this.gpm = gpm;\n      gpm.on('connect', function () {\n        send_config(gpm, conf, function () {\n          conf.pid = 0;\n          conf.vc = GPM_REQ_NOPASTE; //send_config(gpm, conf);\n        });\n      });\n      gpm.on('data', function (packet) {\n        var evnt = parseEvent(packet);\n\n        switch (evnt.type & 15) {\n          case GPM_MOVE:\n            if (evnt.dx || evnt.dy) {\n              self.emit('move', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n\n            if (evnt.wdx || evnt.wdy) {\n              self.emit('mousewheel', evnt.buttons, evnt.modifiers, evnt.x, evnt.y, evnt.wdx, evnt.wdy);\n            }\n\n            break;\n\n          case GPM_DRAG:\n            if (evnt.dx || evnt.dy) {\n              self.emit('drag', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n\n            if (evnt.wdx || evnt.wdy) {\n              self.emit('mousewheel', evnt.buttons, evnt.modifiers, evnt.x, evnt.y, evnt.wdx, evnt.wdy);\n            }\n\n            break;\n\n          case GPM_DOWN:\n            self.emit('btndown', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n\n            if (evnt.type & GPM_DOUBLE) {\n              self.emit('dblclick', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n\n            break;\n\n          case GPM_UP:\n            self.emit('btnup', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n\n            if (!(evnt.type & GPM_MFLAG)) {\n              self.emit('click', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n\n            break;\n        }\n      });\n      gpm.on('error', function () {\n        self.stop();\n      });\n    });\n  }\n}\n\nGpmClient.prototype.__proto__ = EventEmitter.prototype;\n\nGpmClient.prototype.stop = function () {\n  if (this.gpm) {\n    this.gpm.end();\n  }\n\n  delete this.gpm;\n};\n\nGpmClient.prototype.ButtonName = function (btn) {\n  if (btn & 4) return 'left';\n  if (btn & 2) return 'middle';\n  if (btn & 1) return 'right';\n  return '';\n};\n\nGpmClient.prototype.hasShiftKey = function (mod) {\n  return mod & 1 ? true : false;\n};\n\nGpmClient.prototype.hasCtrlKey = function (mod) {\n  return mod & 4 ? true : false;\n};\n\nGpmClient.prototype.hasMetaKey = function (mod) {\n  return mod & 8 ? true : false;\n};\n\nmodule.exports = GpmClient;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/gpmclient.js"],"names":["net","require","fs","EventEmitter","GPM_USE_MAGIC","GPM_MOVE","GPM_DRAG","GPM_DOWN","GPM_UP","GPM_DOUBLE","GPM_MFLAG","GPM_REQ_NOPASTE","GPM_HARD","GPM_MAGIC","GPM_SOCKET","send_config","socket","Gpm_Connect","callback","buffer","Buffer","writeUInt32LE","writeUInt16LE","eventMask","defaultMask","minMod","maxMod","writeInt16LE","process","pid","vc","write","parseEvent","raw","evnt","buttons","modifiers","readUInt16LE","dx","readInt16LE","dy","x","y","type","clicks","readInt32LE","margin","wdx","wdy","GpmClient","options","call","path","readlinkSync","e","tty","exec","self","stat","err","isSocket","conf","gpm","createConnection","on","packet","emit","stop","prototype","__proto__","end","ButtonName","btn","hasShiftKey","mod","hasCtrlKey","hasMetaKey","module","exports"],"mappings":"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","sourcesContent":["/**\n * gpmclient.js - support the gpm mouse protocol\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\nvar net = require('net');\nvar fs = require('fs');\nvar EventEmitter = require('events').EventEmitter;\n\nvar GPM_USE_MAGIC = false;\n\nvar GPM_MOVE = 1\n  , GPM_DRAG = 2\n  , GPM_DOWN = 4\n  , GPM_UP = 8;\n\nvar GPM_DOUBLE = 32\n  , GPM_MFLAG = 128;\n\nvar GPM_REQ_NOPASTE = 3\n  , GPM_HARD = 256;\n\nvar GPM_MAGIC = 0x47706D4C;\nvar GPM_SOCKET = '/dev/gpmctl';\n\n// typedef struct Gpm_Connect {\n//   unsigned short eventMask, defaultMask;\n//   unsigned short minMod, maxMod;\n//   int pid;\n//   int vc;\n// } Gpm_Connect;\n\nfunction send_config(socket, Gpm_Connect,  callback) {\n  var buffer;\n  if (GPM_USE_MAGIC) {\n    buffer = new Buffer(20);\n    buffer.writeUInt32LE(GPM_MAGIC, 0);\n    buffer.writeUInt16LE(Gpm_Connect.eventMask, 4);\n    buffer.writeUInt16LE(Gpm_Connect.defaultMask, 6);\n    buffer.writeUInt16LE(Gpm_Connect.minMod, 8);\n    buffer.writeUInt16LE(Gpm_Connect.maxMod, 10);\n    buffer.writeInt16LE(process.pid, 12);\n    buffer.writeInt16LE(Gpm_Connect.vc, 16);\n  } else {\n    buffer = new Buffer(16);\n    buffer.writeUInt16LE(Gpm_Connect.eventMask, 0);\n    buffer.writeUInt16LE(Gpm_Connect.defaultMask, 2);\n    buffer.writeUInt16LE(Gpm_Connect.minMod, 4);\n    buffer.writeUInt16LE(Gpm_Connect.maxMod, 6);\n    buffer.writeInt16LE(Gpm_Connect.pid, 8);\n    buffer.writeInt16LE(Gpm_Connect.vc, 12);\n  }\n  socket.write(buffer, function() {\n    if (callback) callback();\n  });\n}\n\n// typedef struct Gpm_Event {\n//   unsigned char buttons, modifiers;  // try to be a multiple of 4\n//   unsigned short vc;\n//   short dx, dy, x, y; // displacement x,y for this event, and absolute x,y\n//   enum Gpm_Etype type;\n//   // clicks e.g. double click are determined by time-based processing\n//   int clicks;\n//   enum Gpm_Margin margin;\n//   // wdx/y: displacement of wheels in this event. Absolute values are not\n//   // required, because wheel movement is typically used for scrolling\n//   // or selecting fields, not for cursor positioning. The application\n//   // can determine when the end of file or form is reached, and not\n//   // go any further.\n//   // A single mouse will use wdy, \"vertical scroll\" wheel.\n//   short wdx, wdy;\n// } Gpm_Event;\n\nfunction parseEvent(raw) {\n  var evnt = {};\n  evnt.buttons = raw[0];\n  evnt.modifiers = raw[1];\n  evnt.vc = raw.readUInt16LE(2);\n  evnt.dx = raw.readInt16LE(4);\n  evnt.dy = raw.readInt16LE(6);\n  evnt.x = raw.readInt16LE(8);\n  evnt.y = raw.readInt16LE(10);\n  evnt.type = raw.readInt16LE(12);\n  evnt.clicks = raw.readInt32LE(16);\n  evnt.margin = raw.readInt32LE(20);\n  evnt.wdx = raw.readInt16LE(24);\n  evnt.wdy = raw.readInt16LE(26);\n  return evnt;\n}\n\nfunction GpmClient(options) {\n  if (!(this instanceof GpmClient)) {\n    return new GpmClient(options);\n  }\n\n  EventEmitter.call(this);\n\n  var pid = process.pid;\n\n  // check tty for /dev/tty[n]\n  var path;\n  try {\n    path = fs.readlinkSync('/proc/' + pid + '/fd/0');\n  } catch (e) {\n    ;\n  }\n  var tty = /tty[0-9]+$/.exec(path);\n  if (tty === null) {\n    // TODO: should  also check for /dev/input/..\n  }\n\n  var vc;\n  if (tty) {\n    tty = tty[0];\n    vc = +/[0-9]+$/.exec(tty)[0];\n  }\n\n  var self = this;\n\n  if (tty) {\n    fs.stat(GPM_SOCKET, function(err, stat) {\n      if (err || !stat.isSocket()) {\n        return;\n      }\n\n      var conf =  {\n        eventMask: 0xffff,\n        defaultMask: GPM_MOVE | GPM_HARD,\n        minMod: 0,\n        maxMod: 0xffff,\n        pid: pid,\n        vc: vc\n      };\n\n      var gpm = net.createConnection(GPM_SOCKET);\n      this.gpm = gpm;\n\n      gpm.on('connect', function() {\n        send_config(gpm, conf, function() {\n          conf.pid = 0;\n          conf.vc = GPM_REQ_NOPASTE;\n          //send_config(gpm, conf);\n        });\n      });\n\n      gpm.on('data', function(packet) {\n        var evnt = parseEvent(packet);\n        switch (evnt.type & 15) {\n          case GPM_MOVE:\n            if (evnt.dx || evnt.dy) {\n              self.emit('move', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n            if (evnt.wdx || evnt.wdy) {\n              self.emit('mousewheel',\n                evnt.buttons, evnt.modifiers,\n                evnt.x, evnt.y, evnt.wdx, evnt.wdy);\n            }\n            break;\n          case GPM_DRAG:\n            if (evnt.dx || evnt.dy) {\n              self.emit('drag', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n            if (evnt.wdx || evnt.wdy) {\n              self.emit('mousewheel',\n                evnt.buttons, evnt.modifiers,\n                evnt.x, evnt.y, evnt.wdx, evnt.wdy);\n            }\n            break;\n          case GPM_DOWN:\n            self.emit('btndown', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            if (evnt.type & GPM_DOUBLE) {\n              self.emit('dblclick', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n            break;\n          case GPM_UP:\n            self.emit('btnup', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            if (!(evnt.type & GPM_MFLAG)) {\n              self.emit('click', evnt.buttons, evnt.modifiers, evnt.x, evnt.y);\n            }\n            break;\n        }\n      });\n\n      gpm.on('error', function() {\n        self.stop();\n      });\n    });\n  }\n}\n\nGpmClient.prototype.__proto__ = EventEmitter.prototype;\n\nGpmClient.prototype.stop = function() {\n  if (this.gpm) {\n    this.gpm.end();\n  }\n  delete this.gpm;\n};\n\nGpmClient.prototype.ButtonName =  function(btn) {\n  if (btn & 4) return 'left';\n  if (btn & 2) return 'middle';\n  if (btn & 1) return 'right';\n  return '';\n};\n\nGpmClient.prototype.hasShiftKey =  function(mod) {\n  return (mod & 1) ? true : false;\n};\n\nGpmClient.prototype.hasCtrlKey =  function(mod) {\n  return (mod & 4) ? true : false;\n};\n\nGpmClient.prototype.hasMetaKey =  function(mod) {\n  return (mod & 8) ? true : false;\n};\n\nmodule.exports = GpmClient;\n"]},"metadata":{},"sourceType":"script"}