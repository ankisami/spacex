{"ast":null,"code":"/**\n * button.js - button element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar Node = require('./node');\n\nvar Input = require('./input');\n/**\n * Button\n */\n\n\nfunction Button(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Button(options);\n  }\n\n  options = options || {};\n\n  if (options.autoFocus == null) {\n    options.autoFocus = false;\n  }\n\n  Input.call(this, options);\n  this.on('keypress', function (ch, key) {\n    if (key.name === 'enter' || key.name === 'space') {\n      return self.press();\n    }\n  });\n\n  if (this.options.mouse) {\n    this.on('click', function () {\n      return self.press();\n    });\n  }\n}\n\nButton.prototype.__proto__ = Input.prototype;\nButton.prototype.type = 'button';\n\nButton.prototype.press = function () {\n  this.focus();\n  this.value = true;\n  var result = this.emit('press');\n  delete this.value;\n  return result;\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Button;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/button.js"],"names":["Node","require","Input","Button","options","self","autoFocus","call","on","ch","key","name","press","mouse","prototype","__proto__","type","focus","value","result","emit","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;AAEA;AACA;AACA;;;AAEA,SAASE,MAAT,CAAgBC,OAAhB,EAAyB;AACvB,MAAIC,IAAI,GAAG,IAAX;;AAEA,MAAI,EAAE,gBAAgBL,IAAlB,CAAJ,EAA6B;AAC3B,WAAO,IAAIG,MAAJ,CAAWC,OAAX,CAAP;AACD;;AAEDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAIA,OAAO,CAACE,SAAR,IAAqB,IAAzB,EAA+B;AAC7BF,IAAAA,OAAO,CAACE,SAAR,GAAoB,KAApB;AACD;;AAEDJ,EAAAA,KAAK,CAACK,IAAN,CAAW,IAAX,EAAiBH,OAAjB;AAEA,OAAKI,EAAL,CAAQ,UAAR,EAAoB,UAASC,EAAT,EAAaC,GAAb,EAAkB;AACpC,QAAIA,GAAG,CAACC,IAAJ,KAAa,OAAb,IAAwBD,GAAG,CAACC,IAAJ,KAAa,OAAzC,EAAkD;AAChD,aAAON,IAAI,CAACO,KAAL,EAAP;AACD;AACF,GAJD;;AAMA,MAAI,KAAKR,OAAL,CAAaS,KAAjB,EAAwB;AACtB,SAAKL,EAAL,CAAQ,OAAR,EAAiB,YAAW;AAC1B,aAAOH,IAAI,CAACO,KAAL,EAAP;AACD,KAFD;AAGD;AACF;;AAEDT,MAAM,CAACW,SAAP,CAAiBC,SAAjB,GAA6Bb,KAAK,CAACY,SAAnC;AAEAX,MAAM,CAACW,SAAP,CAAiBE,IAAjB,GAAwB,QAAxB;;AAEAb,MAAM,CAACW,SAAP,CAAiBF,KAAjB,GAAyB,YAAW;AAClC,OAAKK,KAAL;AACA,OAAKC,KAAL,GAAa,IAAb;AACA,MAAIC,MAAM,GAAG,KAAKC,IAAL,CAAU,OAAV,CAAb;AACA,SAAO,KAAKF,KAAZ;AACA,SAAOC,MAAP;AACD,CAND;AAQA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBnB,MAAjB","sourcesContent":["/**\n * button.js - button element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar Node = require('./node');\nvar Input = require('./input');\n\n/**\n * Button\n */\n\nfunction Button(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Button(options);\n  }\n\n  options = options || {};\n\n  if (options.autoFocus == null) {\n    options.autoFocus = false;\n  }\n\n  Input.call(this, options);\n\n  this.on('keypress', function(ch, key) {\n    if (key.name === 'enter' || key.name === 'space') {\n      return self.press();\n    }\n  });\n\n  if (this.options.mouse) {\n    this.on('click', function() {\n      return self.press();\n    });\n  }\n}\n\nButton.prototype.__proto__ = Input.prototype;\n\nButton.prototype.type = 'button';\n\nButton.prototype.press = function() {\n  this.focus();\n  this.value = true;\n  var result = this.emit('press');\n  delete this.value;\n  return result;\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Button;\n"]},"metadata":{},"sourceType":"script"}