{"ast":null,"code":"/**\n * textarea.js - textarea element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\nvar unicode = require('../unicode');\n\nvar nextTick = global.setImmediate || process.nextTick.bind(process);\n\nvar Node = require('./node');\n\nvar Input = require('./input');\n/**\n * Textarea\n */\n\n\nfunction Textarea(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Textarea(options);\n  }\n\n  options = options || {};\n  options.scrollable = options.scrollable !== false;\n  Input.call(this, options);\n\n  this.screen._listenKeys(this);\n\n  this.value = options.value || '';\n  this.__updateCursor = this._updateCursor.bind(this);\n  this.on('resize', this.__updateCursor);\n  this.on('move', this.__updateCursor);\n\n  if (options.inputOnFocus) {\n    this.on('focus', this.readInput.bind(this, null));\n  }\n\n  if (!options.inputOnFocus && options.keys) {\n    this.on('keypress', function (ch, key) {\n      if (self._reading) return;\n\n      if (key.name === 'enter' || options.vi && key.name === 'i') {\n        return self.readInput();\n      }\n\n      if (key.name === 'e') {\n        return self.readEditor();\n      }\n    });\n  }\n\n  if (options.mouse) {\n    this.on('click', function (data) {\n      if (self._reading) return;\n      if (data.button !== 'right') return;\n      self.readEditor();\n    });\n  }\n}\n\nTextarea.prototype.__proto__ = Input.prototype;\nTextarea.prototype.type = 'textarea';\n\nTextarea.prototype._updateCursor = function (get) {\n  if (this.screen.focused !== this) {\n    return;\n  }\n\n  var lpos = get ? this.lpos : this._getCoords();\n  if (!lpos) return;\n  var last = this._clines[this._clines.length - 1],\n      program = this.screen.program,\n      line,\n      cx,\n      cy; // Stop a situation where the textarea begins scrolling\n  // and the last cline appears to always be empty from the\n  // _typeScroll `+ '\\n'` thing.\n  // Maybe not necessary anymore?\n\n  if (last === '' && this.value[this.value.length - 1] !== '\\n') {\n    last = this._clines[this._clines.length - 2] || '';\n  }\n\n  line = Math.min(this._clines.length - 1 - (this.childBase || 0), lpos.yl - lpos.yi - this.iheight - 1); // When calling clearValue() on a full textarea with a border, the first\n  // argument in the above Math.min call ends up being -2. Make sure we stay\n  // positive.\n\n  line = Math.max(0, line);\n  cy = lpos.yi + this.itop + line;\n  cx = lpos.xi + this.ileft + this.strWidth(last); // XXX Not sure, but this may still sometimes\n  // cause problems when leaving editor.\n\n  if (cy === program.y && cx === program.x) {\n    return;\n  }\n\n  if (cy === program.y) {\n    if (cx > program.x) {\n      program.cuf(cx - program.x);\n    } else if (cx < program.x) {\n      program.cub(program.x - cx);\n    }\n  } else if (cx === program.x) {\n    if (cy > program.y) {\n      program.cud(cy - program.y);\n    } else if (cy < program.y) {\n      program.cuu(program.y - cy);\n    }\n  } else {\n    program.cup(cy, cx);\n  }\n};\n\nTextarea.prototype.input = Textarea.prototype.setInput = Textarea.prototype.readInput = function (callback) {\n  var self = this,\n      focused = this.screen.focused === this;\n  if (this._reading) return;\n  this._reading = true;\n  this._callback = callback;\n\n  if (!focused) {\n    this.screen.saveFocus();\n    this.focus();\n  }\n\n  this.screen.grabKeys = true;\n\n  this._updateCursor();\n\n  this.screen.program.showCursor(); //this.screen.program.sgr('normal');\n\n  this._done = function fn(err, value) {\n    if (!self._reading) return;\n    if (fn.done) return;\n    fn.done = true;\n    self._reading = false;\n    delete self._callback;\n    delete self._done;\n    self.removeListener('keypress', self.__listener);\n    delete self.__listener;\n    self.removeListener('blur', self.__done);\n    delete self.__done;\n    self.screen.program.hideCursor();\n    self.screen.grabKeys = false;\n\n    if (!focused) {\n      self.screen.restoreFocus();\n    }\n\n    if (self.options.inputOnFocus) {\n      self.screen.rewindFocus();\n    } // Ugly\n\n\n    if (err === 'stop') return;\n\n    if (err) {\n      self.emit('error', err);\n    } else if (value != null) {\n      self.emit('submit', value);\n    } else {\n      self.emit('cancel', value);\n    }\n\n    self.emit('action', value);\n    if (!callback) return;\n    return err ? callback(err) : callback(null, value);\n  }; // Put this in a nextTick so the current\n  // key event doesn't trigger any keys input.\n\n\n  nextTick(function () {\n    self.__listener = self._listener.bind(self);\n    self.on('keypress', self.__listener);\n  });\n  this.__done = this._done.bind(this, null, null);\n  this.on('blur', this.__done);\n};\n\nTextarea.prototype._listener = function (ch, key) {\n  var done = this._done,\n      value = this.value;\n  if (key.name === 'return') return;\n\n  if (key.name === 'enter') {\n    ch = '\\n';\n  } // TODO: Handle directional keys.\n\n\n  if (key.name === 'left' || key.name === 'right' || key.name === 'up' || key.name === 'down') {\n    ;\n  }\n\n  if (this.options.keys && key.ctrl && key.name === 'e') {\n    return this.readEditor();\n  } // TODO: Optimize typing by writing directly\n  // to the screen and screen buffer here.\n\n\n  if (key.name === 'escape') {\n    done(null, null);\n  } else if (key.name === 'backspace') {\n    if (this.value.length) {\n      if (this.screen.fullUnicode) {\n        if (unicode.isSurrogate(this.value, this.value.length - 2)) {\n          // || unicode.isCombining(this.value, this.value.length - 1)) {\n          this.value = this.value.slice(0, -2);\n        } else {\n          this.value = this.value.slice(0, -1);\n        }\n      } else {\n        this.value = this.value.slice(0, -1);\n      }\n    }\n  } else if (ch) {\n    if (!/^[\\x00-\\x08\\x0b-\\x0c\\x0e-\\x1f\\x7f]$/.test(ch)) {\n      this.value += ch;\n    }\n  }\n\n  if (this.value !== value) {\n    this.screen.render();\n  }\n};\n\nTextarea.prototype._typeScroll = function () {\n  // XXX Workaround\n  var height = this.height - this.iheight;\n\n  if (this._clines.length - this.childBase > height) {\n    this.scroll(this._clines.length);\n  }\n};\n\nTextarea.prototype.getValue = function () {\n  return this.value;\n};\n\nTextarea.prototype.setValue = function (value) {\n  if (value == null) {\n    value = this.value;\n  }\n\n  if (this._value !== value) {\n    this.value = value;\n    this._value = value;\n    this.setContent(this.value);\n\n    this._typeScroll();\n\n    this._updateCursor();\n  }\n};\n\nTextarea.prototype.clearInput = Textarea.prototype.clearValue = function () {\n  return this.setValue('');\n};\n\nTextarea.prototype.submit = function () {\n  if (!this.__listener) return;\n  return this.__listener('\\x1b', {\n    name: 'escape'\n  });\n};\n\nTextarea.prototype.cancel = function () {\n  if (!this.__listener) return;\n  return this.__listener('\\x1b', {\n    name: 'escape'\n  });\n};\n\nTextarea.prototype.render = function () {\n  this.setValue();\n  return this._render();\n};\n\nTextarea.prototype.editor = Textarea.prototype.setEditor = Textarea.prototype.readEditor = function (callback) {\n  var self = this;\n\n  if (this._reading) {\n    var _cb = this._callback,\n        cb = callback;\n\n    this._done('stop');\n\n    callback = function (err, value) {\n      if (_cb) _cb(err, value);\n      if (cb) cb(err, value);\n    };\n  }\n\n  if (!callback) {\n    callback = function () {};\n  }\n\n  return this.screen.readEditor({\n    value: this.value\n  }, function (err, value) {\n    if (err) {\n      if (err.message === 'Unsuccessful.') {\n        self.screen.render();\n        return self.readInput(callback);\n      }\n\n      self.screen.render();\n      self.readInput(callback);\n      return callback(err);\n    }\n\n    self.setValue(value);\n    self.screen.render();\n    return self.readInput(callback);\n  });\n};\n/**\n * Expose\n */\n\n\nmodule.exports = Textarea;","map":{"version":3,"sources":["/Users/samianki/node_modules/blessed/lib/widgets/textarea.js"],"names":["unicode","require","nextTick","global","setImmediate","process","bind","Node","Input","Textarea","options","self","scrollable","call","screen","_listenKeys","value","__updateCursor","_updateCursor","on","inputOnFocus","readInput","keys","ch","key","_reading","name","vi","readEditor","mouse","data","button","prototype","__proto__","type","get","focused","lpos","_getCoords","last","_clines","length","program","line","cx","cy","Math","min","childBase","yl","yi","iheight","max","itop","xi","ileft","strWidth","y","x","cuf","cub","cud","cuu","cup","input","setInput","callback","_callback","saveFocus","focus","grabKeys","showCursor","_done","fn","err","done","removeListener","__listener","__done","hideCursor","restoreFocus","rewindFocus","emit","_listener","ctrl","fullUnicode","isSurrogate","slice","test","render","_typeScroll","height","scroll","getValue","setValue","_value","setContent","clearInput","clearValue","submit","cancel","_render","editor","setEditor","_cb","cb","message","module","exports"],"mappings":"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","sourcesContent":["/**\n * textarea.js - textarea element for blessed\n * Copyright (c) 2013-2015, Christopher Jeffrey and contributors (MIT License).\n * https://github.com/chjj/blessed\n */\n\n/**\n * Modules\n */\n\nvar unicode = require('../unicode');\n\nvar nextTick = global.setImmediate || process.nextTick.bind(process);\n\nvar Node = require('./node');\nvar Input = require('./input');\n\n/**\n * Textarea\n */\n\nfunction Textarea(options) {\n  var self = this;\n\n  if (!(this instanceof Node)) {\n    return new Textarea(options);\n  }\n\n  options = options || {};\n\n  options.scrollable = options.scrollable !== false;\n\n  Input.call(this, options);\n\n  this.screen._listenKeys(this);\n\n  this.value = options.value || '';\n\n  this.__updateCursor = this._updateCursor.bind(this);\n  this.on('resize', this.__updateCursor);\n  this.on('move', this.__updateCursor);\n\n  if (options.inputOnFocus) {\n    this.on('focus', this.readInput.bind(this, null));\n  }\n\n  if (!options.inputOnFocus && options.keys) {\n    this.on('keypress', function(ch, key) {\n      if (self._reading) return;\n      if (key.name === 'enter' || (options.vi && key.name === 'i')) {\n        return self.readInput();\n      }\n      if (key.name === 'e') {\n        return self.readEditor();\n      }\n    });\n  }\n\n  if (options.mouse) {\n    this.on('click', function(data) {\n      if (self._reading) return;\n      if (data.button !== 'right') return;\n      self.readEditor();\n    });\n  }\n}\n\nTextarea.prototype.__proto__ = Input.prototype;\n\nTextarea.prototype.type = 'textarea';\n\nTextarea.prototype._updateCursor = function(get) {\n  if (this.screen.focused !== this) {\n    return;\n  }\n\n  var lpos = get ? this.lpos : this._getCoords();\n  if (!lpos) return;\n\n  var last = this._clines[this._clines.length - 1]\n    , program = this.screen.program\n    , line\n    , cx\n    , cy;\n\n  // Stop a situation where the textarea begins scrolling\n  // and the last cline appears to always be empty from the\n  // _typeScroll `+ '\\n'` thing.\n  // Maybe not necessary anymore?\n  if (last === '' && this.value[this.value.length - 1] !== '\\n') {\n    last = this._clines[this._clines.length - 2] || '';\n  }\n\n  line = Math.min(\n    this._clines.length - 1 - (this.childBase || 0),\n    (lpos.yl - lpos.yi) - this.iheight - 1);\n\n  // When calling clearValue() on a full textarea with a border, the first\n  // argument in the above Math.min call ends up being -2. Make sure we stay\n  // positive.\n  line = Math.max(0, line);\n\n  cy = lpos.yi + this.itop + line;\n  cx = lpos.xi + this.ileft + this.strWidth(last);\n\n  // XXX Not sure, but this may still sometimes\n  // cause problems when leaving editor.\n  if (cy === program.y && cx === program.x) {\n    return;\n  }\n\n  if (cy === program.y) {\n    if (cx > program.x) {\n      program.cuf(cx - program.x);\n    } else if (cx < program.x) {\n      program.cub(program.x - cx);\n    }\n  } else if (cx === program.x) {\n    if (cy > program.y) {\n      program.cud(cy - program.y);\n    } else if (cy < program.y) {\n      program.cuu(program.y - cy);\n    }\n  } else {\n    program.cup(cy, cx);\n  }\n};\n\nTextarea.prototype.input =\nTextarea.prototype.setInput =\nTextarea.prototype.readInput = function(callback) {\n  var self = this\n    , focused = this.screen.focused === this;\n\n  if (this._reading) return;\n  this._reading = true;\n\n  this._callback = callback;\n\n  if (!focused) {\n    this.screen.saveFocus();\n    this.focus();\n  }\n\n  this.screen.grabKeys = true;\n\n  this._updateCursor();\n  this.screen.program.showCursor();\n  //this.screen.program.sgr('normal');\n\n  this._done = function fn(err, value) {\n    if (!self._reading) return;\n\n    if (fn.done) return;\n    fn.done = true;\n\n    self._reading = false;\n\n    delete self._callback;\n    delete self._done;\n\n    self.removeListener('keypress', self.__listener);\n    delete self.__listener;\n\n    self.removeListener('blur', self.__done);\n    delete self.__done;\n\n    self.screen.program.hideCursor();\n    self.screen.grabKeys = false;\n\n    if (!focused) {\n      self.screen.restoreFocus();\n    }\n\n    if (self.options.inputOnFocus) {\n      self.screen.rewindFocus();\n    }\n\n    // Ugly\n    if (err === 'stop') return;\n\n    if (err) {\n      self.emit('error', err);\n    } else if (value != null) {\n      self.emit('submit', value);\n    } else {\n      self.emit('cancel', value);\n    }\n    self.emit('action', value);\n\n    if (!callback) return;\n\n    return err\n      ? callback(err)\n      : callback(null, value);\n  };\n\n  // Put this in a nextTick so the current\n  // key event doesn't trigger any keys input.\n  nextTick(function() {\n    self.__listener = self._listener.bind(self);\n    self.on('keypress', self.__listener);\n  });\n\n  this.__done = this._done.bind(this, null, null);\n  this.on('blur', this.__done);\n};\n\nTextarea.prototype._listener = function(ch, key) {\n  var done = this._done\n    , value = this.value;\n\n  if (key.name === 'return') return;\n  if (key.name === 'enter') {\n    ch = '\\n';\n  }\n\n  // TODO: Handle directional keys.\n  if (key.name === 'left' || key.name === 'right'\n      || key.name === 'up' || key.name === 'down') {\n    ;\n  }\n\n  if (this.options.keys && key.ctrl && key.name === 'e') {\n    return this.readEditor();\n  }\n\n  // TODO: Optimize typing by writing directly\n  // to the screen and screen buffer here.\n  if (key.name === 'escape') {\n    done(null, null);\n  } else if (key.name === 'backspace') {\n    if (this.value.length) {\n      if (this.screen.fullUnicode) {\n        if (unicode.isSurrogate(this.value, this.value.length - 2)) {\n        // || unicode.isCombining(this.value, this.value.length - 1)) {\n          this.value = this.value.slice(0, -2);\n        } else {\n          this.value = this.value.slice(0, -1);\n        }\n      } else {\n        this.value = this.value.slice(0, -1);\n      }\n    }\n  } else if (ch) {\n    if (!/^[\\x00-\\x08\\x0b-\\x0c\\x0e-\\x1f\\x7f]$/.test(ch)) {\n      this.value += ch;\n    }\n  }\n\n  if (this.value !== value) {\n    this.screen.render();\n  }\n};\n\nTextarea.prototype._typeScroll = function() {\n  // XXX Workaround\n  var height = this.height - this.iheight;\n  if (this._clines.length - this.childBase > height) {\n    this.scroll(this._clines.length);\n  }\n};\n\nTextarea.prototype.getValue = function() {\n  return this.value;\n};\n\nTextarea.prototype.setValue = function(value) {\n  if (value == null) {\n    value = this.value;\n  }\n  if (this._value !== value) {\n    this.value = value;\n    this._value = value;\n    this.setContent(this.value);\n    this._typeScroll();\n    this._updateCursor();\n  }\n};\n\nTextarea.prototype.clearInput =\nTextarea.prototype.clearValue = function() {\n  return this.setValue('');\n};\n\nTextarea.prototype.submit = function() {\n  if (!this.__listener) return;\n  return this.__listener('\\x1b', { name: 'escape' });\n};\n\nTextarea.prototype.cancel = function() {\n  if (!this.__listener) return;\n  return this.__listener('\\x1b', { name: 'escape' });\n};\n\nTextarea.prototype.render = function() {\n  this.setValue();\n  return this._render();\n};\n\nTextarea.prototype.editor =\nTextarea.prototype.setEditor =\nTextarea.prototype.readEditor = function(callback) {\n  var self = this;\n\n  if (this._reading) {\n    var _cb = this._callback\n      , cb = callback;\n\n    this._done('stop');\n\n    callback = function(err, value) {\n      if (_cb) _cb(err, value);\n      if (cb) cb(err, value);\n    };\n  }\n\n  if (!callback) {\n    callback = function() {};\n  }\n\n  return this.screen.readEditor({ value: this.value }, function(err, value) {\n    if (err) {\n      if (err.message === 'Unsuccessful.') {\n        self.screen.render();\n        return self.readInput(callback);\n      }\n      self.screen.render();\n      self.readInput(callback);\n      return callback(err);\n    }\n    self.setValue(value);\n    self.screen.render();\n    return self.readInput(callback);\n  });\n};\n\n/**\n * Expose\n */\n\nmodule.exports = Textarea;\n"]},"metadata":{},"sourceType":"script"}