{"ast":null,"code":"'use strict';\n\nconst StringPrompt = require('../types/string');\n\nclass ListPrompt extends StringPrompt {\n  constructor(options = {}) {\n    super(options);\n    this.sep = this.options.separator || /, */;\n    this.initial = options.initial || '';\n  }\n\n  split(input = this.value) {\n    return input ? String(input).split(this.sep) : [];\n  }\n\n  format() {\n    let style = this.state.submitted ? this.styles.primary : val => val;\n    return this.list.map(style).join(', ');\n  }\n\n  async submit(value) {\n    let result = this.state.error || (await this.validate(this.list, this.state));\n\n    if (result !== true) {\n      this.state.error = result;\n      return super.submit();\n    }\n\n    this.value = this.list;\n    return super.submit();\n  }\n\n  get list() {\n    return this.split();\n  }\n\n}\n\nmodule.exports = ListPrompt;","map":{"version":3,"sources":["/Users/samianki/node_modules/enquirer/lib/prompts/list.js"],"names":["StringPrompt","require","ListPrompt","constructor","options","sep","separator","initial","split","input","value","String","format","style","state","submitted","styles","primary","val","list","map","join","submit","result","error","validate","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;AAEA,MAAMC,UAAN,SAAyBF,YAAzB,CAAsC;AACpCG,EAAAA,WAAW,CAACC,OAAO,GAAG,EAAX,EAAe;AACxB,UAAMA,OAAN;AACA,SAAKC,GAAL,GAAW,KAAKD,OAAL,CAAaE,SAAb,IAA0B,KAArC;AACA,SAAKC,OAAL,GAAeH,OAAO,CAACG,OAAR,IAAmB,EAAlC;AACD;;AAEDC,EAAAA,KAAK,CAACC,KAAK,GAAG,KAAKC,KAAd,EAAqB;AACxB,WAAOD,KAAK,GAAGE,MAAM,CAACF,KAAD,CAAN,CAAcD,KAAd,CAAoB,KAAKH,GAAzB,CAAH,GAAmC,EAA/C;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWC,SAAX,GAAuB,KAAKC,MAAL,CAAYC,OAAnC,GAA6CC,GAAG,IAAIA,GAAhE;AACA,WAAO,KAAKC,IAAL,CAAUC,GAAV,CAAcP,KAAd,EAAqBQ,IAArB,CAA0B,IAA1B,CAAP;AACD;;AAEW,QAANC,MAAM,CAACZ,KAAD,EAAQ;AAClB,QAAIa,MAAM,GAAG,KAAKT,KAAL,CAAWU,KAAX,KAAoB,MAAM,KAAKC,QAAL,CAAc,KAAKN,IAAnB,EAAyB,KAAKL,KAA9B,CAA1B,CAAb;;AACA,QAAIS,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAKT,KAAL,CAAWU,KAAX,GAAmBD,MAAnB;AACA,aAAO,MAAMD,MAAN,EAAP;AACD;;AACD,SAAKZ,KAAL,GAAa,KAAKS,IAAlB;AACA,WAAO,MAAMG,MAAN,EAAP;AACD;;AAEO,MAAJH,IAAI,GAAG;AACT,WAAO,KAAKX,KAAL,EAAP;AACD;;AA5BmC;;AA+BtCkB,MAAM,CAACC,OAAP,GAAiBzB,UAAjB","sourcesContent":["'use strict';\n\nconst StringPrompt = require('../types/string');\n\nclass ListPrompt extends StringPrompt {\n  constructor(options = {}) {\n    super(options);\n    this.sep = this.options.separator || /, */;\n    this.initial = options.initial || '';\n  }\n\n  split(input = this.value) {\n    return input ? String(input).split(this.sep) : [];\n  }\n\n  format() {\n    let style = this.state.submitted ? this.styles.primary : val => val;\n    return this.list.map(style).join(', ');\n  }\n\n  async submit(value) {\n    let result = this.state.error || await this.validate(this.list, this.state);\n    if (result !== true) {\n      this.state.error = result;\n      return super.submit();\n    }\n    this.value = this.list;\n    return super.submit();\n  }\n\n  get list() {\n    return this.split();\n  }\n}\n\nmodule.exports = ListPrompt;\n"]},"metadata":{},"sourceType":"script"}