{"ast":null,"code":"'use strict';\n\nvar DEFAULT_MAXAGE = 60000;\nvar expiration = {};\nvar history = {};\nvar expireListeners = {};\nvar size = 0;\nvar interval = null;\n\nfunction get(pid, maxage) {\n  if (maxage <= 0) {\n    return;\n  }\n\n  if (history[pid] !== undefined) {\n    expiration[pid] = Date.now() + (maxage || DEFAULT_MAXAGE);\n  }\n\n  return history[pid];\n}\n\nfunction set(pid, object, maxage, onExpire) {\n  if (object === undefined || maxage <= 0) return;\n  expiration[pid] = Date.now() + (maxage || DEFAULT_MAXAGE);\n\n  if (history[pid] === undefined) {\n    size++;\n    sheduleInvalidator(maxage);\n  }\n\n  history[pid] = object;\n\n  if (onExpire) {\n    expireListeners[pid] = onExpire;\n  }\n}\n\nfunction sheduleInvalidator(maxage) {\n  if (size > 0) {\n    if (interval === null) {\n      interval = setInterval(runInvalidator, (maxage || DEFAULT_MAXAGE) / 2);\n\n      if (typeof interval.unref === 'function') {\n        interval.unref();\n      }\n    }\n\n    return;\n  }\n\n  if (interval !== null) {\n    clearInterval(interval);\n    interval = null;\n  }\n}\n\nfunction runInvalidator() {\n  var now = Date.now();\n  var pids = Object.keys(expiration);\n\n  for (var i = 0; i < pids.length; i++) {\n    var pid = pids[i];\n\n    if (expiration[pid] < now) {\n      size--;\n\n      if (expireListeners[pid]) {\n        expireListeners[pid](history[pid]);\n      }\n\n      delete history[pid];\n      delete expiration[pid];\n      delete expireListeners[pid];\n    }\n  }\n\n  sheduleInvalidator();\n}\n\nfunction deleteLoop(obj) {\n  for (const i in obj) {\n    delete obj[i];\n  }\n}\n\nfunction clear() {\n  if (interval !== null) {\n    clearInterval(interval);\n    interval = null;\n  }\n\n  deleteLoop(history);\n  deleteLoop(expiration);\n  deleteLoop(expireListeners);\n}\n\nmodule.exports = {\n  get: get,\n  set: set,\n  clear: clear\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pidusage/lib/history.js"],"names":["DEFAULT_MAXAGE","expiration","history","expireListeners","size","interval","get","pid","maxage","undefined","Date","now","set","object","onExpire","sheduleInvalidator","setInterval","runInvalidator","unref","clearInterval","pids","Object","keys","i","length","deleteLoop","obj","clear","module","exports"],"mappings":"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","sourcesContent":["'use strict'\nvar DEFAULT_MAXAGE = 60000\n\nvar expiration = {}\nvar history = {}\nvar expireListeners = {}\n\nvar size = 0\nvar interval = null\n\nfunction get (pid, maxage) {\n  if (maxage <= 0) {\n    return\n  }\n\n  if (history[pid] !== undefined) {\n    expiration[pid] = Date.now() + (maxage || DEFAULT_MAXAGE)\n  }\n\n  return history[pid]\n}\n\nfunction set (pid, object, maxage, onExpire) {\n  if (object === undefined || maxage <= 0) return\n\n  expiration[pid] = Date.now() + (maxage || DEFAULT_MAXAGE)\n  if (history[pid] === undefined) {\n    size++\n    sheduleInvalidator(maxage)\n  }\n\n  history[pid] = object\n  if (onExpire) {\n    expireListeners[pid] = onExpire\n  }\n}\n\nfunction sheduleInvalidator (maxage) {\n  if (size > 0) {\n    if (interval === null) {\n      interval = setInterval(runInvalidator, (maxage || DEFAULT_MAXAGE) / 2)\n      if (typeof interval.unref === 'function') {\n        interval.unref()\n      }\n    }\n\n    return\n  }\n\n  if (interval !== null) {\n    clearInterval(interval)\n    interval = null\n  }\n}\n\nfunction runInvalidator () {\n  var now = Date.now()\n  var pids = Object.keys(expiration)\n  for (var i = 0; i < pids.length; i++) {\n    var pid = pids[i]\n    if (expiration[pid] < now) {\n      size--\n      if (expireListeners[pid]) {\n        expireListeners[pid](history[pid])\n      }\n\n      delete history[pid]\n      delete expiration[pid]\n      delete expireListeners[pid]\n    }\n  }\n  sheduleInvalidator()\n}\n\nfunction deleteLoop (obj) { for (const i in obj) { delete obj[i] } }\n\nfunction clear () {\n  if (interval !== null) {\n    clearInterval(interval)\n    interval = null\n  }\n\n  deleteLoop(history)\n  deleteLoop(expiration)\n  deleteLoop(expireListeners)\n}\n\nmodule.exports = {\n  get: get,\n  set: set,\n  clear: clear\n}\n"]},"metadata":{},"sourceType":"script"}