{"ast":null,"code":"const https = require('https');\n\nconst debug = require('debug')('pm2:version-check');\n\nconst qs = require('querystring');\n\nvar VersionCheck = {};\n\nVersionCheck.runCheck = function (params, cb) {\n  var path = null;\n\n  if (cb == null && typeof params == 'function') {\n    cb = params;\n    path = '/check';\n  } else {\n    path = '/check?' + qs.stringify(params);\n  }\n\n  var options = {\n    host: 'version.pm2.io',\n    path: path,\n    strictSSL: false,\n    timeout: 1200,\n    rejectUnauthorized: false\n  };\n  var req = https.get(options, function (res) {\n    if (res.statusCode != 200) return false;\n    var bodyChunks = [];\n    res.on('data', function (chunk) {\n      bodyChunks.push(chunk);\n    }).on('end', function () {\n      var body = Buffer.concat(bodyChunks);\n\n      try {\n        var data = JSON.parse(body);\n        return cb ? cb(null, data) : null;\n      } catch (e) {\n        return cb ? cb(new Error('Could not parse result')) : null;\n      }\n    });\n  });\n  req.on('error', function (e) {\n    debug('ERROR: ' + e.message);\n    return cb ? cb(e) : null;\n  });\n};\n\nmodule.exports = VersionCheck;\n\nif (require.main === module) {\n  VersionCheck.runCheck((err, dt) => {\n    console.log(err, dt);\n  });\n}","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/node_modules/@pm2/pm2-version-check/index.js"],"names":["https","require","debug","qs","VersionCheck","runCheck","params","cb","path","stringify","options","host","strictSSL","timeout","rejectUnauthorized","req","get","res","statusCode","bodyChunks","on","chunk","push","body","Buffer","concat","data","JSON","parse","e","Error","message","module","exports","main","err","dt","console","log"],"mappings":"AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiB,mBAAjB,CAAd;;AACA,MAAME,EAAE,GAAMF,OAAO,CAAC,aAAD,CAArB;;AAEA,IAAIG,YAAY,GAAG,EAAnB;;AAEAA,YAAY,CAACC,QAAb,GAAwB,UAASC,MAAT,EAAiBC,EAAjB,EAAqB;AAC3C,MAAIC,IAAI,GAAG,IAAX;;AAEA,MAAID,EAAE,IAAI,IAAN,IAAc,OAAOD,MAAP,IAAkB,UAApC,EAAgD;AAC9CC,IAAAA,EAAE,GAAGD,MAAL;AACAE,IAAAA,IAAI,GAAG,QAAP;AACD,GAHD,MAGO;AACLA,IAAAA,IAAI,GAAG,YAAYL,EAAE,CAACM,SAAH,CAAaH,MAAb,CAAnB;AACD;;AAED,MAAII,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,gBADM;AAEZH,IAAAA,IAAI,EAAEA,IAFM;AAGZI,IAAAA,SAAS,EAAE,KAHC;AAIZC,IAAAA,OAAO,EAAE,IAJG;AAKZC,IAAAA,kBAAkB,EAAE;AALR,GAAd;AAQA,MAAIC,GAAG,GAAGf,KAAK,CAACgB,GAAN,CAAUN,OAAV,EAAmB,UAASO,GAAT,EAAc;AACzC,QAAIA,GAAG,CAACC,UAAJ,IAAkB,GAAtB,EAA2B,OAAO,KAAP;AAC3B,QAAIC,UAAU,GAAG,EAAjB;AACAF,IAAAA,GAAG,CAACG,EAAJ,CAAO,MAAP,EAAe,UAASC,KAAT,EAAgB;AAC7BF,MAAAA,UAAU,CAACG,IAAX,CAAgBD,KAAhB;AACD,KAFD,EAEGD,EAFH,CAEM,KAFN,EAEa,YAAW;AACtB,UAAIG,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcN,UAAd,CAAX;;AACA,UAAI;AACF,YAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAX;AACA,eAAOhB,EAAE,GAAGA,EAAE,CAAC,IAAD,EAAOmB,IAAP,CAAL,GAAoB,IAA7B;AACD,OAHD,CAGE,OAAMG,CAAN,EAAS;AACT,eAAOtB,EAAE,GAAGA,EAAE,CAAC,IAAIuB,KAAJ,CAAU,wBAAV,CAAD,CAAL,GAA6C,IAAtD;AACD;AACF,KAVD;AAWD,GAdS,CAAV;AAgBAf,EAAAA,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAgB,UAASS,CAAT,EAAY;AAC1B3B,IAAAA,KAAK,CAAC,YAAY2B,CAAC,CAACE,OAAf,CAAL;AACA,WAAOxB,EAAE,GAAGA,EAAE,CAACsB,CAAD,CAAL,GAAW,IAApB;AACD,GAHD;AAID,CAtCD;;AAwCAG,MAAM,CAACC,OAAP,GAAiB7B,YAAjB;;AAEA,IAAIH,OAAO,CAACiC,IAAR,KAAiBF,MAArB,EAA6B;AAC3B5B,EAAAA,YAAY,CAACC,QAAb,CAAsB,CAAC8B,GAAD,EAAMC,EAAN,KAAa;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiBC,EAAjB;AACD,GAFD;AAGD","sourcesContent":["\nconst https = require('https');\nconst debug = require('debug')('pm2:version-check')\nconst qs    = require('querystring')\n\nvar VersionCheck = {}\n\nVersionCheck.runCheck = function(params, cb) {\n  var path = null\n\n  if (cb == null && typeof(params) == 'function') {\n    cb = params\n    path = '/check'\n  } else {\n    path = '/check?' + qs.stringify(params)\n  }\n\n  var options = {\n    host: 'version.pm2.io',\n    path: path,\n    strictSSL: false,\n    timeout: 1200,\n    rejectUnauthorized: false\n  }\n\n  var req = https.get(options, function(res) {\n    if (res.statusCode != 200) return false\n    var bodyChunks = []\n    res.on('data', function(chunk) {\n      bodyChunks.push(chunk)\n    }).on('end', function() {\n      var body = Buffer.concat(bodyChunks)\n      try {\n        var data = JSON.parse(body)\n        return cb ? cb(null, data) : null\n      } catch(e) {\n        return cb ? cb(new Error('Could not parse result')) : null\n      }\n    })\n  })\n\n  req.on('error', function(e) {\n    debug('ERROR: ' + e.message)\n    return cb ? cb(e) : null\n  })\n}\n\nmodule.exports = VersionCheck\n\nif (require.main === module) {\n  VersionCheck.runCheck((err, dt) => {\n    console.log(err, dt)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}