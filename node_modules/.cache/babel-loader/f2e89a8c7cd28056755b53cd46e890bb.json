{"ast":null,"code":"// --------------------------------------------------------------------------------------------------------------------\n//\n// fmt.js - Command line output formatting.\n//\n// Copyright (c) 2012 Andrew Chilton - http://chilts.org/\n// Written by Andrew Chilton <andychilton@gmail.com>\n//\n// License: http://opensource.org/licenses/MIT\n//\n// --------------------------------------------------------------------------------------------------------------------\nvar util = require('util'); // --------------------------------------------------------------------------------------------------------------------\n\n\nvar sep = '===============================================================================';\nvar line = '-------------------------------------------------------------------------------';\nvar field = '                    '; // --------------------------------------------------------------------------------------------------------------------\n// separator\n\nmodule.exports.separator = function () {\n  console.log(sep);\n}; // alias the above\n\n\nmodule.exports.sep = module.exports.separator; // line\n\nmodule.exports.line = function () {\n  console.log(line);\n}; // title\n\n\nmodule.exports.title = function (title) {\n  var out = '--- ' + title + ' ';\n  out += line.substr(out.length);\n  console.log(out);\n}; // field\n\n\nmodule.exports.field = function (key, value) {\n  console.log('' + key + field.substr(key.length) + ' : ' + value);\n}; // subfield\n\n\nmodule.exports.subfield = function (key, value) {\n  console.log('- ' + key + field.substr(key.length + 2) + ' : ' + value);\n}; // list item\n\n\nmodule.exports.li = function (msg) {\n  console.log('* ' + msg);\n}; // dump\n\n\nmodule.exports.dump = function (data, name) {\n  if (name) {\n    console.log(name + ' :', util.inspect(data, false, null, true));\n  } else {\n    console.log(util.inspect(data, false, null, true));\n  }\n}; // msg\n\n\nmodule.exports.msg = function (msg) {\n  console.log(msg);\n}; // --------------------------------------------------------------------------------------------------------------------","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/tools/fmt.js"],"names":["util","require","sep","line","field","module","exports","separator","console","log","title","out","substr","length","key","value","subfield","li","msg","dump","data","name","inspect"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB,C,CAEA;;;AAEA,IAAIC,GAAG,GAAI,iFAAX;AACA,IAAIC,IAAI,GAAG,iFAAX;AACA,IAAIC,KAAK,GAAG,sBAAZ,C,CAEA;AAEA;;AACAC,MAAM,CAACC,OAAP,CAAeC,SAAf,GAA2B,YAAW;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,CAFD,C,CAIA;;;AACAG,MAAM,CAACC,OAAP,CAAeJ,GAAf,GAAqBG,MAAM,CAACC,OAAP,CAAeC,SAApC,C,CAEA;;AACAF,MAAM,CAACC,OAAP,CAAeH,IAAf,GAAsB,YAAW;AAC7BK,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH,CAFD,C,CAIA;;;AACAE,MAAM,CAACC,OAAP,CAAeI,KAAf,GAAuB,UAASA,KAAT,EAAgB;AACnC,MAAIC,GAAG,GAAG,SAASD,KAAT,GAAiB,GAA3B;AACAC,EAAAA,GAAG,IAAIR,IAAI,CAACS,MAAL,CAAYD,GAAG,CAACE,MAAhB,CAAP;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,CAJD,C,CAMA;;;AACAN,MAAM,CAACC,OAAP,CAAeF,KAAf,GAAuB,UAASU,GAAT,EAAcC,KAAd,EAAqB;AACxCP,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,GAAL,GAAWV,KAAK,CAACQ,MAAN,CAAaE,GAAG,CAACD,MAAjB,CAAX,GAAsC,KAAtC,GAA8CE,KAA1D;AACH,CAFD,C,CAIA;;;AACAV,MAAM,CAACC,OAAP,CAAeU,QAAf,GAA0B,UAASF,GAAT,EAAcC,KAAd,EAAqB;AAC3CP,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOK,GAAP,GAAaV,KAAK,CAACQ,MAAN,CAAaE,GAAG,CAACD,MAAJ,GAAa,CAA1B,CAAb,GAA4C,KAA5C,GAAoDE,KAAhE;AACH,CAFD,C,CAIA;;;AACAV,MAAM,CAACC,OAAP,CAAeW,EAAf,GAAoB,UAASC,GAAT,EAAc;AAC9BV,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOS,GAAnB;AACH,CAFD,C,CAIA;;;AACAb,MAAM,CAACC,OAAP,CAAea,IAAf,GAAsB,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACvC,MAAKA,IAAL,EAAY;AACRb,IAAAA,OAAO,CAACC,GAAR,CAAYY,IAAI,GAAG,IAAnB,EAAyBrB,IAAI,CAACsB,OAAL,CAAaF,IAAb,EAAmB,KAAnB,EAA0B,IAA1B,EAAgC,IAAhC,CAAzB;AACH,GAFD,MAGK;AACDZ,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACsB,OAAL,CAAaF,IAAb,EAAmB,KAAnB,EAA0B,IAA1B,EAAgC,IAAhC,CAAZ;AACH;AACJ,CAPD,C,CASA;;;AACAf,MAAM,CAACC,OAAP,CAAeY,GAAf,GAAqB,UAASA,GAAT,EAAc;AAC/BV,EAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACH,CAFD,C,CAIA","sourcesContent":["// --------------------------------------------------------------------------------------------------------------------\n//\n// fmt.js - Command line output formatting.\n//\n// Copyright (c) 2012 Andrew Chilton - http://chilts.org/\n// Written by Andrew Chilton <andychilton@gmail.com>\n//\n// License: http://opensource.org/licenses/MIT\n//\n// --------------------------------------------------------------------------------------------------------------------\n\nvar util = require('util');\n\n// --------------------------------------------------------------------------------------------------------------------\n\nvar sep  = '===============================================================================';\nvar line = '-------------------------------------------------------------------------------';\nvar field = '                    ';\n\n// --------------------------------------------------------------------------------------------------------------------\n\n// separator\nmodule.exports.separator = function() {\n    console.log(sep);\n};\n\n// alias the above\nmodule.exports.sep = module.exports.separator;\n\n// line\nmodule.exports.line = function() {\n    console.log(line);\n};\n\n// title\nmodule.exports.title = function(title) {\n    var out = '--- ' + title + ' ';\n    out += line.substr(out.length);\n    console.log(out);\n};\n\n// field\nmodule.exports.field = function(key, value) {\n    console.log('' + key + field.substr(key.length) + ' : ' + value);\n};\n\n// subfield\nmodule.exports.subfield = function(key, value) {\n    console.log('- ' + key + field.substr(key.length + 2) + ' : ' + value);\n};\n\n// list item\nmodule.exports.li = function(msg) {\n    console.log('* ' + msg);\n};\n\n// dump\nmodule.exports.dump = function(data, name) {\n    if ( name ) {\n        console.log(name + ' :', util.inspect(data, false, null, true));\n    }\n    else {\n        console.log(util.inspect(data, false, null, true));\n    }\n};\n\n// msg\nmodule.exports.msg = function(msg) {\n    console.log(msg);\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n"]},"metadata":{},"sourceType":"script"}