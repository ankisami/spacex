{"ast":null,"code":"/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\nvar debug = require('debug')('pm2:paths');\n\nvar p = require('path');\n\nvar fs = require('fs');\n\nfunction getDefaultPM2Home() {\n  var PM2_ROOT_PATH;\n  if (process.env.PM2_HOME) PM2_ROOT_PATH = process.env.PM2_HOME;else if (process.env.HOME && !process.env.HOMEPATH) PM2_ROOT_PATH = p.resolve(process.env.HOME, '.pm2');else if (process.env.HOME || process.env.HOMEPATH) PM2_ROOT_PATH = p.resolve(process.env.HOMEDRIVE, process.env.HOME || process.env.HOMEPATH, '.pm2');else {\n    console.error('[PM2][Initialization] Environment variable HOME (Linux) or HOMEPATH (Windows) are not set!');\n    console.error('[PM2][Initialization] Defaulting to /etc/.pm2');\n    PM2_ROOT_PATH = p.resolve('/etc', '.pm2');\n  }\n  debug('pm2 home resolved to %s', PM2_ROOT_PATH, process.env.HOME);\n  return PM2_ROOT_PATH;\n}\n\nmodule.exports = function (PM2_HOME) {\n  var has_node_embedded = false;\n\n  if (fs.existsSync(p.resolve(__dirname, './node')) === true) {\n    has_node_embedded = true;\n  }\n\n  if (!PM2_HOME) {\n    PM2_HOME = getDefaultPM2Home();\n  }\n\n  var pm2_file_stucture = {\n    PM2_HOME: PM2_HOME,\n    PM2_ROOT_PATH: PM2_HOME,\n    PM2_CONF_FILE: p.resolve(PM2_HOME, 'conf.js'),\n    PM2_MODULE_CONF_FILE: p.resolve(PM2_HOME, 'module_conf.json'),\n    PM2_LOG_FILE_PATH: p.resolve(PM2_HOME, 'pm2.log'),\n    PM2_PID_FILE_PATH: p.resolve(PM2_HOME, 'pm2.pid'),\n    PM2_RELOAD_LOCKFILE: p.resolve(PM2_HOME, 'reload.lock'),\n    DEFAULT_PID_PATH: p.resolve(PM2_HOME, 'pids'),\n    DEFAULT_LOG_PATH: p.resolve(PM2_HOME, 'logs'),\n    DEFAULT_MODULE_PATH: p.resolve(PM2_HOME, 'modules'),\n    PM2_IO_ACCESS_TOKEN: p.resolve(PM2_HOME, 'pm2-io-token'),\n    DUMP_FILE_PATH: p.resolve(PM2_HOME, 'dump.pm2'),\n    DUMP_BACKUP_FILE_PATH: p.resolve(PM2_HOME, 'dump.pm2.bak'),\n    DAEMON_RPC_PORT: p.resolve(PM2_HOME, 'rpc.sock'),\n    DAEMON_PUB_PORT: p.resolve(PM2_HOME, 'pub.sock'),\n    INTERACTOR_RPC_PORT: p.resolve(PM2_HOME, 'interactor.sock'),\n    INTERACTOR_LOG_FILE_PATH: p.resolve(PM2_HOME, 'agent.log'),\n    INTERACTOR_PID_PATH: p.resolve(PM2_HOME, 'agent.pid'),\n    INTERACTION_CONF: p.resolve(PM2_HOME, 'agent.json5'),\n    HAS_NODE_EMBEDDED: has_node_embedded,\n    BUILTIN_NODE_PATH: has_node_embedded === true ? p.resolve(__dirname, './node/bin/node') : null,\n    BUILTIN_NPM_PATH: has_node_embedded === true ? p.resolve(__dirname, './node/bin/npm') : null\n  }; // allow overide of file paths via environnement\n\n  var paths = Object.keys(pm2_file_stucture);\n  paths.forEach(function (key) {\n    var envKey = key.indexOf('PM2_') > -1 ? key : 'PM2_' + key;\n\n    if (process.env[envKey] && key !== 'PM2_HOME' && key !== 'PM2_ROOT_PATH') {\n      pm2_file_stucture[key] = process.env[envKey];\n    }\n  });\n\n  if (process.platform === 'win32' || process.platform === 'win64') {\n    //@todo instead of static unique rpc/pub file custom with PM2_HOME or UID\n    pm2_file_stucture.DAEMON_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\rpc.sock';\n    pm2_file_stucture.DAEMON_PUB_PORT = '\\\\\\\\.\\\\pipe\\\\pub.sock';\n    pm2_file_stucture.INTERACTOR_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\interactor.sock';\n  }\n\n  return pm2_file_stucture;\n};","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/paths.js"],"names":["debug","require","p","fs","getDefaultPM2Home","PM2_ROOT_PATH","process","env","PM2_HOME","HOME","HOMEPATH","resolve","HOMEDRIVE","console","error","module","exports","has_node_embedded","existsSync","__dirname","pm2_file_stucture","PM2_CONF_FILE","PM2_MODULE_CONF_FILE","PM2_LOG_FILE_PATH","PM2_PID_FILE_PATH","PM2_RELOAD_LOCKFILE","DEFAULT_PID_PATH","DEFAULT_LOG_PATH","DEFAULT_MODULE_PATH","PM2_IO_ACCESS_TOKEN","DUMP_FILE_PATH","DUMP_BACKUP_FILE_PATH","DAEMON_RPC_PORT","DAEMON_PUB_PORT","INTERACTOR_RPC_PORT","INTERACTOR_LOG_FILE_PATH","INTERACTOR_PID_PATH","INTERACTION_CONF","HAS_NODE_EMBEDDED","BUILTIN_NODE_PATH","BUILTIN_NPM_PATH","paths","Object","keys","forEach","key","envKey","indexOf","platform"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\n\nvar debug = require('debug')('pm2:paths');\nvar p     = require('path');\nvar fs    = require('fs')\n\nfunction getDefaultPM2Home() {\n  var PM2_ROOT_PATH;\n\n  if (process.env.PM2_HOME)\n    PM2_ROOT_PATH = process.env.PM2_HOME;\n  else if (process.env.HOME && !process.env.HOMEPATH)\n    PM2_ROOT_PATH = p.resolve(process.env.HOME, '.pm2');\n  else if (process.env.HOME || process.env.HOMEPATH)\n    PM2_ROOT_PATH = p.resolve(process.env.HOMEDRIVE, process.env.HOME || process.env.HOMEPATH, '.pm2');\n  else {\n    console.error('[PM2][Initialization] Environment variable HOME (Linux) or HOMEPATH (Windows) are not set!');\n    console.error('[PM2][Initialization] Defaulting to /etc/.pm2');\n    PM2_ROOT_PATH = p.resolve('/etc', '.pm2');\n  }\n\n  debug('pm2 home resolved to %s', PM2_ROOT_PATH, process.env.HOME);\n  return PM2_ROOT_PATH;\n}\n\nmodule.exports = function(PM2_HOME) {\n  var has_node_embedded = false\n\n  if (fs.existsSync(p.resolve(__dirname, './node')) === true) {\n    has_node_embedded = true\n  }\n\n  if (!PM2_HOME) {\n    PM2_HOME = getDefaultPM2Home()\n  }\n\n  var pm2_file_stucture = {\n    PM2_HOME                 : PM2_HOME,\n    PM2_ROOT_PATH            : PM2_HOME,\n\n    PM2_CONF_FILE            : p.resolve(PM2_HOME, 'conf.js'),\n    PM2_MODULE_CONF_FILE     : p.resolve(PM2_HOME, 'module_conf.json'),\n\n    PM2_LOG_FILE_PATH        : p.resolve(PM2_HOME, 'pm2.log'),\n    PM2_PID_FILE_PATH        : p.resolve(PM2_HOME, 'pm2.pid'),\n\n    PM2_RELOAD_LOCKFILE      : p.resolve(PM2_HOME, 'reload.lock'),\n\n    DEFAULT_PID_PATH         : p.resolve(PM2_HOME, 'pids'),\n    DEFAULT_LOG_PATH         : p.resolve(PM2_HOME, 'logs'),\n    DEFAULT_MODULE_PATH      : p.resolve(PM2_HOME, 'modules'),\n    PM2_IO_ACCESS_TOKEN      : p.resolve(PM2_HOME, 'pm2-io-token'),\n    DUMP_FILE_PATH           : p.resolve(PM2_HOME, 'dump.pm2'),\n    DUMP_BACKUP_FILE_PATH    : p.resolve(PM2_HOME, 'dump.pm2.bak'),\n\n    DAEMON_RPC_PORT          : p.resolve(PM2_HOME, 'rpc.sock'),\n    DAEMON_PUB_PORT          : p.resolve(PM2_HOME, 'pub.sock'),\n    INTERACTOR_RPC_PORT      : p.resolve(PM2_HOME, 'interactor.sock'),\n\n    INTERACTOR_LOG_FILE_PATH : p.resolve(PM2_HOME, 'agent.log'),\n    INTERACTOR_PID_PATH      : p.resolve(PM2_HOME, 'agent.pid'),\n    INTERACTION_CONF         : p.resolve(PM2_HOME, 'agent.json5'),\n\n    HAS_NODE_EMBEDDED        : has_node_embedded,\n    BUILTIN_NODE_PATH        : has_node_embedded === true ? p.resolve(__dirname, './node/bin/node') : null,\n    BUILTIN_NPM_PATH         : has_node_embedded === true ? p.resolve(__dirname, './node/bin/npm') : null,\n  };\n\n  // allow overide of file paths via environnement\n  var paths = Object.keys(pm2_file_stucture);\n  paths.forEach(function (key) {\n    var envKey = key.indexOf('PM2_') > -1 ? key : 'PM2_' + key;\n    if (process.env[envKey] && key !== 'PM2_HOME' && key !== 'PM2_ROOT_PATH') {\n      pm2_file_stucture[key] = process.env[envKey];\n    }\n  });\n\n  if (process.platform === 'win32' ||\n      process.platform === 'win64') {\n    //@todo instead of static unique rpc/pub file custom with PM2_HOME or UID\n    pm2_file_stucture.DAEMON_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\rpc.sock';\n    pm2_file_stucture.DAEMON_PUB_PORT = '\\\\\\\\.\\\\pipe\\\\pub.sock';\n    pm2_file_stucture.INTERACTOR_RPC_PORT = '\\\\\\\\.\\\\pipe\\\\interactor.sock';\n  }\n\n  return pm2_file_stucture;\n};\n"]},"metadata":{},"sourceType":"script"}