{"ast":null,"code":"var path = require('path');\n\nvar fs = require('fs');\n\nvar child = require('child_process');\n\nvar DEFAULT_MAXBUFFER_SIZE = 20 * 1024 * 1024;\n\nfunction _exec(command, options, callback) {\n  options = options || {};\n\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  if (typeof options === 'object' && typeof callback === 'function') {\n    options.async = true;\n  }\n\n  if (!command) {\n    try {\n      console.error('[sexec] must specify command');\n    } catch (e) {\n      return;\n    }\n  }\n\n  options = Object.assign({\n    silent: false,\n    cwd: path.resolve(process.cwd()).toString(),\n    env: process.env,\n    maxBuffer: DEFAULT_MAXBUFFER_SIZE,\n    encoding: 'utf8'\n  }, options);\n  var c = child.exec(command, options, function (err, stdout, stderr) {\n    if (callback) {\n      if (!err) {\n        callback(0, stdout, stderr);\n      } else if (err.code === undefined) {\n        // See issue #536\n\n        /* istanbul ignore next */\n        callback(1, stdout, stderr);\n      } else {\n        callback(err.code, stdout, stderr);\n      }\n    }\n  });\n\n  if (!options.silent) {\n    c.stdout.pipe(process.stdout);\n    c.stderr.pipe(process.stderr);\n  }\n}\n\nmodule.exports = _exec;","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/tools/sexec.js"],"names":["path","require","fs","child","DEFAULT_MAXBUFFER_SIZE","_exec","command","options","callback","async","console","error","e","Object","assign","silent","cwd","resolve","process","toString","env","maxBuffer","encoding","c","exec","err","stdout","stderr","code","undefined","pipe","module","exports"],"mappings":"AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,eAAD,CAAnB;;AAEA,IAAIG,sBAAsB,GAAG,KAAK,IAAL,GAAY,IAAzC;;AAEA,SAASC,KAAT,CAAeC,OAAf,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2C;AACzCD,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,GAAGD,OAAX;AACD;;AAED,MAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,QAAP,KAAoB,UAAvD,EAAmE;AACjED,IAAAA,OAAO,CAACE,KAAR,GAAgB,IAAhB;AACD;;AAED,MAAI,CAACH,OAAL,EAAc;AACZ,QAAI;AACFI,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV;AACD;AACF;;AAEDL,EAAAA,OAAO,GAAGM,MAAM,CAACC,MAAP,CAAc;AACtBC,IAAAA,MAAM,EAAE,KADc;AAEtBC,IAAAA,GAAG,EAAEhB,IAAI,CAACiB,OAAL,CAAaC,OAAO,CAACF,GAAR,EAAb,EAA4BG,QAA5B,EAFiB;AAGtBC,IAAAA,GAAG,EAAEF,OAAO,CAACE,GAHS;AAItBC,IAAAA,SAAS,EAAEjB,sBAJW;AAKtBkB,IAAAA,QAAQ,EAAE;AALY,GAAd,EAMPf,OANO,CAAV;AAQA,MAAIgB,CAAC,GAAGpB,KAAK,CAACqB,IAAN,CAAWlB,OAAX,EAAoBC,OAApB,EAA6B,UAAUkB,GAAV,EAAeC,MAAf,EAAuBC,MAAvB,EAA+B;AAClE,QAAInB,QAAJ,EAAc;AACZ,UAAI,CAACiB,GAAL,EAAU;AACRjB,QAAAA,QAAQ,CAAC,CAAD,EAAIkB,MAAJ,EAAYC,MAAZ,CAAR;AACD,OAFD,MAEO,IAAIF,GAAG,CAACG,IAAJ,KAAaC,SAAjB,EAA4B;AACjC;;AACA;AACArB,QAAAA,QAAQ,CAAC,CAAD,EAAIkB,MAAJ,EAAYC,MAAZ,CAAR;AACD,OAJM,MAIA;AACLnB,QAAAA,QAAQ,CAACiB,GAAG,CAACG,IAAL,EAAWF,MAAX,EAAmBC,MAAnB,CAAR;AACD;AACF;AACF,GAZO,CAAR;;AAcA,MAAI,CAACpB,OAAO,CAACQ,MAAb,EAAqB;AACnBQ,IAAAA,CAAC,CAACG,MAAF,CAASI,IAAT,CAAcZ,OAAO,CAACQ,MAAtB;AACAH,IAAAA,CAAC,CAACI,MAAF,CAASG,IAAT,CAAcZ,OAAO,CAACS,MAAtB;AACD;AACF;;AAEDI,MAAM,CAACC,OAAP,GAAiB3B,KAAjB","sourcesContent":["\nvar path = require('path');\nvar fs = require('fs');\nvar child = require('child_process');\n\nvar DEFAULT_MAXBUFFER_SIZE = 20 * 1024 * 1024;\n\nfunction _exec(command, options, callback) {\n  options = options || {};\n\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  if (typeof options === 'object' && typeof callback === 'function') {\n    options.async = true;\n  }\n\n  if (!command) {\n    try {\n      console.error('[sexec] must specify command');\n    } catch (e) {\n      return;\n    }\n  }\n\n  options = Object.assign({\n    silent: false,\n    cwd: path.resolve(process.cwd()).toString(),\n    env: process.env,\n    maxBuffer: DEFAULT_MAXBUFFER_SIZE,\n    encoding: 'utf8',\n  }, options);\n\n  var c = child.exec(command, options, function (err, stdout, stderr) {\n    if (callback) {\n      if (!err) {\n        callback(0, stdout, stderr);\n      } else if (err.code === undefined) {\n        // See issue #536\n        /* istanbul ignore next */\n        callback(1, stdout, stderr);\n      } else {\n        callback(err.code, stdout, stderr);\n      }\n    }\n  });\n\n  if (!options.silent) {\n    c.stdout.pipe(process.stdout);\n    c.stderr.pipe(process.stderr);\n  }\n}\n\nmodule.exports = _exec;\n"]},"metadata":{},"sourceType":"script"}