{"ast":null,"code":"/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\nvar fs = require('fs'),\n    util = require('util'),\n    chalk = require('chalk'),\n    forEachLimit = require('async/forEachLimit'),\n    dayjs = require('dayjs');\n\nvar Log = module.exports = {};\nvar DEFAULT_PADDING = '          ';\n/**\n * Tail logs from file stream.\n * @param {Object} apps_list\n * @param {Number} lines\n * @param {Boolean} raw\n * @param {Function} callback\n * @return\n */\n\nLog.tail = function (apps_list, lines, raw, callback) {\n  var that = this;\n  if (lines === 0 || apps_list.length === 0) return callback && callback();\n  var count = 0;\n\n  var getLastLines = function (filename, lines, callback) {\n    var chunk = '';\n    var size = Math.max(0, fs.statSync(filename).size - lines * 200);\n    var fd = fs.createReadStream(filename, {\n      start: size\n    });\n    fd.on('data', function (data) {\n      chunk += data.toString();\n    });\n    fd.on('end', function () {\n      chunk = chunk.split('\\n').slice(-(lines + 1));\n      chunk.pop();\n      callback(chunk);\n    });\n  };\n\n  apps_list.sort(function (a, b) {\n    return (fs.existsSync(a.path) ? fs.statSync(a.path).mtime.valueOf() : 0) - (fs.existsSync(b.path) ? fs.statSync(b.path).mtime.valueOf() : 0);\n  });\n  forEachLimit(apps_list, 1, function (app, next) {\n    if (!fs.existsSync(app.path || '')) return next();\n    getLastLines(app.path, lines, function (output) {\n      console.log(chalk.grey('%s last %d lines:'), app.path, lines);\n      output.forEach(function (out) {\n        if (raw) return app.type === 'err' ? console.error(out) : console.log(out);\n        if (app.type === 'out') process.stdout.write(chalk.green(pad(DEFAULT_PADDING, app.app_name) + ' | '));else if (app.type === 'err') process.stdout.write(chalk.red(pad(DEFAULT_PADDING, app.app_name) + ' | '));else process.stdout.write(chalk.blue(pad(DEFAULT_PADDING, 'PM2') + ' | '));\n        console.log(out);\n      });\n      if (output.length) process.stdout.write('\\n');\n      next();\n    });\n  }, function () {\n    callback && callback();\n  });\n};\n/**\n * Stream logs in realtime from the bus eventemitter.\n * @param {String} id\n * @param {Boolean} raw\n * @return\n */\n\n\nLog.stream = function (Client, id, raw, timestamp, exclusive, highlight) {\n  var that = this;\n  Client.launchBus(function (err, bus, socket) {\n    socket.on('reconnect attempt', function () {\n      if (global._auto_exit === true) {\n        if (timestamp) process.stdout.write(chalk['dim'](chalk.grey(dayjs().format(timestamp) + ' ')));\n        process.stdout.write(chalk.blue(pad(DEFAULT_PADDING, 'PM2') + ' | ') + '[[[ Target PM2 killed. ]]]');\n        process.exit(0);\n      }\n    });\n    var min_padding = 3;\n    bus.on('log:*', function (type, packet) {\n      if (id !== 'all' && packet.process.name != id && packet.process.pm_id != id) return;\n      if (type === 'out' && exclusive === 'err' || type === 'err' && exclusive === 'out' || type === 'PM2' && exclusive !== false) return;\n      var lines;\n      if (typeof packet.data === 'string') lines = (packet.data || '').split('\\n');else return;\n      lines.forEach(function (line) {\n        if (!line || line.length === 0) return;\n        if (raw) return type === 'err' ? process.stderr.write(util.format(line) + '\\n') : process.stdout.write(util.format(line) + '\\n');\n        if (timestamp) process.stdout.write(chalk['dim'](chalk.grey(dayjs().format(timestamp) + ' ')));\n        var name = packet.process.pm_id + '|' + packet.process.name;\n        if (name.length > min_padding) min_padding = name.length + 1;\n        if (type === 'out') process.stdout.write(chalk.green(pad(' '.repeat(min_padding), name) + ' | '));else if (type === 'err') process.stdout.write(chalk.red(pad(' '.repeat(min_padding), name) + ' | '));else if (!raw && (id === 'all' || id === 'PM2')) process.stdout.write(chalk.blue(pad(' '.repeat(min_padding), 'PM2') + ' | '));\n        if (highlight) process.stdout.write(util.format(line).replace(highlight, chalk.bgBlackBright(highlight)) + '\\n');else process.stdout.write(util.format(line) + '\\n');\n      });\n    });\n  });\n};\n\nLog.devStream = function (Client, id, raw, timestamp, exclusive) {\n  var that = this;\n  Client.launchBus(function (err, bus) {\n    setTimeout(function () {\n      bus.on('process:event', function (packet) {\n        if (packet.event == 'online') console.log(chalk.green('[rundev] App %s restarted'), packet.process.name);\n      });\n    }, 1000);\n    var min_padding = 3;\n    bus.on('log:*', function (type, packet) {\n      if (id !== 'all' && packet.process.name != id && packet.process.pm_id != id) return;\n      if (type === 'out' && exclusive === 'err' || type === 'err' && exclusive === 'out' || type === 'PM2' && exclusive !== false) return;\n      if (type === 'PM2') return;\n      var name = packet.process.pm_id + '|' + packet.process.name;\n      var lines;\n      if (typeof packet.data === 'string') lines = (packet.data || '').split('\\n');else return;\n      lines.forEach(function (line) {\n        if (!line || line.length === 0) return;\n        if (raw) return process.stdout.write(util.format(line) + '\\n');\n        if (timestamp) process.stdout.write(chalk['dim'](chalk.grey(dayjs().format(timestamp) + ' ')));\n        var name = packet.process.name + '-' + packet.process.pm_id;\n        if (name.length > min_padding) min_padding = name.length + 1;\n        if (type === 'out') process.stdout.write(chalk.green(pad(' '.repeat(min_padding), name) + ' | '));else if (type === 'err') process.stdout.write(chalk.red(pad(' '.repeat(min_padding), name) + ' | '));else if (!raw && (id === 'all' || id === 'PM2')) process.stdout.write(chalk.blue(pad(' '.repeat(min_padding), 'PM2') + ' | '));\n        process.stdout.write(util.format(line) + '\\n');\n      });\n    });\n  });\n};\n\nLog.jsonStream = function (Client, id) {\n  var that = this;\n  Client.launchBus(function (err, bus) {\n    if (err) console.error(err);\n    bus.on('process:event', function (packet) {\n      process.stdout.write(JSON.stringify({\n        timestamp: dayjs(packet.at),\n        type: 'process_event',\n        status: packet.event,\n        app_name: packet.process.name\n      }));\n      process.stdout.write('\\n');\n    });\n    bus.on('log:*', function (type, packet) {\n      if (id !== 'all' && packet.process.name != id && packet.process.pm_id != id) return;\n      if (type === 'PM2') return;\n      if (typeof packet.data == 'string') packet.data = packet.data.replace(/(\\r\\n|\\n|\\r)/gm, '');\n      process.stdout.write(JSON.stringify({\n        message: packet.data,\n        timestamp: dayjs(packet.at),\n        type: type,\n        process_id: packet.process.pm_id,\n        app_name: packet.process.name\n      }));\n      process.stdout.write('\\n');\n    });\n  });\n};\n\nLog.formatStream = function (Client, id, raw, timestamp, exclusive, highlight) {\n  var that = this;\n  Client.launchBus(function (err, bus) {\n    bus.on('log:*', function (type, packet) {\n      if (id !== 'all' && packet.process.name != id && packet.process.pm_id != id) return;\n      if (type === 'out' && exclusive === 'err' || type === 'err' && exclusive === 'out' || type === 'PM2' && exclusive !== false) return;\n      if (type === 'PM2' && raw) return;\n      var name = packet.process.name + '-' + packet.process.pm_id;\n      var lines;\n      if (typeof packet.data === 'string') lines = (packet.data || '').split('\\n');else return;\n      lines.forEach(function (line) {\n        if (!line || line.length === 0) return;\n\n        if (!raw) {\n          if (timestamp) process.stdout.write('timestamp=' + dayjs().format(timestamp) + ' ');\n          if (packet.process.name === 'PM2') process.stdout.write('app=pm2 ');\n          if (packet.process.name !== 'PM2') process.stdout.write('app=' + packet.process.name + ' id=' + packet.process.pm_id + ' ');\n          if (type === 'out') process.stdout.write('type=out ');else if (type === 'err') process.stdout.write('type=error ');\n        }\n\n        process.stdout.write('message=');\n        if (highlight) process.stdout.write(util.format(line).replace(highlight, chalk.bgBlackBright(highlight)) + '\\n');else process.stdout.write(util.format(line) + '\\n');\n      });\n    });\n  });\n};\n\nfunction pad(pad, str, padLeft) {\n  if (typeof str === 'undefined') return pad;\n\n  if (padLeft) {\n    return (pad + str).slice(-pad.length);\n  } else {\n    return (str + pad).substring(0, pad.length);\n  }\n}","map":{"version":3,"sources":["/Users/samianki/node_modules/pm2/lib/API/Log.js"],"names":["fs","require","util","chalk","forEachLimit","dayjs","Log","module","exports","DEFAULT_PADDING","tail","apps_list","lines","raw","callback","that","length","count","getLastLines","filename","chunk","size","Math","max","statSync","fd","createReadStream","start","on","data","toString","split","slice","pop","sort","a","b","existsSync","path","mtime","valueOf","app","next","output","console","log","grey","forEach","out","type","error","process","stdout","write","green","pad","app_name","red","blue","stream","Client","id","timestamp","exclusive","highlight","launchBus","err","bus","socket","global","_auto_exit","format","exit","min_padding","packet","name","pm_id","line","stderr","repeat","replace","bgBlackBright","devStream","setTimeout","event","jsonStream","JSON","stringify","at","status","message","process_id","formatStream","str","padLeft","substring"],"mappings":"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","sourcesContent":["/**\n * Copyright 2013 the PM2 project authors. All rights reserved.\n * Use of this source code is governed by a license that\n * can be found in the LICENSE file.\n */\nvar fs     = require('fs'),\n    util   = require('util'),\n    chalk  = require('chalk'),\n    forEachLimit  = require('async/forEachLimit'),\n    dayjs = require('dayjs');\n\nvar Log = module.exports = {};\n\nvar DEFAULT_PADDING = '          ';\n\n/**\n * Tail logs from file stream.\n * @param {Object} apps_list\n * @param {Number} lines\n * @param {Boolean} raw\n * @param {Function} callback\n * @return\n */\n\nLog.tail = function(apps_list, lines, raw, callback) {\n  var that = this;\n\n  if (lines === 0 || apps_list.length === 0)\n    return callback && callback();\n\n  var count = 0;\n\n  var getLastLines = function (filename, lines, callback) {\n    var chunk = '';\n    var size = Math.max(0, fs.statSync(filename).size - (lines * 200));\n\n    var fd = fs.createReadStream(filename, {start : size});\n    fd.on('data', function(data) { chunk += data.toString(); });\n    fd.on('end', function() {\n      chunk = chunk.split('\\n').slice(-(lines+1));\n      chunk.pop();\n      callback(chunk);\n    });\n  };\n\n  apps_list.sort(function(a, b) {\n    return (fs.existsSync(a.path) ? fs.statSync(a.path).mtime.valueOf() : 0) -\n      (fs.existsSync(b.path) ? fs.statSync(b.path).mtime.valueOf() : 0);\n  });\n\n  forEachLimit(apps_list, 1, function(app, next) {\n    if (!fs.existsSync(app.path || ''))\n      return next();\n\n    getLastLines(app.path, lines, function(output) {\n      console.log(chalk.grey('%s last %d lines:'), app.path, lines);\n      output.forEach(function(out) {\n        if (raw)\n          return app.type === 'err' ? console.error(out) : console.log(out);\n        if (app.type === 'out')\n          process.stdout.write(chalk.green(pad(DEFAULT_PADDING, app.app_name)  + ' | '));\n        else if (app.type === 'err')\n          process.stdout.write(chalk.red(pad(DEFAULT_PADDING, app.app_name)  + ' | '));\n        else\n          process.stdout.write(chalk.blue(pad(DEFAULT_PADDING, 'PM2') + ' | '));\n        console.log(out);\n      });\n      if (output.length)\n        process.stdout.write('\\n');\n      next();\n    });\n  }, function() {\n    callback && callback();\n  });\n};\n\n/**\n * Stream logs in realtime from the bus eventemitter.\n * @param {String} id\n * @param {Boolean} raw\n * @return\n */\n\nLog.stream = function(Client, id, raw, timestamp, exclusive, highlight) {\n  var that = this;\n\n  Client.launchBus(function(err, bus, socket) {\n\n    socket.on('reconnect attempt', function() {\n      if (global._auto_exit === true) {\n        if (timestamp)\n          process.stdout.write(chalk['dim'](chalk.grey(dayjs().format(timestamp) + ' ')));\n        process.stdout.write(chalk.blue(pad(DEFAULT_PADDING, 'PM2') + ' | ') + '[[[ Target PM2 killed. ]]]');\n        process.exit(0);\n      }\n    });\n\n    var min_padding = 3\n\n    bus.on('log:*', function(type, packet) {\n      if (id !== 'all'\n          && packet.process.name != id\n          && packet.process.pm_id != id)\n        return;\n\n      if ((type === 'out' && exclusive === 'err')\n         || (type === 'err' && exclusive === 'out')\n         || (type === 'PM2' && exclusive !== false))\n        return;\n\n      var lines;\n\n      if (typeof(packet.data) === 'string')\n        lines = (packet.data || '').split('\\n');\n      else\n        return;\n\n      lines.forEach(function(line) {\n        if (!line || line.length === 0) return;\n\n        if (raw)\n          return type === 'err' ? process.stderr.write(util.format(line) + '\\n') : process.stdout.write(util.format(line) + '\\n');\n\n        if (timestamp)\n          process.stdout.write(chalk['dim'](chalk.grey(dayjs().format(timestamp) + ' ')));\n\n        var name = packet.process.pm_id + '|' + packet.process.name;\n\n        if (name.length > min_padding)\n          min_padding = name.length + 1\n\n        if (type === 'out')\n          process.stdout.write(chalk.green(pad(' '.repeat(min_padding), name)  + ' | '));\n        else if (type === 'err')\n          process.stdout.write(chalk.red(pad(' '.repeat(min_padding), name)  + ' | '));\n        else if (!raw && (id === 'all' || id === 'PM2'))\n          process.stdout.write(chalk.blue(pad(' '.repeat(min_padding), 'PM2') + ' | '));\n        if (highlight)\n          process.stdout.write(util.format(line).replace(highlight, chalk.bgBlackBright(highlight)) + '\\n');\n        else\n          process.stdout.write(util.format(line)+ '\\n');\n      });\n    });\n  });\n};\n\nLog.devStream = function(Client, id, raw, timestamp, exclusive) {\n  var that = this;\n\n  Client.launchBus(function(err, bus) {\n\n    setTimeout(function() {\n      bus.on('process:event', function(packet) {\n        if (packet.event == 'online')\n          console.log(chalk.green('[rundev] App %s restarted'), packet.process.name);\n      });\n    }, 1000);\n\n    var min_padding = 3\n\n    bus.on('log:*', function(type, packet) {\n      if (id !== 'all'\n          && packet.process.name != id\n          && packet.process.pm_id != id)\n        return;\n\n      if ((type === 'out' && exclusive === 'err')\n          || (type === 'err' && exclusive === 'out')\n          || (type === 'PM2' && exclusive !== false))\n        return;\n\n      if (type === 'PM2')\n        return;\n\n      var name = packet.process.pm_id + '|' + packet.process.name;\n\n      var lines;\n\n      if (typeof(packet.data) === 'string')\n        lines = (packet.data || '').split('\\n');\n      else\n        return;\n\n      lines.forEach(function(line) {\n        if (!line || line.length === 0) return;\n\n        if (raw)\n          return process.stdout.write(util.format(line) + '\\n');\n\n        if (timestamp)\n          process.stdout.write(chalk['dim'](chalk.grey(dayjs().format(timestamp) + ' ')));\n\n        var name = packet.process.name + '-' + packet.process.pm_id;\n\n        if (name.length > min_padding)\n          min_padding = name.length + 1\n\n        if (type === 'out')\n          process.stdout.write(chalk.green(pad(' '.repeat(min_padding), name)  + ' | '));\n        else if (type === 'err')\n          process.stdout.write(chalk.red(pad(' '.repeat(min_padding), name)  + ' | '));\n        else if (!raw && (id === 'all' || id === 'PM2'))\n          process.stdout.write(chalk.blue(pad(' '.repeat(min_padding), 'PM2') + ' | '));\n        process.stdout.write(util.format(line) + '\\n');\n      });\n    });\n  });\n};\n\nLog.jsonStream = function(Client, id) {\n  var that = this;\n\n  Client.launchBus(function(err, bus) {\n    if (err) console.error(err);\n\n    bus.on('process:event', function(packet) {\n      process.stdout.write(JSON.stringify({\n        timestamp : dayjs(packet.at),\n        type      : 'process_event',\n        status    : packet.event,\n        app_name  : packet.process.name\n      }));\n      process.stdout.write('\\n');\n    });\n\n    bus.on('log:*', function(type, packet) {\n      if (id !== 'all'\n          && packet.process.name != id\n          && packet.process.pm_id != id)\n        return;\n\n      if (type === 'PM2')\n        return;\n\n      if (typeof(packet.data) == 'string')\n        packet.data = packet.data.replace(/(\\r\\n|\\n|\\r)/gm,'');\n\n      process.stdout.write(JSON.stringify({\n        message : packet.data,\n        timestamp : dayjs(packet.at),\n        type : type,\n        process_id : packet.process.pm_id,\n        app_name : packet.process.name\n      }));\n      process.stdout.write('\\n');\n    });\n  });\n};\n\nLog.formatStream = function(Client, id, raw, timestamp, exclusive, highlight) {\n  var that = this;\n\n  Client.launchBus(function(err, bus) {\n\n    bus.on('log:*', function(type, packet) {\n      if (id !== 'all'\n          && packet.process.name != id\n          && packet.process.pm_id != id)\n        return;\n\n      if ((type === 'out' && exclusive === 'err')\n          || (type === 'err' && exclusive === 'out')\n          || (type === 'PM2' && exclusive !== false))\n        return;\n\n      if (type === 'PM2' && raw)\n        return;\n\n      var name = packet.process.name + '-' + packet.process.pm_id;\n\n      var lines;\n\n      if (typeof(packet.data) === 'string')\n        lines = (packet.data || '').split('\\n');\n      else\n        return;\n\n      lines.forEach(function(line) {\n        if (!line || line.length === 0) return;\n\n        if (!raw) {\n          if (timestamp)\n            process.stdout.write('timestamp=' + dayjs().format(timestamp) + ' ');\n          if (packet.process.name === 'PM2')\n            process.stdout.write('app=pm2 ');\n          if (packet.process.name !== 'PM2')\n            process.stdout.write('app=' + packet.process.name + ' id=' + packet.process.pm_id + ' ');\n          if (type === 'out')\n            process.stdout.write('type=out ');\n          else if (type === 'err')\n            process.stdout.write('type=error ');\n        }\n\n        process.stdout.write('message=');\n        if (highlight)\n          process.stdout.write(util.format(line).replace(highlight, chalk.bgBlackBright(highlight)) + '\\n');\n        else\n          process.stdout.write(util.format(line) + '\\n');\n      });\n    });\n  });\n};\n\nfunction pad(pad, str, padLeft) {\n  if (typeof str === 'undefined')\n    return pad;\n  if (padLeft) {\n    return (pad + str).slice(-pad.length);\n  } else {\n    return (str + pad).substring(0, pad.length);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}